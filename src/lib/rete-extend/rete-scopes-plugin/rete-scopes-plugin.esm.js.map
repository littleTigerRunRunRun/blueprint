{"version":3,"file":"rete-scopes-plugin.esm.js","sources":["src/ordering.ts","src/sizing.ts","src/scope.ts","src/utils.ts","src/validation.ts","src/agents/classic/index.ts","src/presets/classic/index.ts","src/presets/index.ts","src/index.ts"],"sourcesContent":["import { ConnectionId, NodeEditor, NodeId } from 'rete'\r\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ExpectedScheme } from './types'\r\n\r\ntype Props<T> = {\r\n  editor: NodeEditor<ExpectedScheme>,\r\n  area: BaseAreaPlugin<ExpectedScheme, BaseArea<ExpectedScheme> | T>\r\n}\r\n\r\nfunction bringConnectionForward<T>(id: ConnectionId, props: Props<T>) {\r\n  const view = props.area.connectionViews.get(id)\r\n\r\n  if (view) {\r\n    props.area.area.content.reorder(view.element, null)\r\n  }\r\n}\r\n\r\nfunction bringConnectionBack<T>(id: ConnectionId, props: Props<T>) {\r\n  const view = props.area.connectionViews.get(id)\r\n  const { content } = props.area.area\r\n\r\n  if (view) {\r\n    content.reorder(view.element, content.holder.firstChild)\r\n  }\r\n}\r\n\r\nfunction bringForward<T>(nodeId: NodeId, props: Props<T>) {\r\n  const view = props.area.nodeViews.get(nodeId)\r\n  const connections = props.editor.getConnections().filter(c => {\r\n    return nodeId === c.source || nodeId === c.target\r\n  })\r\n  const children = props.editor.getNodes().filter(n => {\r\n    return n.parent === nodeId\r\n  })\r\n\r\n  connections.forEach(connection => bringConnectionForward(connection.id, props))\r\n\r\n  if (view) {\r\n    props.area.area.content.reorder(view.element, null)\r\n  }\r\n\r\n  children.forEach(child => bringForward(child.id, props))\r\n}\r\n\r\nexport function useOrdering<T>(props: Props<T>) {\r\n  // eslint-disable-next-line max-statements\r\n  props.area.addPipe(async context => {\r\n    if (!(context instanceof Object) || !('type' in context)) return context\r\n    if (context.type === 'nodepicked') {\r\n      bringForward(context.data.id, props)\r\n    }\r\n    if (context.type === 'connectioncreated') {\r\n      const { id } = context.data\r\n      const connection = props.editor.getConnection(id)\r\n\r\n      if (!connection) throw new Error('connection was removed')\r\n      bringConnectionBack(context.data.id, props)\r\n      bringForward(connection.source, props)\r\n      bringForward(connection.target, props)\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { NodeEditor } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { AgentParams } from './agents/types'\r\nimport { ExpectedScheme } from './types'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\nexport function getNodesBoundingBox<T>(nodes: ExpectedScheme['Node'][], { area }: Props<T>) {\r\n  const boxes = nodes.map(node => {\r\n    const view = area.nodeViews.get(node.id)\r\n\r\n    if (!view) throw new Error('view')\r\n\r\n    return {\r\n      position: view.position,\r\n      width: node.width,\r\n      height: node.height\r\n    }\r\n  })\r\n\r\n  const left = Math.min(...boxes.map(b => b.position.x))\r\n  const right = Math.max(...boxes.map(b => b.position.x + b.width))\r\n  const top = Math.min(...boxes.map(b => b.position.y))\r\n  const bottom = Math.max(...boxes.map(b => b.position.y + b.height))\r\n  const width = right - left\r\n  const height = bottom - top\r\n\r\n  return {\r\n    top,\r\n    left,\r\n    right,\r\n    bottom,\r\n    width,\r\n    height\r\n  }\r\n}\r\n\r\ntype Size = { width: number, height: number }\r\n\r\nexport function updateNodeSizes<T>(node: ExpectedScheme['Node'], size: Size, { area }: Props<T>) {\r\n  const { width, height } = size\r\n\r\n  node.width = width\r\n  node.height = height\r\n\r\n  area.resize(node.id, width, height)\r\n}\r\n\r\n// eslint-disable-next-line max-statements\r\nexport async function resizeParent<T>(parent: ExpectedScheme['Node'], agentParams: AgentParams, props: Props<T>) {\r\n  const { id } = parent\r\n  const children = props.editor.getNodes()\r\n    .filter(child => child.parent === id)\r\n    .filter(node => !agentParams.exclude(node.id))\r\n  const padding = agentParams.padding(id)\r\n\r\n  if (children.length === 0) {\r\n    const size = agentParams.size(id, {\r\n      width: padding.left + padding.right,\r\n      height: padding.top + padding.bottom\r\n    })\r\n\r\n    updateNodeSizes(parent, size, props)\r\n  } else {\r\n    const { top, left, width, height } = getNodesBoundingBox(children, props)\r\n\r\n    const outerWidth = width + padding.left + padding.right\r\n    const outerHeight = height + padding.top + padding.bottom\r\n    const outerTop = top - padding.top\r\n    const outerLeft = left - padding.left\r\n\r\n    updateNodeSizes(parent, agentParams.size(id, { width: outerWidth, height: outerHeight }), props)\r\n    await agentParams.translate(parent.id, outerLeft, outerTop)\r\n  }\r\n  if (parent.parent) {\r\n    const parentsParent = props.editor.getNode(parent.parent)\r\n\r\n    if (parentsParent) {\r\n      await resizeParent(parentsParent, agentParams, props)\r\n    }\r\n  }\r\n}\r\n","import { NodeEditor, NodeId } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { AgentParams } from './agents/types'\r\nimport { resizeParent } from './sizing'\r\nimport { ExpectedScheme, Position } from './types'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\n// eslint-disable-next-line max-statements, max-len\r\nexport async function reassignParent<T>(ids: NodeId[], pointer: { x: number, y: number }, agentParams: AgentParams, props: Props<T>) {\r\n  if (!ids.length) return\r\n  const nodes = ids\r\n    .map(id => props.editor.getNode(id))\r\n    .filter((n): n is ExpectedScheme['Node'] => Boolean(n))\r\n\r\n  const overlayNodes = props.editor.getNodes()\r\n    .filter((node) => agentParams.elder(node.id))\r\n    .map(node => {\r\n      const view = props.area.nodeViews.get(node.id)\r\n\r\n      if (!view) throw new Error('node view')\r\n\r\n      return { node, view }\r\n    }).filter(({ node, view }) => {\r\n      return !ids.includes(node.id)\r\n        && pointer.x > view.position.x\r\n        && pointer.y > view.position.y\r\n        && pointer.x < view.position.x + node.width\r\n        && pointer.y < view.position.y + node.height\r\n    })\r\n  const areaElements = Array.from(props.area.area.content.holder.childNodes)\r\n  const overlayNodesWithIndex = overlayNodes.map(({ node, view }) => {\r\n    const index = areaElements.indexOf(view.element)\r\n\r\n    return { node, view, index }\r\n  })\r\n\r\n  overlayNodesWithIndex.sort((a, b) => b.index - a.index)\r\n  const topOverlayParent = overlayNodesWithIndex[0]\r\n\r\n  const formerParents = nodes\r\n    .map(node => node.parent)\r\n    .filter((id): id is string => Boolean(id))\r\n    .map(id => {\r\n      const node = props.editor.getNode(id)\r\n\r\n      if (!node) throw new Error('node')\r\n\r\n      return node\r\n    })\r\n\r\n  // eslint-disable-next-line no-undefined\r\n  nodes.forEach(node => node.parent = undefined)\r\n  if (topOverlayParent) {\r\n    nodes.forEach(node => node.parent = topOverlayParent.node.id)\r\n    await resizeParent(topOverlayParent.node, agentParams, props)\r\n  }\r\n\r\n  for (const formerParent of formerParents) {\r\n    await resizeParent(formerParent, agentParams, props)\r\n  }\r\n}\r\n\r\nexport async function translateChildren<T>(\r\n  id: NodeId,\r\n  { position, previous }: { position: Position, previous: Position },\r\n  props: Props<T>\r\n) {\r\n  const children = props.editor.getNodes().filter(n => n.parent === id)\r\n\r\n  await Promise.all(children.map(async n => {\r\n    const dx = position.x - previous.x\r\n    const dy = position.y - previous.y\r\n\r\n    const view = props.area.nodeViews.get(n.id)\r\n    const node = props.editor.getNode(n.id)\r\n\r\n    if (view && node && !node.selected) {\r\n      const nodePosition = view.position\r\n\r\n      await view.translate(nodePosition.x + dx, nodePosition.y + dy)\r\n    }\r\n  }))\r\n}\r\n","import { BaseSchemes, NodeEditor, NodeId } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ExpectedScheme } from './types'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\nexport function belongsTo<T>(nodeId: NodeId, ids: NodeId[], props: Props<T>) {\r\n  const node = props.editor.getNode(nodeId)\r\n\r\n  if (!node) throw new Error('node')\r\n\r\n  if (ids.includes(nodeId)) return true\r\n  if (!node.parent) return false\r\n  if (belongsTo(node.parent, ids, props)) return true\r\n}\r\n\r\nexport function hasSelectedParent<T>(nodeId: NodeId, props: Props<T>): boolean {\r\n  const node = props.editor.getNode(nodeId)\r\n\r\n  if (!node) throw new Error('node')\r\n\r\n  if (!node.parent) return false\r\n\r\n  const parent = props.editor.getNode(node.parent)\r\n\r\n  if (!parent) throw new Error('node')\r\n\r\n  if (parent.selected) return true\r\n\r\n  return hasSelectedParent(node.parent, props)\r\n}\r\n\r\nexport type Translate = (nodeId: string, x: number, y: number) => Promise<void>\r\n\r\n/**\r\n * keep track of currently moving nodes (to prevent infinite loop)\r\n */\r\nexport function trackedTranslate<T>(props: Props<T>): {\r\n  translate: Translate,\r\n  isTranslating: (id: NodeId) => boolean\r\n} {\r\n  const active = new Map<NodeId, number>()\r\n  const increment = (id: NodeId) => active.set(id, (active.get(id) || 0) + 1)\r\n  const decrement = (id: NodeId) => active.set(id, (active.get(id) || 0) - 1)\r\n\r\n  return {\r\n    async translate(id, x, y) {\r\n      const view = props.area.nodeViews.get(id)\r\n\r\n      if (!view) throw new Error('cannot find parent node view')\r\n\r\n      const previous = view.position\r\n\r\n      if (previous.x !== x || previous.y !== y) {\r\n        increment(id)\r\n        await view.translate(x, y)\r\n        decrement(id)\r\n      }\r\n    },\r\n    isTranslating(id) {\r\n      return (active.get(id) || 0) > 0\r\n    }\r\n  }\r\n}\r\n\r\nexport function watchClearing(editor: NodeEditor<BaseSchemes>) {\r\n  let state = false\r\n\r\n  editor.addPipe(context => {\r\n    if (context.type === 'clear') {\r\n      state = true\r\n    }\r\n    if (context.type === 'cleared' || context.type === 'clearcancelled') {\r\n      state = false\r\n    }\r\n    return context\r\n  })\r\n\r\n  return () => state\r\n}\r\n","import { NodeEditor } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ExpectedScheme } from './types'\r\nimport { watchClearing } from './utils'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\nexport function useValidator<T>(props: Props<T>) {\r\n  const isClearing = watchClearing(props.editor)\r\n\r\n  // eslint-disable-next-line max-statements\r\n  props.area.addPipe(context => {\r\n    if (!context || !(typeof context === 'object' && 'type' in context)) return context\r\n    if (context.type === 'nodecreate') {\r\n      const parentId = context.data.parent\r\n\r\n      if (parentId) {\r\n        const parent = props.editor.getNodes().find(n => n.id === parentId)\r\n\r\n        if (!parent) throw new Error('parent node doesnt exist')\r\n      }\r\n    }\r\n    if (context.type === 'noderemove' && !isClearing()) {\r\n      const { id } = context.data\r\n\r\n      const child = props.editor.getNodes().find(n => n.parent === id)\r\n\r\n      if (child) throw new Error('cannot remove parent node with a children')\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { NodeId } from 'rete'\r\n\r\nimport { getPickedNodes } from '../..'\r\nimport { reassignParent } from '../../scope'\r\nimport { Position } from '../../types'\r\nimport { AgentContext, AgentParams, ScopeAgent } from '../types'\r\n\r\nexport type DefaultScopesAgentParams = AgentParams & {\r\n  timeout?: number\r\n}\r\n\r\nexport const useScopeAgent: ScopeAgent = (params: DefaultScopesAgentParams, { area, editor, scopes }) => {\r\n  const timeout = params.timeout || 250\r\n\r\n  let picked: { timeout: number } | null = null\r\n  let candidates: string[] = []\r\n\r\n  function cancel() {\r\n    if (picked) {\r\n      window.clearTimeout(picked.timeout)\r\n      picked = null\r\n    }\r\n  }\r\n\r\n  function pick(id: NodeId) {\r\n    const timeoutId = window.setTimeout(() => {\r\n      const selected = editor.getNodes().filter(n => n.selected)\r\n      const targets = selected.length ? selected.map(n => n.id) : [id]\r\n\r\n      candidates.push(...targets)\r\n      scopes.emit({ type: 'scopepicked', data: { ids: targets } })\r\n    }, timeout)\r\n\r\n    picked = { timeout: timeoutId }\r\n  }\r\n  function release() {\r\n    const list = [...candidates]\r\n\r\n    cancel()\r\n    candidates = []\r\n\r\n    scopes.emit({ type: 'scopereleased', data: { ids: list } })\r\n\r\n    return list\r\n  }\r\n\r\n  area.addPipe(async context => {\r\n    if (!(context instanceof Object) || !('type' in context)) return context\r\n    if (context.type === 'nodepicked') {\r\n      pick(context.data.id)\r\n    }\r\n    if (context.type === 'nodetranslated') {\r\n      cancel()\r\n    }\r\n    if (context.type === 'nodedragged') {\r\n      const { pointer } = area.area\r\n      const ids = release()\r\n\r\n      if (ids.length === 0) return\r\n\r\n      await reassignParent(ids, pointer, params, { area, editor })\r\n    }\r\n    return context\r\n  })\r\n}\r\n\r\nexport function useVisualEffects<T>(params: DefaultScopesAgentParams, { area, editor, scopes }: AgentContext<T>): void {\r\n  const pickedNodes = getPickedNodes(scopes)\r\n  let previousHighlighted: string | null = null\r\n  let clientPointerPostion: Position | null = null\r\n\r\n  // eslint-disable-next-line max-statements\r\n  function updateHighlightedScopes(position: { x: number, y: number }, nodes: NodeId[]) {\r\n    // 如果先前有高亮对象，先取消其高亮\r\n    if (previousHighlighted) {\r\n      const view = area.nodeViews.get(previousHighlighted)\r\n\r\n      if (view && nodes.length) view.element.style.opacity = '0.4'\r\n      previousHighlighted = null\r\n    }\r\n    if (nodes.length) {\r\n      const { x, y } = position\r\n      const elements = document.elementsFromPoint(x, y)\r\n      const nodeViews = editor.getNodes().filter(node => {\r\n        return params.elder(node.id)\r\n      }).map(node => {\r\n        const view = area.nodeViews.get(node.id)\r\n\r\n        if (!view) throw new Error('view')\r\n\r\n        return {\r\n          node,\r\n          view\r\n        }\r\n      })\r\n\r\n      const intersectedNodes = elements\r\n        .map(el => nodeViews.find(item => item.view.element === el))\r\n        .filter((item): item is Exclude<typeof item, undefined> => Boolean(item))\r\n\r\n      const nonSelected = intersectedNodes\r\n        .filter(item => !item.node.selected)\r\n      // 从交互点出发，找到画布中交互点位置上的节点们，然后和画布中记录的节点做比对，找出交叉内容，之后剔除选中（正在拖拽的）的内容后，第一个交互点就是会进行拖入操作的。\r\n      const first = nonSelected[0]\r\n\r\n      if (first) {\r\n        first.view.element.style.opacity = '0.8'\r\n        previousHighlighted = first.node.id\r\n      }\r\n    }\r\n  }\r\n  // eslint-disable-next-line max-statements\r\n  scopes.addPipe(context => {\r\n    if (context.type === 'scopepicked') {\r\n      const { ids } = context.data\r\n\r\n      // 未选中的节点统统改为虚化（opacity=0.4)\r\n      editor.getNodes().filter(n => !ids.includes(n.id)).forEach(node => {\r\n        const view = area.nodeViews.get(node.id)\r\n\r\n        if (view) view.element.style.opacity = '0.4'\r\n      })\r\n      if (clientPointerPostion) {\r\n        updateHighlightedScopes(clientPointerPostion, pickedNodes)\r\n      }\r\n    }\r\n    if (context.type === 'scopereleased') {\r\n      const { ids } = context.data\r\n\r\n      // 未选中的节点统统解除虚化（opacity='')\r\n      editor.getNodes().filter(n => !ids.includes(n.id)).forEach(node => {\r\n        const view = area.nodeViews.get(node.id)\r\n\r\n        if (view) view.element.style.opacity = ''\r\n      })\r\n      if (clientPointerPostion) {\r\n        updateHighlightedScopes(clientPointerPostion, pickedNodes)\r\n      }\r\n    }\r\n    if (context.type === 'pointermove') {\r\n      clientPointerPostion = {\r\n        x: context.data.event.clientX,\r\n        y: context.data.event.clientY\r\n      }\r\n      updateHighlightedScopes(clientPointerPostion, pickedNodes)\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { classic } from '../../agents'\r\nimport { Preset } from '../types'\r\n\r\n/**\r\n * Classic preset allowing capturing a node by long-pressing it and dropping it onto another node to make it a nested.\r\n * @returns Preset\r\n * @listens nodepicked\r\n * @listens nodetranslated\r\n * @listens nodedragged\r\n * @emits scopepicked\r\n * @emits scopereleased\r\n */\r\nexport function setup(): Preset {\r\n  return (params, context) => {\r\n    classic.useScopeAgent(params, context)\r\n    classic.useVisualEffects(params, context)\r\n  }\r\n}\r\n","/**\r\n * Presets for scopes plugin.\r\n * @module\r\n */\r\n\r\nexport * as classic from './classic'\r\n","import { NodeEditor, NodeId, Root, Scope } from 'rete'\r\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { useOrdering } from './ordering'\r\nimport { Preset } from './presets/types'\r\nimport { translateChildren } from './scope'\r\nimport { resizeParent } from './sizing'\r\nimport { ExpectedScheme, Padding, Size } from './types'\r\nimport { belongsTo, hasSelectedParent, trackedTranslate } from './utils'\r\nimport { useValidator } from './validation'\r\n\r\nexport * as Presets from './presets'\r\n\r\n/**\r\n * Props for `ScopesPlugin` class.\r\n */\r\nexport type Props = {\r\n  /** Padding (space) between the scope's border and its children. Default is `() => ({ top: 40, left: 20, right: 20, bottom: 20 })` */\r\n  padding?: (id: NodeId) => Padding\r\n  /** Determines whether the nested node should be excluded from affecting the scope's size, etc. Default is `() => false` */\r\n  exclude?: (id: NodeId) => boolean\r\n  /** Customizes the size of the node which is recognized as a parent. Default is `(id, size) => size` */\r\n  size?: (id: NodeId, size: Size) => Size\r\n  /** 决定这个目标节点是否具备父级能力 */\r\n  elder?: (id: NodeId) => boolean\r\n}\r\n\r\ntype Requires<Schemes extends ExpectedScheme> =\r\n  | BaseArea<Schemes>\r\n\r\n/**\r\n * Signal types produced by ConnectionPlugin instance\r\n * @priority 10\r\n */\r\nexport type Scopes =\r\n  | { type: 'scopepicked', data: { ids: NodeId[] } }\r\n  | { type: 'scopereleased', data: { ids: NodeId[] } }\r\n\r\n/**\r\n * Scope plugin. Responsible for user interaction with scopes (nested nodes, groups)\r\n * @priority 9\r\n * @listens nodetranslated\r\n * @listens noderemoved\r\n * @emits scopepicked\r\n * @emits scopereleased\r\n */\r\nexport class ScopesPlugin<\r\n  Schemes extends ExpectedScheme, T = never\r\n> extends Scope<Scopes, [Requires<Schemes>, Root<Schemes>]> {\r\n  padding: (id: NodeId) => Padding\r\n  exclude: (id: NodeId) => boolean\r\n  elder: (id: NodeId) => boolean\r\n  size: (id: NodeId, size: Size) => Size\r\n  editor!: NodeEditor<Schemes>\r\n  area!: BaseAreaPlugin<Schemes, T>\r\n  presets: Preset[] = []\r\n\r\n  constructor(props?: Props) {\r\n    super('scopes')\r\n    this.padding = props?.padding || (() => ({\r\n      top: 40,\r\n      left: 20,\r\n      right: 20,\r\n      bottom: 20\r\n    }))\r\n    this.exclude = props?.exclude || (() => false)\r\n    this.size = props?.size || ((id, size) => size)\r\n    this.elder = props?.elder || (() => true)\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements\r\n  setParent(scope: Scope<BaseArea<Schemes>, [Root<Schemes>]>): void {\r\n    super.setParent(scope)\r\n\r\n    this.area = this.parentScope<BaseAreaPlugin<Schemes, T>>(BaseAreaPlugin)\r\n    this.editor = this.area.parentScope<NodeEditor<Schemes>>(NodeEditor)\r\n\r\n    const props = { editor: this.editor, area: this.area }\r\n    const { padding, size, exclude, elder } = this\r\n    const pickedNodes = getPickedNodes(this)\r\n    const { translate, isTranslating } = trackedTranslate(props)\r\n    const agentParams = { padding, size, exclude, elder, translate }\r\n\r\n    useValidator(props)\r\n    useOrdering(props)\r\n\r\n    this.presets.forEach(preset => {\r\n      preset(agentParams, { ...props, scopes: this })\r\n    })\r\n\r\n    // eslint-disable-next-line max-statements, complexity\r\n    this.addPipe(async context => {\r\n      if (context.type === 'nodetranslated') {\r\n        const { id } = context.data\r\n        const current = props.editor.getNode(id)\r\n\r\n        if (!current) throw new Error('cannot find node')\r\n        // prevent translating children if the node translation\r\n        // is triggered by its resizing (when its children moved)\r\n        if (!isTranslating(id)) {\r\n          await translateChildren(id, context.data, props)\r\n        }\r\n\r\n        const parent = current.parent ? props.editor.getNode(current.parent) : null\r\n\r\n        if (parent && !agentParams.exclude(id)) {\r\n          const hasAnySelectedParent = hasSelectedParent(id, props)\r\n          const isPicked = belongsTo(current.id, pickedNodes, props)\r\n\r\n          if (!hasAnySelectedParent && !isPicked) {\r\n            await resizeParent(parent, agentParams, props)\r\n          }\r\n        }\r\n      }\r\n      if (context.type === 'noderemoved') {\r\n        const parentId = context.data.parent\r\n        const parent = parentId && props.editor.getNode(parentId)\r\n\r\n        if (parent) {\r\n          await resizeParent(parent, agentParams, props)\r\n        }\r\n      }\r\n      return context\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Adds a preset to the plugin.\r\n   * @param preset Preset that is responsible for user interactions with scopes (e.g. assigning nodes to scopes)\r\n   */\r\n  public addPreset(preset: Preset) {\r\n    this.presets.push(preset)\r\n  }\r\n\r\n  public isDependent(id: NodeId) {\r\n    const props = { editor: this.editor, area: this.area }\r\n    const node = this.editor.getNode(id)\r\n\r\n    return node && (node.selected || hasSelectedParent(id, props))\r\n  }\r\n}\r\n\r\nexport function getPickedNodes<S extends ExpectedScheme>(scopes: Scope<Scopes, [Requires<S>, Root<S>]>) {\r\n  const nodes: NodeId[] = []\r\n\r\n  scopes.addPipe(async context => {\r\n    if (!('type' in context)) return context\r\n    if (context.type === 'scopepicked') {\r\n      nodes.push(...context.data.ids)\r\n    }\r\n    if (context.type === 'scopereleased') {\r\n      nodes.splice(0, nodes.length, ...nodes.filter(id => !context.data.ids.includes(id)))\r\n    }\r\n    return context\r\n  })\r\n  return nodes\r\n}\r\n"],"names":["bringConnectionForward","id","props","view","area","connectionViews","get","content","reorder","element","bringConnectionBack","holder","firstChild","bringForward","nodeId","nodeViews","connections","editor","getConnections","filter","c","source","target","children","getNodes","n","parent","forEach","connection","child","useOrdering","addPipe","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","context","wrap","_callee$","_context","prev","next","Object","abrupt","type","data","getConnection","Error","stop","_x","apply","arguments","getNodesBoundingBox","nodes","boxes","map","node","position","width","height","left","Math","min","_toConsumableArray","b","x","right","max","top","y","bottom","updateNodeSizes","size","_ref2","resize","resizeParent","_x2","_x3","_resizeParent","agentParams","padding","_getNodesBoundingBox","outerWidth","outerHeight","outerTop","outerLeft","parentsParent","exclude","length","translate","getNode","reassignParent","_x4","_reassignParent","ids","pointer","overlayNodes","areaElements","overlayNodesWithIndex","topOverlayParent","formerParents","_iterator","_step","formerParent","Boolean","elder","includes","Array","from","childNodes","_ref3","index","indexOf","sort","a","undefined","_createForOfIteratorHelper","s","done","value","t0","e","f","finish","translateChildren","_x5","_x6","_x7","_translateChildren","_callee3","previous","_callee3$","_context3","Promise","all","_ref4","_callee2","dx","dy","nodePosition","_callee2$","_context2","selected","_x8","belongsTo","hasSelectedParent","trackedTranslate","active","Map","increment","set","decrement","isTranslating","watchClearing","state","useValidator","isClearing","_typeof","parentId","find","useScopeAgent","params","scopes","timeout","picked","candidates","cancel","window","clearTimeout","pick","timeoutId","setTimeout","_candidates","targets","push","emit","release","list","useVisualEffects","pickedNodes","getPickedNodes","previousHighlighted","clientPointerPostion","updateHighlightedScopes","style","opacity","elements","document","elementsFromPoint","intersectedNodes","el","item","nonSelected","first","event","clientX","clientY","setup","classic","ScopesPlugin","_Scope","_this","_classCallCheck","_callSuper","_defineProperty","_inherits","_createClass","key","setParent","scope","_this2","_get","_getPrototypeOf","prototype","call","parentScope","BaseAreaPlugin","NodeEditor","_trackedTranslate","presets","preset","_objectSpread","_id","current","hasAnySelectedParent","isPicked","_parent","addPreset","isDependent","Scope","splice","concat"],"mappings":"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"}