{"version":3,"file":"rete-scopes-plugin.esm.js","sources":["src/ordering.ts","src/sizing.ts","src/scope.ts","src/utils.ts","src/validation.ts","src/agents/classic/index.ts","src/presets/classic/index.ts","src/presets/index.ts","src/index.ts"],"sourcesContent":["import { ConnectionId, NodeEditor, NodeId } from 'rete'\r\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ExpectedScheme } from './types'\r\n\r\ntype Props<T> = {\r\n  editor: NodeEditor<ExpectedScheme>,\r\n  area: BaseAreaPlugin<ExpectedScheme, BaseArea<ExpectedScheme> | T>\r\n}\r\n\r\nfunction bringConnectionForward<T>(id: ConnectionId, props: Props<T>) {\r\n  const view = props.area.connectionViews.get(id)\r\n\r\n  if (view) {\r\n    props.area.area.content.reorder(view.element, null)\r\n  }\r\n}\r\n\r\nfunction bringConnectionBack<T>(id: ConnectionId, props: Props<T>) {\r\n  const view = props.area.connectionViews.get(id)\r\n  const { content } = props.area.area\r\n\r\n  if (view) {\r\n    content.reorder(view.element, content.holder.firstChild)\r\n  }\r\n}\r\n\r\nfunction bringForward<T>(nodeId: NodeId, props: Props<T>) {\r\n  const view = props.area.nodeViews.get(nodeId)\r\n  const connections = props.editor.getConnections().filter(c => {\r\n    return nodeId === c.source || nodeId === c.target\r\n  })\r\n  const children = props.editor.getNodes().filter(n => {\r\n    return n.parent === nodeId\r\n  })\r\n\r\n  connections.forEach(connection => bringConnectionForward(connection.id, props))\r\n\r\n  if (view) {\r\n    props.area.area.content.reorder(view.element, null)\r\n  }\r\n\r\n  children.forEach(child => bringForward(child.id, props))\r\n}\r\n\r\nexport function useOrdering<T>(props: Props<T>) {\r\n  // eslint-disable-next-line max-statements\r\n  props.area.addPipe(async context => {\r\n    if (!(context instanceof Object) || !('type' in context)) return context\r\n    if (context.type === 'nodepicked') {\r\n      bringForward(context.data.id, props)\r\n    }\r\n    if (context.type === 'connectioncreated') {\r\n      const { id } = context.data\r\n      const connection = props.editor.getConnection(id)\r\n\r\n      if (!connection) throw new Error('connection was removed')\r\n      bringConnectionBack(context.data.id, props)\r\n      bringForward(connection.source, props)\r\n      bringForward(connection.target, props)\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { NodeEditor } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { AgentParams } from './agents/types'\r\nimport { ExpectedScheme } from './types'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\nexport function getNodesBoundingBox<T>(nodes: ExpectedScheme['Node'][], { area }: Props<T>) {\r\n  const boxes = nodes.map(node => {\r\n    const view = area.nodeViews.get(node.id)\r\n\r\n    if (!view) throw new Error('view')\r\n\r\n    return {\r\n      position: view.position,\r\n      width: node.width,\r\n      height: node.height\r\n    }\r\n  })\r\n\r\n  const left = Math.min(...boxes.map(b => b.position.x))\r\n  const right = Math.max(...boxes.map(b => b.position.x + b.width))\r\n  const top = Math.min(...boxes.map(b => b.position.y))\r\n  const bottom = Math.max(...boxes.map(b => b.position.y + b.height))\r\n  const width = right - left\r\n  const height = bottom - top\r\n\r\n  return {\r\n    top,\r\n    left,\r\n    right,\r\n    bottom,\r\n    width,\r\n    height\r\n  }\r\n}\r\n\r\ntype Size = { width: number, height: number }\r\n\r\nexport function updateNodeSizes<T>(node: ExpectedScheme['Node'], size: Size, { area }: Props<T>) {\r\n  const { width, height } = size\r\n\r\n  node.width = width\r\n  node.height = height\r\n\r\n  area.resize(node.id, width, height)\r\n}\r\n\r\n// eslint-disable-next-line max-statements\r\nexport async function resizeParent<T>(parent: ExpectedScheme['Node'], agentParams: AgentParams, props: Props<T>) {\r\n  // const { id } = parent\r\n  // const children = props.editor.getNodes()\r\n  //   .filter(child => child.parent === id)\r\n  //   .filter(node => !agentParams.exclude(node.id))\r\n  // const padding = agentParams.padding(id)\r\n\r\n  // if (children.length === 0) {\r\n  //   const size = agentParams.size(id, {\r\n  //     width: padding.left + padding.right,\r\n  //     height: padding.top + padding.bottom\r\n  //   })\r\n\r\n  //   updateNodeSizes(parent, size, props)\r\n  // } else {\r\n  //   const { top, left, width, height } = getNodesBoundingBox(children, props)\r\n\r\n  //   const outerWidth = width + padding.left + padding.right\r\n  //   const outerHeight = height + padding.top + padding.bottom\r\n  //   const outerTop = top - padding.top\r\n  //   const outerLeft = left - padding.left\r\n\r\n  //   updateNodeSizes(parent, agentParams.size(id, { width: outerWidth, height: outerHeight }), props)\r\n  //   await agentParams.translate(parent.id, outerLeft, outerTop)\r\n  // }\r\n  // if (parent.parent) {\r\n  //   const parentsParent = props.editor.getNode(parent.parent)\r\n\r\n  //   if (parentsParent) {\r\n  //     await resizeParent(parentsParent, agentParams, props)\r\n  //   }\r\n  // }\r\n  return {\r\n    parent,\r\n    agentParams,\r\n    props\r\n  }\r\n}\r\n","import { NodeEditor, NodeId } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { AgentParams } from './agents/types'\r\nimport { resizeParent } from './sizing'\r\nimport { ExpectedScheme, Position } from './types'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\n// eslint-disable-next-line max-statements, max-len\r\nexport async function reassignParent<T>(ids: NodeId[], pointer: { x: number, y: number }, agentParams: AgentParams, props: Props<T>) {\r\n  if (!ids.length) return\r\n  const nodes = ids\r\n    .map(id => props.editor.getNode(id))\r\n    .filter((n): n is ExpectedScheme['Node'] => Boolean(n))\r\n\r\n  const overlayNodes = props.editor.getNodes()\r\n    .filter((node) => agentParams.elder(node.id))\r\n    .map(node => {\r\n      const view = props.area.nodeViews.get(node.id)\r\n\r\n      if (!view) throw new Error('node view')\r\n\r\n      return { node, view }\r\n    }).filter(({ node, view }) => {\r\n      return !ids.includes(node.id)\r\n        && pointer.x > view.position.x\r\n        && pointer.y > view.position.y\r\n        && pointer.x < view.position.x + node.width\r\n        && pointer.y < view.position.y + node.height\r\n    })\r\n  const areaElements = Array.from(props.area.area.content.holder.childNodes)\r\n  const overlayNodesWithIndex = overlayNodes.map(({ node, view }) => {\r\n    const index = areaElements.indexOf(view.element)\r\n\r\n    return { node, view, index }\r\n  })\r\n\r\n  overlayNodesWithIndex.sort((a, b) => b.index - a.index)\r\n  const topOverlayParent = overlayNodesWithIndex[0]\r\n\r\n  const formerParents = nodes\r\n    .map(node => node.parent)\r\n    .filter((id): id is string => Boolean(id))\r\n    .map(id => {\r\n      const node = props.editor.getNode(id)\r\n\r\n      if (!node) throw new Error('node')\r\n\r\n      return node\r\n    })\r\n\r\n  // eslint-disable-next-line no-undefined\r\n  nodes.forEach(node => node.parent = undefined)\r\n  if (topOverlayParent) {\r\n    nodes.forEach(node => node.parent = topOverlayParent.node.id)\r\n    await resizeParent(topOverlayParent.node, agentParams, props)\r\n  }\r\n\r\n  for (const formerParent of formerParents) {\r\n    await resizeParent(formerParent, agentParams, props)\r\n  }\r\n}\r\n\r\nexport async function translateChildren<T>(\r\n  id: NodeId,\r\n  { position, previous }: { position: Position, previous: Position },\r\n  props: Props<T>\r\n) {\r\n  const children = props.editor.getNodes().filter(n => n.parent === id)\r\n\r\n  await Promise.all(children.map(async n => {\r\n    const dx = position.x - previous.x\r\n    const dy = position.y - previous.y\r\n\r\n    const view = props.area.nodeViews.get(n.id)\r\n    const node = props.editor.getNode(n.id)\r\n\r\n    if (view && node && !node.selected) {\r\n      const nodePosition = view.position\r\n\r\n      await view.translate(nodePosition.x + dx, nodePosition.y + dy)\r\n    }\r\n  }))\r\n}\r\n","import { BaseSchemes, NodeEditor, NodeId } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ExpectedScheme } from './types'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\nexport function belongsTo<T>(nodeId: NodeId, ids: NodeId[], props: Props<T>) {\r\n  const node = props.editor.getNode(nodeId)\r\n\r\n  if (!node) throw new Error('node')\r\n\r\n  if (ids.includes(nodeId)) return true\r\n  if (!node.parent) return false\r\n  if (belongsTo(node.parent, ids, props)) return true\r\n}\r\n\r\nexport function hasSelectedParent<T>(nodeId: NodeId, props: Props<T>): boolean {\r\n  const node = props.editor.getNode(nodeId)\r\n\r\n  if (!node) throw new Error('node')\r\n\r\n  if (!node.parent) return false\r\n\r\n  const parent = props.editor.getNode(node.parent)\r\n\r\n  if (!parent) throw new Error('node')\r\n\r\n  if (parent.selected) return true\r\n\r\n  return hasSelectedParent(node.parent, props)\r\n}\r\n\r\nexport type Translate = (nodeId: string, x: number, y: number) => Promise<void>\r\n\r\n/**\r\n * keep track of currently moving nodes (to prevent infinite loop)\r\n */\r\nexport function trackedTranslate<T>(props: Props<T>): {\r\n  translate: Translate,\r\n  isTranslating: (id: NodeId) => boolean\r\n} {\r\n  const active = new Map<NodeId, number>()\r\n  const increment = (id: NodeId) => active.set(id, (active.get(id) || 0) + 1)\r\n  const decrement = (id: NodeId) => active.set(id, (active.get(id) || 0) - 1)\r\n\r\n  return {\r\n    async translate(id, x, y) {\r\n      const view = props.area.nodeViews.get(id)\r\n\r\n      if (!view) throw new Error('cannot find parent node view')\r\n\r\n      const previous = view.position\r\n\r\n      if (previous.x !== x || previous.y !== y) {\r\n        increment(id)\r\n        await view.translate(x, y)\r\n        decrement(id)\r\n      }\r\n    },\r\n    isTranslating(id) {\r\n      return (active.get(id) || 0) > 0\r\n    }\r\n  }\r\n}\r\n\r\nexport function watchClearing(editor: NodeEditor<BaseSchemes>) {\r\n  let state = false\r\n\r\n  editor.addPipe(context => {\r\n    if (context.type === 'clear') {\r\n      state = true\r\n    }\r\n    if (context.type === 'cleared' || context.type === 'clearcancelled') {\r\n      state = false\r\n    }\r\n    return context\r\n  })\r\n\r\n  return () => state\r\n}\r\n","import { NodeEditor } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ExpectedScheme } from './types'\r\nimport { watchClearing } from './utils'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\nexport function useValidator<T>(props: Props<T>) {\r\n  const isClearing = watchClearing(props.editor)\r\n\r\n  // eslint-disable-next-line max-statements\r\n  props.area.addPipe(context => {\r\n    if (!context || !(typeof context === 'object' && 'type' in context)) return context\r\n    if (context.type === 'nodecreate') {\r\n      const parentId = context.data.parent\r\n\r\n      if (parentId) {\r\n        const parent = props.editor.getNodes().find(n => n.id === parentId)\r\n\r\n        if (!parent) throw new Error('parent node doesnt exist')\r\n      }\r\n    }\r\n    if (context.type === 'noderemove' && !isClearing()) {\r\n      const { id } = context.data\r\n\r\n      const child = props.editor.getNodes().find(n => n.parent === id)\r\n\r\n      if (child) throw new Error('cannot remove parent node with a children')\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { NodeId } from 'rete'\r\n\r\nimport { getPickedNodes } from '../..'\r\nimport { reassignParent } from '../../scope'\r\nimport { Position } from '../../types'\r\nimport { AgentContext, AgentParams, ScopeAgent } from '../types'\r\n\r\nexport type DefaultScopesAgentParams = AgentParams & {\r\n  timeout?: number\r\n}\r\n\r\nexport const useScopeAgent: ScopeAgent = (params: DefaultScopesAgentParams, { area, editor, scopes }) => {\r\n  const timeout = params.timeout || 250\r\n\r\n  let picked: { timeout: number } | null = null\r\n  let candidates: string[] = []\r\n\r\n  function cancel() {\r\n    if (picked) {\r\n      window.clearTimeout(picked.timeout)\r\n      picked = null\r\n    }\r\n  }\r\n\r\n  function pick(id: NodeId) {\r\n    const timeoutId = window.setTimeout(() => {\r\n      const selected = editor.getNodes().filter(n => n.selected)\r\n      const targets = selected.length ? selected.map(n => n.id) : [id]\r\n\r\n      candidates.push(...targets)\r\n      scopes.emit({ type: 'scopepicked', data: { ids: targets } })\r\n    }, timeout)\r\n\r\n    picked = { timeout: timeoutId }\r\n  }\r\n  function release() {\r\n    const list = [...candidates]\r\n\r\n    cancel()\r\n    candidates = []\r\n\r\n    scopes.emit({ type: 'scopereleased', data: { ids: list } })\r\n\r\n    return list\r\n  }\r\n\r\n  area.addPipe(async context => {\r\n    if (!(context instanceof Object) || !('type' in context)) return context\r\n    if (context.type === 'nodepicked') {\r\n      pick(context.data.id)\r\n    }\r\n    if (context.type === 'nodetranslated') {\r\n      cancel()\r\n    }\r\n    if (context.type === 'nodedragged') {\r\n      const { pointer } = area.area\r\n      const ids = release()\r\n\r\n      if (ids.length === 0) return\r\n\r\n      await reassignParent(ids, pointer, params, { area, editor })\r\n    }\r\n    return context\r\n  })\r\n}\r\n\r\nexport function useVisualEffects<T>(params: DefaultScopesAgentParams, { area, editor, scopes }: AgentContext<T>): void {\r\n  const pickedNodes = getPickedNodes(scopes)\r\n  let previousHighlighted: string | null = null\r\n  let clientPointerPostion: Position | null = null\r\n\r\n  // eslint-disable-next-line max-statements\r\n  function updateHighlightedScopes(position: { x: number, y: number }, nodes: NodeId[]) {\r\n    // 如果先前有高亮对象，先取消其高亮\r\n    if (previousHighlighted) {\r\n      const view = area.nodeViews.get(previousHighlighted)\r\n\r\n      if (view && nodes.length) view.element.style.opacity = '0.4'\r\n      previousHighlighted = null\r\n    }\r\n    if (nodes.length) {\r\n      const { x, y } = position\r\n      const elements = document.elementsFromPoint(x, y)\r\n      const nodeViews = editor.getNodes().filter(node => {\r\n        return params.elder(node.id)\r\n      }).map(node => {\r\n        const view = area.nodeViews.get(node.id)\r\n\r\n        if (!view) throw new Error('view')\r\n\r\n        return {\r\n          node,\r\n          view\r\n        }\r\n      })\r\n\r\n      const intersectedNodes = elements\r\n        .map(el => nodeViews.find(item => item.view.element === el))\r\n        .filter((item): item is Exclude<typeof item, undefined> => Boolean(item))\r\n\r\n      const nonSelected = intersectedNodes\r\n        .filter(item => !item.node.selected)\r\n      // 从交互点出发，找到画布中交互点位置上的节点们，然后和画布中记录的节点做比对，找出交叉内容，之后剔除选中（正在拖拽的）的内容后，第一个交互点就是会进行拖入操作的。\r\n      const first = nonSelected[0]\r\n\r\n      if (first) {\r\n        first.view.element.style.opacity = '0.8'\r\n        previousHighlighted = first.node.id\r\n      }\r\n    }\r\n  }\r\n  // eslint-disable-next-line max-statements\r\n  scopes.addPipe(context => {\r\n    if (context.type === 'scopepicked') {\r\n      const { ids } = context.data\r\n\r\n      // 未选中的节点统统改为虚化（opacity=0.4)\r\n      editor.getNodes().filter(n => !ids.includes(n.id)).forEach(node => {\r\n        const view = area.nodeViews.get(node.id)\r\n\r\n        if (view) view.element.style.opacity = '0.4'\r\n      })\r\n      if (clientPointerPostion) {\r\n        updateHighlightedScopes(clientPointerPostion, pickedNodes)\r\n      }\r\n    }\r\n    if (context.type === 'scopereleased') {\r\n      const { ids } = context.data\r\n\r\n      // 未选中的节点统统解除虚化（opacity='')\r\n      editor.getNodes().filter(n => !ids.includes(n.id)).forEach(node => {\r\n        const view = area.nodeViews.get(node.id)\r\n\r\n        if (view) view.element.style.opacity = ''\r\n      })\r\n      if (clientPointerPostion) {\r\n        updateHighlightedScopes(clientPointerPostion, pickedNodes)\r\n      }\r\n    }\r\n    if (context.type === 'pointermove') {\r\n      clientPointerPostion = {\r\n        x: context.data.event.clientX,\r\n        y: context.data.event.clientY\r\n      }\r\n      updateHighlightedScopes(clientPointerPostion, pickedNodes)\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { classic } from '../../agents'\r\nimport { Preset } from '../types'\r\n\r\n/**\r\n * Classic preset allowing capturing a node by long-pressing it and dropping it onto another node to make it a nested.\r\n * @returns Preset\r\n * @listens nodepicked\r\n * @listens nodetranslated\r\n * @listens nodedragged\r\n * @emits scopepicked\r\n * @emits scopereleased\r\n */\r\nexport function setup(): Preset {\r\n  return (params, context) => {\r\n    classic.useScopeAgent(params, context)\r\n    classic.useVisualEffects(params, context)\r\n  }\r\n}\r\n","/**\r\n * Presets for scopes plugin.\r\n * @module\r\n */\r\n\r\nexport * as classic from './classic'\r\n","import { NodeEditor, NodeId, Root, Scope } from 'rete'\r\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { useOrdering } from './ordering'\r\nimport { Preset } from './presets/types'\r\nimport { translateChildren } from './scope'\r\nimport { resizeParent } from './sizing'\r\nimport { ExpectedScheme, Padding, Size } from './types'\r\nimport { belongsTo, hasSelectedParent, trackedTranslate } from './utils'\r\nimport { useValidator } from './validation'\r\n\r\nexport * as Presets from './presets'\r\n\r\n/**\r\n * Props for `ScopesPlugin` class.\r\n */\r\nexport type Props = {\r\n  /** Padding (space) between the scope's border and its children. Default is `() => ({ top: 40, left: 20, right: 20, bottom: 20 })` */\r\n  padding?: (id: NodeId) => Padding\r\n  /** Determines whether the nested node should be excluded from affecting the scope's size, etc. Default is `() => false` */\r\n  exclude?: (id: NodeId) => boolean\r\n  /** Customizes the size of the node which is recognized as a parent. Default is `(id, size) => size` */\r\n  size?: (id: NodeId, size: Size) => Size\r\n  /** 决定这个目标节点是否具备父级能力 */\r\n  elder?: (id: NodeId) => boolean\r\n}\r\n\r\ntype Requires<Schemes extends ExpectedScheme> =\r\n  | BaseArea<Schemes>\r\n\r\n/**\r\n * Signal types produced by ConnectionPlugin instance\r\n * @priority 10\r\n */\r\nexport type Scopes =\r\n  | { type: 'scopepicked', data: { ids: NodeId[] } }\r\n  | { type: 'scopereleased', data: { ids: NodeId[] } }\r\n\r\n/**\r\n * Scope plugin. Responsible for user interaction with scopes (nested nodes, groups)\r\n * @priority 9\r\n * @listens nodetranslated\r\n * @listens noderemoved\r\n * @emits scopepicked\r\n * @emits scopereleased\r\n */\r\nexport class ScopesPlugin<\r\n  Schemes extends ExpectedScheme, T = never\r\n> extends Scope<Scopes, [Requires<Schemes>, Root<Schemes>]> {\r\n  padding: (id: NodeId) => Padding\r\n  exclude: (id: NodeId) => boolean\r\n  elder: (id: NodeId) => boolean\r\n  size: (id: NodeId, size: Size) => Size\r\n  editor!: NodeEditor<Schemes>\r\n  area!: BaseAreaPlugin<Schemes, T>\r\n  presets: Preset[] = []\r\n\r\n  constructor(props?: Props) {\r\n    super('scopes')\r\n    this.padding = props?.padding || (() => ({\r\n      top: 40,\r\n      left: 20,\r\n      right: 20,\r\n      bottom: 20\r\n    }))\r\n    this.exclude = props?.exclude || (() => false)\r\n    this.size = props?.size || ((id, size) => size)\r\n    this.elder = props?.elder || (() => true)\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements\r\n  setParent(scope: Scope<BaseArea<Schemes>, [Root<Schemes>]>): void {\r\n    super.setParent(scope)\r\n\r\n    this.area = this.parentScope<BaseAreaPlugin<Schemes, T>>(BaseAreaPlugin)\r\n    this.editor = this.area.parentScope<NodeEditor<Schemes>>(NodeEditor)\r\n\r\n    const props = { editor: this.editor, area: this.area }\r\n    const { padding, size, exclude, elder } = this\r\n    const pickedNodes = getPickedNodes(this)\r\n    const { translate, isTranslating } = trackedTranslate(props)\r\n    const agentParams = { padding, size, exclude, elder, translate }\r\n\r\n    useValidator(props)\r\n    useOrdering(props)\r\n\r\n    this.presets.forEach(preset => {\r\n      preset(agentParams, { ...props, scopes: this })\r\n    })\r\n\r\n    // eslint-disable-next-line max-statements, complexity\r\n    this.addPipe(async context => {\r\n      if (context.type === 'nodetranslated') {\r\n        const { id } = context.data\r\n        const current = props.editor.getNode(id)\r\n\r\n        if (!current) throw new Error('cannot find node')\r\n        // prevent translating children if the node translation\r\n        // is triggered by its resizing (when its children moved)\r\n        if (!isTranslating(id)) {\r\n          await translateChildren(id, context.data, props)\r\n        }\r\n\r\n        const parent = current.parent ? props.editor.getNode(current.parent) : null\r\n\r\n        if (parent && !agentParams.exclude(id)) {\r\n          const hasAnySelectedParent = hasSelectedParent(id, props)\r\n          const isPicked = belongsTo(current.id, pickedNodes, props)\r\n\r\n          if (!hasAnySelectedParent && !isPicked) {\r\n            await resizeParent(parent, agentParams, props)\r\n          }\r\n        }\r\n      }\r\n      if (context.type === 'noderemoved') {\r\n        const parentId = context.data.parent\r\n        const parent = parentId && props.editor.getNode(parentId)\r\n\r\n        if (parent) {\r\n          await resizeParent(parent, agentParams, props)\r\n        }\r\n      }\r\n      return context\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Adds a preset to the plugin.\r\n   * @param preset Preset that is responsible for user interactions with scopes (e.g. assigning nodes to scopes)\r\n   */\r\n  public addPreset(preset: Preset) {\r\n    this.presets.push(preset)\r\n  }\r\n\r\n  public isDependent(id: NodeId) {\r\n    const props = { editor: this.editor, area: this.area }\r\n    const node = this.editor.getNode(id)\r\n\r\n    return node && (node.selected || hasSelectedParent(id, props))\r\n  }\r\n}\r\n\r\nexport function getPickedNodes<S extends ExpectedScheme>(scopes: Scope<Scopes, [Requires<S>, Root<S>]>) {\r\n  const nodes: NodeId[] = []\r\n\r\n  scopes.addPipe(async context => {\r\n    if (!('type' in context)) return context\r\n    if (context.type === 'scopepicked') {\r\n      nodes.push(...context.data.ids)\r\n    }\r\n    if (context.type === 'scopereleased') {\r\n      nodes.splice(0, nodes.length, ...nodes.filter(id => !context.data.ids.includes(id)))\r\n    }\r\n    return context\r\n  })\r\n  return nodes\r\n}\r\n"],"names":["bringConnectionForward","id","props","view","area","connectionViews","get","content","reorder","element","bringConnectionBack","holder","firstChild","bringForward","nodeId","nodeViews","connections","editor","getConnections","filter","c","source","target","children","getNodes","n","parent","forEach","connection","child","useOrdering","addPipe","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","context","wrap","_callee$","_context","prev","next","Object","abrupt","type","data","getConnection","Error","stop","_x","apply","arguments","resizeParent","_x2","_x3","_resizeParent","agentParams","reassignParent","_x4","_reassignParent","ids","pointer","nodes","overlayNodes","areaElements","overlayNodesWithIndex","topOverlayParent","formerParents","_iterator","_step","formerParent","length","map","getNode","Boolean","node","elder","_ref2","includes","x","position","y","width","height","Array","from","childNodes","_ref3","index","indexOf","sort","a","b","undefined","_createForOfIteratorHelper","s","done","value","t0","e","f","finish","translateChildren","_x5","_x6","_x7","_translateChildren","_callee3","previous","_callee3$","_context3","Promise","all","_ref4","_callee2","dx","dy","nodePosition","_callee2$","_context2","selected","translate","_x8","belongsTo","hasSelectedParent","trackedTranslate","active","Map","increment","set","decrement","isTranslating","watchClearing","state","useValidator","isClearing","_typeof","parentId","find","useScopeAgent","params","scopes","timeout","picked","candidates","cancel","window","clearTimeout","pick","timeoutId","setTimeout","_candidates","targets","push","_toConsumableArray","emit","release","list","useVisualEffects","pickedNodes","getPickedNodes","previousHighlighted","clientPointerPostion","updateHighlightedScopes","style","opacity","elements","document","elementsFromPoint","intersectedNodes","el","item","nonSelected","first","event","clientX","clientY","setup","classic","ScopesPlugin","_Scope","_this","_classCallCheck","_callSuper","_defineProperty","padding","top","left","right","bottom","exclude","size","_inherits","_createClass","key","setParent","scope","_this2","_get","_getPrototypeOf","prototype","call","parentScope","BaseAreaPlugin","NodeEditor","_trackedTranslate","presets","preset","_objectSpread","_id","current","hasAnySelectedParent","isPicked","_parent","addPreset","isDependent","Scope","splice","concat"],"mappings":"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"}