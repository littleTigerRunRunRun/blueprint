{"version":3,"file":"rete-scopes-plugin.min.js","sources":["src/ordering.ts","src/sizing.ts","src/scope.ts","src/utils.ts","src/presets/classic/index.ts","src/agents/classic/index.ts","src/index.ts","src/validation.ts"],"sourcesContent":["import { ConnectionId, NodeEditor, NodeId } from 'rete'\r\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ExpectedScheme } from './types'\r\n\r\ntype Props<T> = {\r\n  editor: NodeEditor<ExpectedScheme>,\r\n  area: BaseAreaPlugin<ExpectedScheme, BaseArea<ExpectedScheme> | T>\r\n}\r\n\r\nfunction bringConnectionForward<T>(id: ConnectionId, props: Props<T>) {\r\n  const view = props.area.connectionViews.get(id)\r\n\r\n  if (view) {\r\n    props.area.area.content.reorder(view.element, null)\r\n  }\r\n}\r\n\r\nfunction bringConnectionBack<T>(id: ConnectionId, props: Props<T>) {\r\n  const view = props.area.connectionViews.get(id)\r\n  const { content } = props.area.area\r\n\r\n  if (view) {\r\n    content.reorder(view.element, content.holder.firstChild)\r\n  }\r\n}\r\n\r\nfunction bringForward<T>(nodeId: NodeId, props: Props<T>) {\r\n  const view = props.area.nodeViews.get(nodeId)\r\n  const connections = props.editor.getConnections().filter(c => {\r\n    return nodeId === c.source || nodeId === c.target\r\n  })\r\n  const children = props.editor.getNodes().filter(n => {\r\n    return n.parent === nodeId\r\n  })\r\n\r\n  connections.forEach(connection => bringConnectionForward(connection.id, props))\r\n\r\n  if (view) {\r\n    props.area.area.content.reorder(view.element, null)\r\n  }\r\n\r\n  children.forEach(child => bringForward(child.id, props))\r\n}\r\n\r\nexport function useOrdering<T>(props: Props<T>) {\r\n  // eslint-disable-next-line max-statements\r\n  props.area.addPipe(async context => {\r\n    if (!(context instanceof Object) || !('type' in context)) return context\r\n    if (context.type === 'nodepicked') {\r\n      bringForward(context.data.id, props)\r\n    }\r\n    if (context.type === 'connectioncreated') {\r\n      const { id } = context.data\r\n      const connection = props.editor.getConnection(id)\r\n\r\n      if (!connection) throw new Error('connection was removed')\r\n      bringConnectionBack(context.data.id, props)\r\n      bringForward(connection.source, props)\r\n      bringForward(connection.target, props)\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { NodeEditor } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { AgentParams } from './agents/types'\r\nimport { ExpectedScheme } from './types'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\nexport function getNodesBoundingBox<T>(nodes: ExpectedScheme['Node'][], { area }: Props<T>) {\r\n  const boxes = nodes.map(node => {\r\n    const view = area.nodeViews.get(node.id)\r\n\r\n    if (!view) throw new Error('view')\r\n\r\n    return {\r\n      position: view.position,\r\n      width: node.width,\r\n      height: node.height\r\n    }\r\n  })\r\n\r\n  const left = Math.min(...boxes.map(b => b.position.x))\r\n  const right = Math.max(...boxes.map(b => b.position.x + b.width))\r\n  const top = Math.min(...boxes.map(b => b.position.y))\r\n  const bottom = Math.max(...boxes.map(b => b.position.y + b.height))\r\n  const width = right - left\r\n  const height = bottom - top\r\n\r\n  return {\r\n    top,\r\n    left,\r\n    right,\r\n    bottom,\r\n    width,\r\n    height\r\n  }\r\n}\r\n\r\ntype Size = { width: number, height: number }\r\n\r\nexport function updateNodeSizes<T>(node: ExpectedScheme['Node'], size: Size, { area }: Props<T>) {\r\n  const { width, height } = size\r\n\r\n  node.width = width\r\n  node.height = height\r\n\r\n  area.resize(node.id, width, height)\r\n}\r\n\r\n// eslint-disable-next-line max-statements\r\nexport async function resizeParent<T>(parent: ExpectedScheme['Node'], agentParams: AgentParams, props: Props<T>) {\r\n  // const { id } = parent\r\n  // const children = props.editor.getNodes()\r\n  //   .filter(child => child.parent === id)\r\n  //   .filter(node => !agentParams.exclude(node.id))\r\n  // const padding = agentParams.padding(id)\r\n\r\n  // if (children.length === 0) {\r\n  //   const size = agentParams.size(id, {\r\n  //     width: padding.left + padding.right,\r\n  //     height: padding.top + padding.bottom\r\n  //   })\r\n\r\n  //   updateNodeSizes(parent, size, props)\r\n  // } else {\r\n  //   const { top, left, width, height } = getNodesBoundingBox(children, props)\r\n\r\n  //   const outerWidth = width + padding.left + padding.right\r\n  //   const outerHeight = height + padding.top + padding.bottom\r\n  //   const outerTop = top - padding.top\r\n  //   const outerLeft = left - padding.left\r\n\r\n  //   updateNodeSizes(parent, agentParams.size(id, { width: outerWidth, height: outerHeight }), props)\r\n  //   await agentParams.translate(parent.id, outerLeft, outerTop)\r\n  // }\r\n  // if (parent.parent) {\r\n  //   const parentsParent = props.editor.getNode(parent.parent)\r\n\r\n  //   if (parentsParent) {\r\n  //     await resizeParent(parentsParent, agentParams, props)\r\n  //   }\r\n  // }\r\n  return {\r\n    parent,\r\n    agentParams,\r\n    props\r\n  }\r\n}\r\n","import { NodeEditor, NodeId } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { AgentParams } from './agents/types'\r\nimport { resizeParent } from './sizing'\r\nimport { ExpectedScheme, Position } from './types'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\n// eslint-disable-next-line max-statements, max-len\r\nexport async function reassignParent<T>(ids: NodeId[], pointer: { x: number, y: number }, agentParams: AgentParams, props: Props<T>) {\r\n  if (!ids.length) return\r\n  const nodes = ids\r\n    .map(id => props.editor.getNode(id))\r\n    .filter((n): n is ExpectedScheme['Node'] => Boolean(n))\r\n\r\n  const overlayNodes = props.editor.getNodes()\r\n    .filter((node) => agentParams.elder(node.id))\r\n    .map(node => {\r\n      const view = props.area.nodeViews.get(node.id)\r\n\r\n      if (!view) throw new Error('node view')\r\n\r\n      return { node, view }\r\n    }).filter(({ node, view }) => {\r\n      return !ids.includes(node.id)\r\n        && pointer.x > view.position.x\r\n        && pointer.y > view.position.y\r\n        && pointer.x < view.position.x + node.width\r\n        && pointer.y < view.position.y + node.height\r\n    })\r\n  const areaElements = Array.from(props.area.area.content.holder.childNodes)\r\n  const overlayNodesWithIndex = overlayNodes.map(({ node, view }) => {\r\n    const index = areaElements.indexOf(view.element)\r\n\r\n    return { node, view, index }\r\n  })\r\n\r\n  overlayNodesWithIndex.sort((a, b) => b.index - a.index)\r\n  const topOverlayParent = overlayNodesWithIndex[0]\r\n\r\n  const formerParents = nodes\r\n    .map(node => node.parent)\r\n    .filter((id): id is string => Boolean(id))\r\n    .map(id => {\r\n      const node = props.editor.getNode(id)\r\n\r\n      if (!node) throw new Error('node')\r\n\r\n      return node\r\n    })\r\n\r\n  // eslint-disable-next-line no-undefined\r\n  nodes.forEach(node => node.parent = undefined)\r\n  if (topOverlayParent) {\r\n    nodes.forEach(node => node.parent = topOverlayParent.node.id)\r\n    await resizeParent(topOverlayParent.node, agentParams, props)\r\n  }\r\n\r\n  for (const formerParent of formerParents) {\r\n    await resizeParent(formerParent, agentParams, props)\r\n  }\r\n}\r\n\r\nexport async function translateChildren<T>(\r\n  id: NodeId,\r\n  { position, previous }: { position: Position, previous: Position },\r\n  props: Props<T>\r\n) {\r\n  const children = props.editor.getNodes().filter(n => n.parent === id)\r\n\r\n  await Promise.all(children.map(async n => {\r\n    const dx = position.x - previous.x\r\n    const dy = position.y - previous.y\r\n\r\n    const view = props.area.nodeViews.get(n.id)\r\n    const node = props.editor.getNode(n.id)\r\n\r\n    if (view && node && !node.selected) {\r\n      const nodePosition = view.position\r\n\r\n      await view.translate(nodePosition.x + dx, nodePosition.y + dy)\r\n    }\r\n  }))\r\n}\r\n","import { BaseSchemes, NodeEditor, NodeId } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ExpectedScheme } from './types'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\nexport function belongsTo<T>(nodeId: NodeId, ids: NodeId[], props: Props<T>) {\r\n  const node = props.editor.getNode(nodeId)\r\n\r\n  if (!node) throw new Error('node')\r\n\r\n  if (ids.includes(nodeId)) return true\r\n  if (!node.parent) return false\r\n  if (belongsTo(node.parent, ids, props)) return true\r\n}\r\n\r\nexport function hasSelectedParent<T>(nodeId: NodeId, props: Props<T>): boolean {\r\n  const node = props.editor.getNode(nodeId)\r\n\r\n  if (!node) throw new Error('node')\r\n\r\n  if (!node.parent) return false\r\n\r\n  const parent = props.editor.getNode(node.parent)\r\n\r\n  if (!parent) throw new Error('node')\r\n\r\n  if (parent.selected) return true\r\n\r\n  return hasSelectedParent(node.parent, props)\r\n}\r\n\r\nexport type Translate = (nodeId: string, x: number, y: number) => Promise<void>\r\n\r\n/**\r\n * keep track of currently moving nodes (to prevent infinite loop)\r\n */\r\nexport function trackedTranslate<T>(props: Props<T>): {\r\n  translate: Translate,\r\n  isTranslating: (id: NodeId) => boolean\r\n} {\r\n  const active = new Map<NodeId, number>()\r\n  const increment = (id: NodeId) => active.set(id, (active.get(id) || 0) + 1)\r\n  const decrement = (id: NodeId) => active.set(id, (active.get(id) || 0) - 1)\r\n\r\n  return {\r\n    async translate(id, x, y) {\r\n      const view = props.area.nodeViews.get(id)\r\n\r\n      if (!view) throw new Error('cannot find parent node view')\r\n\r\n      const previous = view.position\r\n\r\n      if (previous.x !== x || previous.y !== y) {\r\n        increment(id)\r\n        await view.translate(x, y)\r\n        decrement(id)\r\n      }\r\n    },\r\n    isTranslating(id) {\r\n      return (active.get(id) || 0) > 0\r\n    }\r\n  }\r\n}\r\n\r\nexport function watchClearing(editor: NodeEditor<BaseSchemes>) {\r\n  let state = false\r\n\r\n  editor.addPipe(context => {\r\n    if (context.type === 'clear') {\r\n      state = true\r\n    }\r\n    if (context.type === 'cleared' || context.type === 'clearcancelled') {\r\n      state = false\r\n    }\r\n    return context\r\n  })\r\n\r\n  return () => state\r\n}\r\n","import { classic } from '../../agents'\r\nimport { Preset } from '../types'\r\n\r\n/**\r\n * Classic preset allowing capturing a node by long-pressing it and dropping it onto another node to make it a nested.\r\n * @returns Preset\r\n * @listens nodepicked\r\n * @listens nodetranslated\r\n * @listens nodedragged\r\n * @emits scopepicked\r\n * @emits scopereleased\r\n */\r\nexport function setup(): Preset {\r\n  return (params, context) => {\r\n    classic.useScopeAgent(params, context)\r\n    classic.useVisualEffects(params, context)\r\n  }\r\n}\r\n","import { NodeId } from 'rete'\r\n\r\nimport { getPickedNodes } from '../..'\r\nimport { reassignParent } from '../../scope'\r\nimport { Position } from '../../types'\r\nimport { AgentContext, AgentParams, ScopeAgent } from '../types'\r\n\r\nexport type DefaultScopesAgentParams = AgentParams & {\r\n  timeout?: number\r\n}\r\n\r\nexport const useScopeAgent: ScopeAgent = (params: DefaultScopesAgentParams, { area, editor, scopes }) => {\r\n  const timeout = params.timeout || 250\r\n\r\n  let picked: { timeout: number } | null = null\r\n  let candidates: string[] = []\r\n\r\n  function cancel() {\r\n    if (picked) {\r\n      window.clearTimeout(picked.timeout)\r\n      picked = null\r\n    }\r\n  }\r\n\r\n  function pick(id: NodeId) {\r\n    const timeoutId = window.setTimeout(() => {\r\n      const selected = editor.getNodes().filter(n => n.selected)\r\n      const targets = selected.length ? selected.map(n => n.id) : [id]\r\n\r\n      candidates.push(...targets)\r\n      scopes.emit({ type: 'scopepicked', data: { ids: targets } })\r\n    }, timeout)\r\n\r\n    picked = { timeout: timeoutId }\r\n  }\r\n  function release() {\r\n    const list = [...candidates]\r\n\r\n    cancel()\r\n    candidates = []\r\n\r\n    scopes.emit({ type: 'scopereleased', data: { ids: list } })\r\n\r\n    return list\r\n  }\r\n\r\n  area.addPipe(async context => {\r\n    if (!(context instanceof Object) || !('type' in context)) return context\r\n    if (context.type === 'nodepicked') {\r\n      pick(context.data.id)\r\n    }\r\n    if (context.type === 'nodetranslated') {\r\n      cancel()\r\n    }\r\n    if (context.type === 'nodedragged') {\r\n      const { pointer } = area.area\r\n      const ids = release()\r\n\r\n      if (ids.length === 0) return\r\n\r\n      await reassignParent(ids, pointer, params, { area, editor })\r\n    }\r\n    return context\r\n  })\r\n}\r\n\r\nexport function useVisualEffects<T>(params: DefaultScopesAgentParams, { area, editor, scopes }: AgentContext<T>): void {\r\n  const pickedNodes = getPickedNodes(scopes)\r\n  let previousHighlighted: string | null = null\r\n  let clientPointerPostion: Position | null = null\r\n\r\n  // eslint-disable-next-line max-statements\r\n  function updateHighlightedScopes(position: { x: number, y: number }, nodes: NodeId[]) {\r\n    // 如果先前有高亮对象，先取消其高亮\r\n    if (previousHighlighted) {\r\n      const view = area.nodeViews.get(previousHighlighted)\r\n\r\n      if (view && nodes.length) view.element.style.opacity = '0.4'\r\n      previousHighlighted = null\r\n    }\r\n    if (nodes.length) {\r\n      const { x, y } = position\r\n      const elements = document.elementsFromPoint(x, y)\r\n      const nodeViews = editor.getNodes().filter(node => {\r\n        return params.elder(node.id)\r\n      }).map(node => {\r\n        const view = area.nodeViews.get(node.id)\r\n\r\n        if (!view) throw new Error('view')\r\n\r\n        return {\r\n          node,\r\n          view\r\n        }\r\n      })\r\n\r\n      const intersectedNodes = elements\r\n        .map(el => nodeViews.find(item => item.view.element === el))\r\n        .filter((item): item is Exclude<typeof item, undefined> => Boolean(item))\r\n\r\n      const nonSelected = intersectedNodes\r\n        .filter(item => !item.node.selected)\r\n      // 从交互点出发，找到画布中交互点位置上的节点们，然后和画布中记录的节点做比对，找出交叉内容，之后剔除选中（正在拖拽的）的内容后，第一个交互点就是会进行拖入操作的。\r\n      const first = nonSelected[0]\r\n\r\n      if (first) {\r\n        first.view.element.style.opacity = '0.8'\r\n        previousHighlighted = first.node.id\r\n      }\r\n    }\r\n  }\r\n  // eslint-disable-next-line max-statements\r\n  scopes.addPipe(context => {\r\n    if (context.type === 'scopepicked') {\r\n      const { ids } = context.data\r\n\r\n      // 未选中的节点统统改为虚化（opacity=0.4)\r\n      editor.getNodes().filter(n => !ids.includes(n.id)).forEach(node => {\r\n        const view = area.nodeViews.get(node.id)\r\n\r\n        if (view) view.element.style.opacity = '0.4'\r\n      })\r\n      if (clientPointerPostion) {\r\n        updateHighlightedScopes(clientPointerPostion, pickedNodes)\r\n      }\r\n    }\r\n    if (context.type === 'scopereleased') {\r\n      const { ids } = context.data\r\n\r\n      // 未选中的节点统统解除虚化（opacity='')\r\n      editor.getNodes().filter(n => !ids.includes(n.id)).forEach(node => {\r\n        const view = area.nodeViews.get(node.id)\r\n\r\n        if (view) view.element.style.opacity = ''\r\n      })\r\n      if (clientPointerPostion) {\r\n        updateHighlightedScopes(clientPointerPostion, pickedNodes)\r\n      }\r\n    }\r\n    if (context.type === 'pointermove') {\r\n      clientPointerPostion = {\r\n        x: context.data.event.clientX,\r\n        y: context.data.event.clientY\r\n      }\r\n      updateHighlightedScopes(clientPointerPostion, pickedNodes)\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { NodeEditor, NodeId, Root, Scope } from 'rete'\r\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { useOrdering } from './ordering'\r\nimport { Preset } from './presets/types'\r\nimport { translateChildren } from './scope'\r\nimport { resizeParent } from './sizing'\r\nimport { ExpectedScheme, Padding, Size } from './types'\r\nimport { belongsTo, hasSelectedParent, trackedTranslate } from './utils'\r\nimport { useValidator } from './validation'\r\n\r\nexport * as Presets from './presets'\r\n\r\n/**\r\n * Props for `ScopesPlugin` class.\r\n */\r\nexport type Props = {\r\n  /** Padding (space) between the scope's border and its children. Default is `() => ({ top: 40, left: 20, right: 20, bottom: 20 })` */\r\n  padding?: (id: NodeId) => Padding\r\n  /** Determines whether the nested node should be excluded from affecting the scope's size, etc. Default is `() => false` */\r\n  exclude?: (id: NodeId) => boolean\r\n  /** Customizes the size of the node which is recognized as a parent. Default is `(id, size) => size` */\r\n  size?: (id: NodeId, size: Size) => Size\r\n  /** 决定这个目标节点是否具备父级能力 */\r\n  elder?: (id: NodeId) => boolean\r\n}\r\n\r\ntype Requires<Schemes extends ExpectedScheme> =\r\n  | BaseArea<Schemes>\r\n\r\n/**\r\n * Signal types produced by ConnectionPlugin instance\r\n * @priority 10\r\n */\r\nexport type Scopes =\r\n  | { type: 'scopepicked', data: { ids: NodeId[] } }\r\n  | { type: 'scopereleased', data: { ids: NodeId[] } }\r\n\r\n/**\r\n * Scope plugin. Responsible for user interaction with scopes (nested nodes, groups)\r\n * @priority 9\r\n * @listens nodetranslated\r\n * @listens noderemoved\r\n * @emits scopepicked\r\n * @emits scopereleased\r\n */\r\nexport class ScopesPlugin<\r\n  Schemes extends ExpectedScheme, T = never\r\n> extends Scope<Scopes, [Requires<Schemes>, Root<Schemes>]> {\r\n  padding: (id: NodeId) => Padding\r\n  exclude: (id: NodeId) => boolean\r\n  elder: (id: NodeId) => boolean\r\n  size: (id: NodeId, size: Size) => Size\r\n  editor!: NodeEditor<Schemes>\r\n  area!: BaseAreaPlugin<Schemes, T>\r\n  presets: Preset[] = []\r\n\r\n  constructor(props?: Props) {\r\n    super('scopes')\r\n    this.padding = props?.padding || (() => ({\r\n      top: 40,\r\n      left: 20,\r\n      right: 20,\r\n      bottom: 20\r\n    }))\r\n    this.exclude = props?.exclude || (() => false)\r\n    this.size = props?.size || ((id, size) => size)\r\n    this.elder = props?.elder || (() => true)\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements\r\n  setParent(scope: Scope<BaseArea<Schemes>, [Root<Schemes>]>): void {\r\n    super.setParent(scope)\r\n\r\n    this.area = this.parentScope<BaseAreaPlugin<Schemes, T>>(BaseAreaPlugin)\r\n    this.editor = this.area.parentScope<NodeEditor<Schemes>>(NodeEditor)\r\n\r\n    const props = { editor: this.editor, area: this.area }\r\n    const { padding, size, exclude, elder } = this\r\n    const pickedNodes = getPickedNodes(this)\r\n    const { translate, isTranslating } = trackedTranslate(props)\r\n    const agentParams = { padding, size, exclude, elder, translate }\r\n\r\n    useValidator(props)\r\n    useOrdering(props)\r\n\r\n    this.presets.forEach(preset => {\r\n      preset(agentParams, { ...props, scopes: this })\r\n    })\r\n\r\n    // eslint-disable-next-line max-statements, complexity\r\n    this.addPipe(async context => {\r\n      if (context.type === 'nodetranslated') {\r\n        const { id } = context.data\r\n        const current = props.editor.getNode(id)\r\n\r\n        if (!current) throw new Error('cannot find node')\r\n        // prevent translating children if the node translation\r\n        // is triggered by its resizing (when its children moved)\r\n        if (!isTranslating(id)) {\r\n          await translateChildren(id, context.data, props)\r\n        }\r\n\r\n        const parent = current.parent ? props.editor.getNode(current.parent) : null\r\n\r\n        if (parent && !agentParams.exclude(id)) {\r\n          const hasAnySelectedParent = hasSelectedParent(id, props)\r\n          const isPicked = belongsTo(current.id, pickedNodes, props)\r\n\r\n          if (!hasAnySelectedParent && !isPicked) {\r\n            await resizeParent(parent, agentParams, props)\r\n          }\r\n        }\r\n      }\r\n      if (context.type === 'noderemoved') {\r\n        const parentId = context.data.parent\r\n        const parent = parentId && props.editor.getNode(parentId)\r\n\r\n        if (parent) {\r\n          await resizeParent(parent, agentParams, props)\r\n        }\r\n      }\r\n      return context\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Adds a preset to the plugin.\r\n   * @param preset Preset that is responsible for user interactions with scopes (e.g. assigning nodes to scopes)\r\n   */\r\n  public addPreset(preset: Preset) {\r\n    this.presets.push(preset)\r\n  }\r\n\r\n  public isDependent(id: NodeId) {\r\n    const props = { editor: this.editor, area: this.area }\r\n    const node = this.editor.getNode(id)\r\n\r\n    return node && (node.selected || hasSelectedParent(id, props))\r\n  }\r\n}\r\n\r\nexport function getPickedNodes<S extends ExpectedScheme>(scopes: Scope<Scopes, [Requires<S>, Root<S>]>) {\r\n  const nodes: NodeId[] = []\r\n\r\n  scopes.addPipe(async context => {\r\n    if (!('type' in context)) return context\r\n    if (context.type === 'scopepicked') {\r\n      nodes.push(...context.data.ids)\r\n    }\r\n    if (context.type === 'scopereleased') {\r\n      nodes.splice(0, nodes.length, ...nodes.filter(id => !context.data.ids.includes(id)))\r\n    }\r\n    return context\r\n  })\r\n  return nodes\r\n}\r\n","import { NodeEditor } from 'rete'\r\nimport { BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ExpectedScheme } from './types'\r\nimport { watchClearing } from './utils'\r\n\r\ntype Props<T> = { editor: NodeEditor<ExpectedScheme>, area: BaseAreaPlugin<ExpectedScheme, T> }\r\n\r\nexport function useValidator<T>(props: Props<T>) {\r\n  const isClearing = watchClearing(props.editor)\r\n\r\n  // eslint-disable-next-line max-statements\r\n  props.area.addPipe(context => {\r\n    if (!context || !(typeof context === 'object' && 'type' in context)) return context\r\n    if (context.type === 'nodecreate') {\r\n      const parentId = context.data.parent\r\n\r\n      if (parentId) {\r\n        const parent = props.editor.getNodes().find(n => n.id === parentId)\r\n\r\n        if (!parent) throw new Error('parent node doesnt exist')\r\n      }\r\n    }\r\n    if (context.type === 'noderemove' && !isClearing()) {\r\n      const { id } = context.data\r\n\r\n      const child = props.editor.getNodes().find(n => n.parent === id)\r\n\r\n      if (child) throw new Error('cannot remove parent node with a children')\r\n    }\r\n    return context\r\n  })\r\n}\r\n"],"names":["bringConnectionBack","id","props","view","area","connectionViews","get","content","reorder","element","holder","firstChild","bringForward","nodeId","nodeViews","connections","editor","getConnections","filter","c","source","target","children","getNodes","n","parent","forEach","connection","bringConnectionForward","child","resizeParent","_x","_x2","_x3","_resizeParent","apply","this","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","agentParams","wrap","_context","prev","next","abrupt","stop","reassignParent","_x4","_reassignParent","ids","pointer","nodes","overlayNodes","areaElements","overlayNodesWithIndex","topOverlayParent","formerParents","_iterator","_step","formerParent","length","map","getNode","Boolean","node","elder","Error","_ref2","includes","x","position","y","width","height","Array","from","childNodes","_ref3","index","indexOf","sort","a","b","undefined","_createForOfIteratorHelper","s","done","value","t0","e","f","finish","translateChildren","_x5","_x6","_x7","_translateChildren","_callee3","_ref","previous","_context3","Promise","all","_ref4","_callee2","dx","dy","nodePosition","_context2","selected","translate","_x8","belongsTo","hasSelectedParent","params","context","scopes","timeout","picked","candidates","cancel","window","clearTimeout","pick","timeoutId","setTimeout","_candidates","targets","push","_toConsumableArray","emit","type","data","addPipe","Object","list","classic","pickedNodes","getPickedNodes","previousHighlighted","clientPointerPostion","updateHighlightedScopes","style","opacity","elements","document","elementsFromPoint","first","el","find","item","event","clientX","clientY","ScopesPlugin","_Scope","_this","_classCallCheck","_defineProperty","_callSuper","padding","top","left","right","bottom","exclude","size","_inherits","key","scope","_this2","_get","_getPrototypeOf","prototype","call","parentScope","BaseAreaPlugin","NodeEditor","_trackedTranslate","active","Map","increment","set","decrement","isTranslating","trackedTranslate","state","isClearing","_typeof","parentId","useValidator","getConnection","useOrdering","presets","preset","_objectSpread","_id","current","hasAnySelectedParent","isPicked","_parent","Scope","splice","concat"],"mappings":"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"}