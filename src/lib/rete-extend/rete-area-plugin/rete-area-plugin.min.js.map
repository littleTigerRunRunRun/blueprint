{"version":3,"file":"rete-area-plugin.min.js","sources":["src/content.ts","src/utils.ts","src/drag.ts","src/zoom.ts","src/area.ts","src/base.ts","src/connection-view.ts","src/elements-holder.ts","src/node-view.ts","src/extensions/shared/utils.ts","src/extensions/selectable.ts","src/extensions/zoom-at.ts","src/extensions/bounding-box.ts","src/extensions/order.ts","src/extensions/restrictor.ts","src/extensions/show-input-control.ts","src/extensions/snap.ts","src/index.ts"],"sourcesContent":["export class Content {\r\n  public holder: HTMLElement\r\n\r\n  constructor(private reordered: (target: HTMLElement) => Promise<unknown>) {\r\n    this.holder = document.createElement('div')\r\n    this.holder.style.transformOrigin = '0 0'\r\n  }\r\n\r\n  public getPointerFrom(event: MouseEvent) {\r\n    const { left, top } = this.holder.getBoundingClientRect()\r\n    const x = event.clientX - left\r\n    const y = event.clientY - top\r\n\r\n    return { x, y }\r\n  }\r\n\r\n  add(element: HTMLElement) {\r\n    this.holder.appendChild(element)\r\n  }\r\n\r\n  // eslint-disable-next-line no-undef\r\n  async reorder(target: HTMLElement, next: ChildNode | null) {\r\n    if (!this.holder.contains(target)) {\r\n      throw new Error(`content doesn't have 'target' for reordering`)\r\n    }\r\n    if (next !== null && !this.holder.contains(next)) {\r\n      throw new Error(`content doesn't have 'next' for reordering`)\r\n    }\r\n\r\n    this.holder.insertBefore(target, next)\r\n    await this.reordered(target)\r\n  }\r\n\r\n  remove(element: HTMLElement) {\r\n    this.holder.removeChild(element)\r\n  }\r\n}\r\n","import { Position, Size } from './types'\r\n\r\ntype PointerHandler = (event: PointerEvent) => void\r\ntype PointerListenerHandlers = {\r\n    down: PointerHandler\r\n    move: PointerHandler\r\n    up: PointerHandler\r\n}\r\n\r\nexport type PointerListener = { destroy: () => void }\r\n\r\n/**\r\n * listen to pointerdown, window's pointermove and pointerup events,\r\n * where last two not active before pointerdown triggered for performance reasons\r\n */\r\nexport function usePointerListener(element: HTMLElement, handlers: PointerListenerHandlers): PointerListener {\r\n  const move: PointerHandler = (event) => {\r\n    handlers.move(event)\r\n  }\r\n  const up: PointerHandler = (event) => {\r\n    window.removeEventListener('pointermove', move)\r\n    window.removeEventListener('pointerup', up)\r\n    window.removeEventListener('pointercancel', up)\r\n    handlers.up(event)\r\n  }\r\n  const down: PointerHandler = (event) => {\r\n    window.addEventListener('pointermove', move)\r\n    window.addEventListener('pointerup', up)\r\n    window.addEventListener('pointercancel', up)\r\n    handlers.down(event)\r\n  }\r\n\r\n  element.addEventListener('pointerdown', down)\r\n\r\n  return {\r\n    destroy() {\r\n      element.removeEventListener('pointerdown', down)\r\n      window.removeEventListener('pointermove', move)\r\n      window.removeEventListener('pointerup', up)\r\n      window.removeEventListener('pointercancel', up)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Bounding box\r\n */\r\nconst min = (arr: number[]) => arr.length === 0 ? 0 : Math.min(...arr)\r\nconst max = (arr: number[]) => arr.length === 0 ? 0 : Math.max(...arr)\r\n\r\nexport function getBoundingBox(rects: ({ position: Position } & Size)[]) {\r\n  const left = min(rects.map(rect => rect.position.x))\r\n  const top = min(rects.map(rect => rect.position.y))\r\n  const right = max(rects.map(rect => rect.position.x + rect.width))\r\n  const bottom = max(rects.map(rect => rect.position.y + rect.height))\r\n\r\n  return {\r\n    left,\r\n    right,\r\n    top,\r\n    bottom,\r\n    width: Math.abs(left - right),\r\n    height: Math.abs(top - bottom),\r\n    center: {\r\n      x: (left + right) / 2,\r\n      y: (top + bottom) / 2\r\n    }\r\n  }\r\n}\r\n","import { Position } from './types'\r\nimport { PointerListener, usePointerListener } from './utils'\r\n\r\ntype Events = {\r\n  start: (e: PointerEvent) => void\r\n  translate: (x: number, y: number, e: PointerEvent) => void\r\n  drag: (e: PointerEvent) => void\r\n}\r\n\r\ntype Guards = {\r\n  down: (e: PointerEvent) => boolean\r\n  move: (e: PointerEvent) => boolean\r\n}\r\n\r\ntype DragConfig = {\r\n  getCurrentPosition: () => Position\r\n  getZoom: () => number\r\n}\r\n\r\n/**\r\n * Drag handler, used to handle dragging of the area and nodes. Can be extended to add custom behavior.\r\n */\r\nexport class Drag {\r\n  private pointerStart?: Position\r\n  private startPosition?: Position\r\n  private pointerListener!: PointerListener\r\n  protected config!: DragConfig\r\n  protected events!: Events\r\n  protected guards: Guards\r\n\r\n  constructor(guards?: Guards) {\r\n    this.guards = guards || {\r\n      down: e => !(e.pointerType === 'mouse' && e.button !== 0),\r\n      move: () => true\r\n    }\r\n  }\r\n\r\n  public initialize(element: HTMLElement, config: DragConfig, events: Events) {\r\n    this.config = config\r\n    this.events = events\r\n    element.style.touchAction = 'none'\r\n    this.pointerListener = usePointerListener(element, {\r\n      down: this.down,\r\n      move: this.move,\r\n      up: this.up\r\n    })\r\n  }\r\n\r\n  private down = (e: PointerEvent) => {\r\n    if (!this.guards.down(e)) return\r\n\r\n    e.stopPropagation()\r\n    this.pointerStart = { x: e.pageX, y: e.pageY }\r\n    this.startPosition = { ...this.config.getCurrentPosition() }\r\n\r\n    this.events.start(e)\r\n  }\r\n\r\n  private move = (e: PointerEvent) => {\r\n    if (!this.pointerStart || !this.startPosition) return\r\n    if (!this.guards.move(e)) return\r\n    e.preventDefault()\r\n\r\n    const delta = {\r\n      x: e.pageX - this.pointerStart.x,\r\n      y: e.pageY - this.pointerStart.y\r\n    }\r\n    const zoom = this.config.getZoom()\r\n    const x = this.startPosition.x + delta.x / zoom\r\n    const y = this.startPosition.y + delta.y / zoom\r\n\r\n    this.events.translate(x, y, e)\r\n  }\r\n\r\n  private up = (e: PointerEvent) => {\r\n    if (!this.pointerStart) return\r\n\r\n    delete this.pointerStart\r\n    this.events.drag(e)\r\n  }\r\n\r\n  public destroy() {\r\n    this.pointerListener.destroy()\r\n  }\r\n}\r\n","\r\n/**\r\n * Zoom source\r\n */\r\nexport type ZoomSource = 'wheel' | 'touch' | 'dblclick'\r\nexport type OnZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => void\r\n\r\nexport type DblclickFilter = (delta:number) => number\r\n\r\n/**\r\n * Zoom class, used to handle zooming of the area. Can be extended to add custom behavior.\r\n * @internal\r\n */\r\nexport class Zoom {\r\n  protected previous: { cx: number, cy: number, distance: number } | null = null\r\n  protected pointers: PointerEvent[] = []\r\n  protected container!: HTMLElement\r\n  protected element!: HTMLElement\r\n  protected onzoom!: OnZoom\r\n\r\n  constructor(protected intensity: number, private filter?: { dblclick?: DblclickFilter }) { }\r\n\r\n  public initialize(container: HTMLElement, element: HTMLElement, onzoom: OnZoom) {\r\n    this.container = container\r\n    this.element = element\r\n    this.onzoom = onzoom\r\n    this.container.addEventListener('wheel', this.wheel)\r\n    this.container.addEventListener('pointerdown', this.down)\r\n    this.container.addEventListener('dblclick', this.dblclick)\r\n\r\n    window.addEventListener('pointermove', this.move)\r\n    window.addEventListener('pointerup', this.up)\r\n    window.addEventListener('contextmenu', this.contextmenu)\r\n    window.addEventListener('pointercancel', this.up)\r\n  }\r\n\r\n  protected wheel = (e: WheelEvent) => {\r\n    e.preventDefault()\r\n\r\n    const { left, top } = this.element.getBoundingClientRect()\r\n    const isNegative = e.deltaY < 0\r\n    const delta = isNegative ? this.intensity : - this.intensity\r\n    const ox = (left - e.clientX) * delta\r\n    const oy = (top - e.clientY) * delta\r\n\r\n    this.onzoom(delta, ox, oy, 'wheel')\r\n  }\r\n\r\n  private getTouches() {\r\n    const e = { touches: this.pointers }\r\n    const [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY]\r\n    const [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY]\r\n\r\n    const distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n\r\n    return {\r\n      cx: (x1 + x2) / 2,\r\n      cy: (y1 + y2) / 2,\r\n      distance\r\n    }\r\n  }\r\n\r\n  protected down = (e: PointerEvent) => {\r\n    this.pointers.push(e)\r\n  }\r\n\r\n  protected move = (e: PointerEvent) => {\r\n    this.pointers = this.pointers.map(p => p.pointerId === e.pointerId ? e : p)\r\n    if (!this.isTranslating()) return\r\n\r\n    const { left, top } = this.element.getBoundingClientRect()\r\n    const { cx, cy, distance } = this.getTouches()\r\n\r\n    if (this.previous !== null && this.previous.distance > 0) {\r\n      const delta = distance / this.previous.distance - 1\r\n\r\n      const ox = (left - cx) * delta\r\n      const oy = (top - cy) * delta\r\n\r\n      this.onzoom(delta, ox - (this.previous.cx - cx), oy - (this.previous.cy - cy), 'touch')\r\n    }\r\n    this.previous = { cx, cy, distance }\r\n  }\r\n\r\n  protected contextmenu = () => {\r\n    this.pointers = []\r\n  }\r\n\r\n  protected up = (e: PointerEvent) => {\r\n    this.previous = null\r\n    this.pointers = this.pointers.filter(p => p.pointerId !== e.pointerId)\r\n  }\r\n\r\n  protected dblclick = (e: MouseEvent) => {\r\n    e.preventDefault()\r\n\r\n    const { left, top } = this.element.getBoundingClientRect()\r\n    const delta = (this.filter?.dblclick || function (n:number) { return n })(4 * this.intensity)\r\n\r\n    if (delta === 0) return\r\n\r\n    const ox = (left - e.clientX) * delta\r\n    const oy = (top - e.clientY) * delta\r\n\r\n    this.onzoom(delta, ox, oy, 'dblclick')\r\n  }\r\n\r\n  public isTranslating() { // is translating while zoom (works on multitouch)\r\n    return this.pointers.length >= 2\r\n  }\r\n\r\n  public destroy() {\r\n    this.container.removeEventListener('wheel', this.wheel)\r\n    this.container.removeEventListener('pointerdown', this.down)\r\n    this.container.removeEventListener('dblclick', this.dblclick)\r\n\r\n    window.removeEventListener('pointermove', this.move)\r\n    window.removeEventListener('pointerup', this.up)\r\n    window.removeEventListener('pointercancel', this.up)\r\n  }\r\n}\r\n","import { Content } from './content'\r\nimport { Drag } from './drag'\r\nimport { Position } from './types'\r\nimport { Zoom, ZoomSource, DblclickFilter } from './zoom'\r\n\r\nexport type Transform = Position & { k: number }\r\nexport type TranslateEventParams = { previous: Transform, position: Position }\r\nexport type ZoomEventParams = { previous: Transform, zoom: number, source?: ZoomSource }\r\n\r\ntype Events = {\r\n  zoomed: (params: ZoomEventParams) => Promise<unknown>\r\n  pointerDown: (position: Position, event: PointerEvent) => void\r\n  pointerMove: (position: Position, event: PointerEvent) => void\r\n  pointerUp: (position: Position, event: PointerEvent) => void\r\n  resize: (event: Event) => void\r\n  translated: (params: TranslateEventParams) => Promise<unknown>\r\n  reordered: (element: HTMLElement) => Promise<unknown>\r\n}\r\ntype Guards = {\r\n  translate: (params: TranslateEventParams) => Promise<unknown | boolean>\r\n  zoom: (params: ZoomEventParams) => Promise<unknown | boolean>\r\n}\r\n\r\nexport type AreaFilter = {\r\n  zoom?: {\r\n    dblclick?: DblclickFilter\r\n  },\r\n  move?: {\r\n    limit?: (x: number, y: number, id: string) => { x: number, y: number }\r\n  }\r\n}\r\n\r\nexport class Area {\r\n  public transform: Transform = { k: 1, x: 0, y: 0 }\r\n  public pointer: Position = { x: 0, y: 0 }\r\n  public content: Content\r\n\r\n  private zoomHandler: Zoom | null = null\r\n  private dragHandler: Drag | null = null\r\n\r\n  constructor(\r\n    private container: HTMLElement,\r\n    private events: Events,\r\n    private guards: Guards,\r\n    public filter:AreaFilter\r\n  ) {\r\n    this.content = new Content(element => this.events.reordered(element))\r\n    this.content.holder.style.transformOrigin = '0 0'\r\n\r\n    this.setZoomHandler(new Zoom(0.1, filter?.zoom))\r\n    this.setDragHandler(new Drag())\r\n\r\n    this.container.addEventListener('pointerdown', this.pointerdown)\r\n    this.container.addEventListener('pointermove', this.pointermove)\r\n    window.addEventListener('pointerup', this.pointerup)\r\n    window.addEventListener('resize', this.resize)\r\n\r\n    container.appendChild(this.content.holder)\r\n    this.update()\r\n  }\r\n\r\n  private update() {\r\n    const { x, y, k } = this.transform\r\n\r\n    this.content.holder.style.transform = `translate(${x}px, ${y}px) scale(${k})`\r\n  }\r\n\r\n  /**\r\n   * Drag handler. Destroy previous drag handler if exists.\r\n   * @param drag drag handler\r\n   * @example area.area.setDragHandler(null) // disable drag\r\n   */\r\n  public setDragHandler(drag: Drag | null) {\r\n    if (this.dragHandler) this.dragHandler.destroy()\r\n    this.dragHandler = drag\r\n    if (this.dragHandler) this.dragHandler.initialize(\r\n      this.container,\r\n      {\r\n        getCurrentPosition: () => this.transform,\r\n        getZoom: () => 1\r\n      },\r\n      {\r\n        start: () => null,\r\n        translate: this.onTranslate,\r\n        drag: () => null\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Set zoom handler. Destroy previous zoom handler if exists.\r\n   * @param zoom zoom handler\r\n   * @example area.area.setZoomHandler(null) // disable zoom\r\n   */\r\n  public setZoomHandler(zoom: Zoom | null) {\r\n    if (this.zoomHandler) this.zoomHandler.destroy()\r\n    this.zoomHandler = zoom\r\n    if (this.zoomHandler) this.zoomHandler.initialize(this.container, this.content.holder, this.onZoom)\r\n  }\r\n\r\n  public setPointerFrom(event: MouseEvent) {\r\n    const { x, y } = this.content.getPointerFrom(event)\r\n    const { k } = this.transform\r\n\r\n    this.pointer = { x: x / k, y: y / k }\r\n  }\r\n\r\n  private pointerdown = (event: PointerEvent) => {\r\n    this.setPointerFrom(event)\r\n    this.events.pointerDown(this.pointer, event)\r\n  }\r\n\r\n  private pointermove = (event: PointerEvent) => {\r\n    this.setPointerFrom(event)\r\n    this.events.pointerMove(this.pointer, event)\r\n  }\r\n\r\n  private pointerup = (event: PointerEvent) => {\r\n    this.setPointerFrom(event)\r\n    this.events.pointerUp(this.pointer, event)\r\n  }\r\n\r\n  private resize = (event: Event) => {\r\n    this.events.resize(event)\r\n  }\r\n\r\n  private onTranslate = (x: number, y: number) => {\r\n    if (this.zoomHandler && this.zoomHandler.isTranslating()) return // lock translation while zoom on multitouch\r\n    this.translate(x, y)\r\n  }\r\n\r\n  private onZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => {\r\n    this.zoom(this.transform.k * (1 + delta), ox, oy, source)\r\n\r\n    this.update()\r\n  }\r\n\r\n  /**\r\n   * Change position of the area\r\n   * @param x desired x coordinate\r\n   * @param y desired y coordinate\r\n   * @returns true if the translation was successful, false otherwise\r\n   * @emits translate\r\n   * @emits translated\r\n   */\r\n  public async translate(x: number, y: number) {\r\n    type T = undefined | { data: TranslateEventParams }\r\n    const position = { x, y }\r\n    const result = await this.guards.translate({ previous: this.transform, position }) as T\r\n\r\n    if (!result) return false\r\n\r\n    this.transform.x = result.data.position.x\r\n    this.transform.y = result.data.position.y\r\n\r\n    this.update()\r\n\r\n    await this.events.translated(result.data)\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Change zoom level of the area\r\n   * @param zoom new zoom level\r\n   * @param ox x coordinate of the origin of the zoom\r\n   * @param oy y coordinate of the origin of the zoom\r\n   * @param source source of the zoom\r\n   * @returns true if the zoom was successful, false otherwise\r\n   * @emits zoom\r\n   * @emits zoomed\r\n   */\r\n  public async zoom(zoom: number, ox = 0, oy = 0, source?: ZoomSource) {\r\n    type T = undefined | { data: ZoomEventParams }\r\n    const k = this.transform.k\r\n    const result = await this.guards.zoom({ previous: this.transform, zoom, source }) as T\r\n\r\n    if (!result) return true\r\n\r\n    const d = (k - result.data.zoom) / ((k - zoom) || 1)\r\n\r\n    this.transform.k = result.data.zoom || 1\r\n    this.transform.x += ox * d\r\n    this.transform.y += oy * d\r\n\r\n    this.update()\r\n\r\n    await this.events.zoomed(result.data)\r\n    return false\r\n  }\r\n\r\n  public destroy() {\r\n    this.container.removeEventListener('pointerdown', this.pointerdown)\r\n    this.container.removeEventListener('pointermove', this.pointermove)\r\n    window.removeEventListener('pointerup', this.pointerup)\r\n    window.removeEventListener('resize', this.resize)\r\n    if (this.dragHandler) this.dragHandler.destroy()\r\n    if (this.zoomHandler) this.zoomHandler.destroy()\r\n    this.content.holder.innerHTML = ''\r\n  }\r\n}\r\n","import { BaseSchemes, ConnectionId, NodeId, Root, Scope } from 'rete'\r\n\r\nimport { NodeResizeEventParams, NodeTranslateEventParams } from './node-view'\r\nimport { GetRenderTypes, Position, RenderSignal } from './types'\r\n\r\ninterface NodeView {\r\n  element: HTMLElement\r\n  position: Position\r\n  translate(x: number, y: number): Promise<boolean>\r\n  resize(width: number, height: number): Promise<boolean>\r\n}\r\n\r\ninterface ConnectionView {\r\n  element: HTMLElement\r\n}\r\n\r\ninterface Content {\r\n  holder: HTMLElement\r\n  add(element: HTMLElement): void\r\n  // eslint-disable-next-line no-undef\r\n  reorder(target: HTMLElement, next: ChildNode | null): void\r\n  remove(element: HTMLElement): void\r\n}\r\n\r\ninterface Area {\r\n  pointer: Position\r\n  content: Content\r\n}\r\n\r\n/**\r\n * A union of all possible signals that can be emitted by any area plugin\r\n * @priority 10\r\n */\r\nexport type BaseArea<Schemes extends BaseSchemes> =\r\n  | { type: 'nodepicked', data: { id: string } }\r\n  | { type: 'nodedragged', data: Schemes['Node'] }\r\n  | { type: 'nodetranslate', data: { id: string } & NodeTranslateEventParams }\r\n  | { type: 'nodetranslated', data: { id: string } & NodeTranslateEventParams }\r\n  | { type: 'contextmenu', data: { event: MouseEvent, context: 'root' | Schemes['Node'] | Schemes['Connection'] } }\r\n  | { type: 'pointerdown', data: { position: Position, event: PointerEvent } }\r\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\r\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\r\n  | { type: 'noderesize', data: { id: string } & NodeResizeEventParams }\r\n  | { type: 'noderesized', data: { id: string } & NodeResizeEventParams }\r\n  | RenderSignal<'node', { payload: Schemes['Node'] }>\r\n  | RenderSignal<'connection', { payload: Schemes['Connection'], start?: Position, end?: Position }>\r\n  | { type: 'unmount', data: { element: HTMLElement } }\r\n  | { type: 'reordered', data: { element: HTMLElement } }\r\n\r\n/**\r\n * Base abstract class for area plugins that provides a common interface\r\n * @abstract\r\n */\r\nexport abstract class BaseAreaPlugin<Schemes extends BaseSchemes, Signals> extends Scope<Signals, [Root<Schemes>]> {\r\n  public abstract nodeViews: Map<NodeId, NodeView>\r\n  public abstract connectionViews: Map<ConnectionId, ConnectionView>\r\n  public abstract area: Area\r\n\r\n  abstract addNodeView(connection: Schemes['Node']): NodeView\r\n  abstract removeNodeView(connection: NodeId): void\r\n  abstract addConnectionView(connection: Schemes['Connection']): ConnectionView\r\n  abstract removeConnectionView(connection: ConnectionId): void\r\n  abstract update(type: GetRenderTypes<Signals>, id: string): Promise<void | boolean | undefined>\r\n  abstract resize(id: NodeId, width: number, height: number): Promise<void | boolean | undefined>\r\n  abstract translate(id: NodeId, position: Position): Promise<void | boolean | undefined>\r\n  abstract destroy(): void\r\n}\r\n","\r\ntype Events = {\r\n  contextmenu: (event: MouseEvent) => void\r\n}\r\n\r\nexport class ConnectionView {\r\n  element: HTMLElement\r\n\r\n  constructor(events: Events) {\r\n    this.element = document.createElement('div')\r\n\r\n    this.element.style.position = 'absolute'\r\n    this.element.style.left = '0'\r\n    this.element.style.top = '0'\r\n    this.element.addEventListener('contextmenu', event => events.contextmenu(event))\r\n  }\r\n}\r\n","\r\nexport class ElementsHolder<E extends HTMLElement, Ctx extends { type: string, element: E, payload?: { id: string } }> {\r\n  views = new WeakMap<E, Ctx>()\r\n  viewsElements = new Map<`${string}_${string}`, E>()\r\n\r\n  public set(context: Ctx) {\r\n    const { element, type, payload } = context\r\n\r\n    if (payload?.id) {\r\n      this.views.set(element, context)\r\n      this.viewsElements.set(`${type}_${payload.id}`, element)\r\n    }\r\n  }\r\n\r\n  public get(type: string, id: string) {\r\n    const element = this.viewsElements.get(`${type}_${id}`)\r\n\r\n    return element && this.views.get(element)\r\n  }\r\n\r\n  public delete(element: E) {\r\n    const view = this.views.get(element)\r\n\r\n    if (view && view.payload?.id) {\r\n      this.views.delete(element)\r\n      this.viewsElements.delete(`${view.type}_${view.payload.id}`)\r\n    }\r\n  }\r\n}\r\n","import { Drag } from './drag'\r\nimport { Position, Size } from './types'\r\n\r\nexport type NodeTranslateEventParams = { position: Position, previous: Position }\r\nexport type NodeResizeEventParams = { size: Size }\r\n\r\ntype Events = {\r\n  picked: () => void\r\n  translated: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\r\n  dragged: () => void\r\n  contextmenu: (event: MouseEvent) => void\r\n  resized: (params: NodeResizeEventParams) => Promise<unknown | boolean>\r\n}\r\ntype Guards = {\r\n  resize: (params: NodeResizeEventParams) => Promise<unknown | boolean>\r\n  translate: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\r\n}\r\n\r\nexport class NodeView {\r\n  element: HTMLElement\r\n  position: Position\r\n  dragHandler: Drag\r\n\r\n  constructor(private getZoom: () => number, private events: Events, private guards: Guards) {\r\n    this.element = document.createElement('div')\r\n    this.element.style.position = 'absolute'\r\n    this.position = { x: 0, y: 0 }\r\n    this.translate(0, 0)\r\n\r\n    this.element.addEventListener('contextmenu', event => this.events.contextmenu(event))\r\n\r\n    this.dragHandler = new Drag()\r\n    this.dragHandler.initialize(\r\n      this.element,\r\n      {\r\n        getCurrentPosition: () => this.position,\r\n        getZoom: () => this.getZoom()\r\n      },\r\n      {\r\n        start: this.events.picked,\r\n        translate: this.translate,\r\n        drag: this.events.dragged\r\n      }\r\n    )\r\n  }\r\n\r\n  public translate = async (x: number, y: number) => {\r\n    type Params = undefined | { data: NodeTranslateEventParams }\r\n    const previous = { ...this.position }\r\n    const translation = await this.guards.translate({ previous, position: { x, y } }) as Params\r\n\r\n    if (!translation) return false\r\n\r\n    this.position = { ...translation.data.position }\r\n    this.element.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`\r\n\r\n    await this.events.translated({ position: this.position, previous })\r\n\r\n    return true\r\n  }\r\n\r\n  public resize = async (width: number, height: number) => {\r\n    const size = { width, height }\r\n\r\n    if (!(await this.guards.resize({ size }))) return false\r\n\r\n    const el = this.element.querySelector('*:not(span)')\r\n\r\n    if (!el || !(el instanceof HTMLElement)) return false\r\n\r\n    el.style.width = `${width}px`\r\n    el.style.height = `${height}px`\r\n\r\n    await this.events.resized({ size })\r\n\r\n    return true\r\n  }\r\n\r\n  public destroy() {\r\n    this.dragHandler.destroy()\r\n  }\r\n}\r\n","import { BaseAreaPlugin } from '../../base'\r\nimport { NodeView } from '../../node-view'\r\nimport { SchemesWithSizes } from './types'\r\n\r\nexport function getNodesRect<S extends SchemesWithSizes, K>(nodes: S['Node'][], views: BaseAreaPlugin<S, K>['nodeViews']) {\r\n  return nodes\r\n    .map(node => ({ view: views.get(node.id) as NodeView, node }))\r\n    .filter(item => item.view)\r\n    .map(({ view, node }) => {\r\n      const { width, height } = node\r\n\r\n      if (typeof width !== 'undefined' && typeof height !== 'undefined') {\r\n        return {\r\n          position: view.position,\r\n          width,\r\n          height\r\n        }\r\n      }\r\n\r\n      return {\r\n        position: view.position,\r\n        width: view.element.clientWidth,\r\n        height: view.element.clientHeight\r\n      }\r\n    })\r\n}\r\n","import { BaseSchemes, GetSchemes, NodeEditor, NodeId } from 'rete'\r\n\r\nimport { BaseArea, BaseAreaPlugin } from '../base'\r\n\r\ntype Schemes = GetSchemes<BaseSchemes['Node'] & { selected?: boolean }, any>\r\n\r\n/**\r\n * Selector's accumulate function, activated when the ctrl key is pressed\r\n */\r\nexport function accumulateOnCtrl() {\r\n  let pressed = false\r\n\r\n  function keydown(e: KeyboardEvent) {\r\n    if (e.key === 'Control') pressed = true\r\n  }\r\n  function keyup(e: KeyboardEvent) {\r\n    if (e.key === 'Control') pressed = false\r\n  }\r\n\r\n  document.addEventListener('keydown', keydown)\r\n  document.addEventListener('keyup', keyup)\r\n\r\n  return {\r\n    active() {\r\n      return pressed\r\n    },\r\n    destroy() {\r\n      document.removeEventListener('keydown', keydown)\r\n      document.removeEventListener('keyup', keyup)\r\n    }\r\n  }\r\n}\r\n\r\nexport type SelectorEntity = { label: string, id: string, unselect(): void, translate(dx: number, dy: number): void }\r\n\r\n/**\r\n * Selector class. Used to collect selected entities (nodes, connections, etc.) and synchronize them (select, unselect, translate, etc.).\r\n * Can be extended to add custom functionality.\r\n */\r\nexport class Selector<E extends SelectorEntity> {\r\n  entities = new Map<string, E>()\r\n  pickId: string | null = null\r\n\r\n  isSelected(entity: Pick<E, 'label' | 'id'>) {\r\n    return this.entities.has(`${entity.label}_${entity.id}`)\r\n  }\r\n\r\n  add(entity: E, accumulate: boolean) {\r\n    if (!accumulate) this.unselectAll()\r\n    this.entities.set(`${entity.label}_${entity.id}`, entity)\r\n  }\r\n\r\n  remove(entity: Pick<E, 'label' | 'id'>) {\r\n    const id = `${entity.label}_${entity.id}`\r\n    const item = this.entities.get(id)\r\n\r\n    if (item) {\r\n      this.entities.delete(id)\r\n      item.unselect()\r\n    }\r\n  }\r\n\r\n  unselectAll() {\r\n    [...Array.from(this.entities.values())].forEach(item => this.remove(item))\r\n  }\r\n\r\n  translate(dx: number, dy: number) {\r\n    this.entities.forEach(item => !this.isPicked(item) && item.translate(dx, dy))\r\n  }\r\n\r\n  pick(entity: Pick<E, 'label' | 'id'>) {\r\n    this.pickId = `${entity.label}_${entity.id}`\r\n  }\r\n\r\n  release() {\r\n    this.pickId = null\r\n  }\r\n\r\n  isPicked(entity: Pick<E, 'label' | 'id'>) {\r\n    return this.pickId === `${entity.label}_${entity.id}`\r\n  }\r\n}\r\n\r\n/**\r\n * Selector factory, uses default Selector class\r\n * @returns Selector instance\r\n */\r\nexport function selector<E extends SelectorEntity>() {\r\n  return new Selector<E>()\r\n}\r\n\r\n/**\r\n * Accumulating interface, used to determine whether to accumulate entities on selection\r\n */\r\nexport type Accumulating = {\r\n  active(): boolean\r\n}\r\n\r\nexport type Selectable = ReturnType<typeof selector>\r\n\r\n/**\r\n * Selectable nodes extension. Adds the ability to select nodes in the area.\r\n * @param base BaseAreaPlugin instance\r\n * @param core Selectable instance\r\n * @param options.accumulating Accumulating interface\r\n * @listens nodepicked\r\n * @listens nodetranslated\r\n * @listens pointerdown\r\n * @listens pointermove\r\n * @listens pointerup\r\n */\r\nexport function selectableNodes<T>(base: BaseAreaPlugin<Schemes, T>, core: Selectable, options: {\r\n  accumulating: Accumulating\r\n}) {\r\n  let editor: null | NodeEditor<Schemes> = null\r\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\r\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<Schemes>>(NodeEditor))\r\n\r\n  let twitch: null | number = 0\r\n\r\n  function selectNode(node: Schemes['Node']) {\r\n    if (!node.selected) {\r\n      node.selected = true\r\n      area.update('node', node.id)\r\n    }\r\n  }\r\n\r\n  function unselectNode(node: Schemes['Node']) {\r\n    if (node.selected) {\r\n      node.selected = false\r\n      area.update('node', node.id)\r\n    }\r\n  }\r\n  /**\r\n   * Select node programmatically\r\n   * @param nodeId Node id\r\n   * @param accumulate Whether to accumulate nodes on selection\r\n   */\r\n  function add(nodeId: NodeId, accumulate: boolean) {\r\n    const node = getEditor().getNode(nodeId)\r\n\r\n    if (!node) return\r\n\r\n    core.add({\r\n      label: 'node',\r\n      id: node.id,\r\n      translate(dx, dy) {\r\n        const view = area.nodeViews.get(node.id)\r\n        const current = view?.position\r\n\r\n        if (current) {\r\n          view.translate(current.x + dx, current.y + dy)\r\n        }\r\n      },\r\n      unselect() {\r\n        unselectNode(node)\r\n      }\r\n    }, accumulate)\r\n    selectNode(node)\r\n  }\r\n  /**\r\n   * Unselect node programmatically\r\n   * @param nodeId Node id\r\n   */\r\n  function remove(nodeId: NodeId) {\r\n    core.remove({ id: nodeId, label: 'node' })\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements, complexity\r\n  area.addPipe(context => {\r\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\r\n\r\n    if (context.type === 'nodepicked') {\r\n      const pickedId = context.data.id\r\n      const accumulate = options.accumulating.active()\r\n\r\n      core.pick({ id: pickedId, label: 'node' })\r\n      twitch = null\r\n      add(pickedId, accumulate)\r\n    } else if (context.type === 'nodetranslated') {\r\n      const { id, position, previous } = context.data\r\n      const dx = position.x - previous.x\r\n      const dy = position.y - previous.y\r\n\r\n      if (core.isPicked({ id, label: 'node' })) {\r\n        core.translate(dx, dy)\r\n      }\r\n    } else if (context.type === 'pointerdown') {\r\n      twitch = 0\r\n    } else if (context.type === 'pointermove') {\r\n      if (twitch !== null) twitch++\r\n    } else if (context.type === 'pointerup') {\r\n      if (twitch !== null && twitch < 4) {\r\n        core.unselectAll()\r\n      }\r\n      twitch = null\r\n    }\r\n    return context\r\n  })\r\n\r\n  return {\r\n    select: add,\r\n    unselect: remove\r\n  }\r\n}\r\n\r\n","import { NodeEditor } from 'rete'\r\n\r\nimport { AreaPlugin } from '..'\r\nimport { getBoundingBox } from '../utils'\r\nimport { NodeRef, SchemesWithSizes } from './shared/types'\r\nimport { getNodesRect } from './shared/utils'\r\n\r\n/**\r\n * Zoom extension parameters\r\n */\r\nexport type Params = {\r\n  /** Set gap between nodes and the viewport border */\r\n  scale?: number\r\n}\r\n\r\n/**\r\n * Zooms the area to fit the given nodes\r\n * @param plugin The area plugin\r\n * @param nodes The nodes to fit\r\n * @param params The zoom parameters\r\n */\r\n// eslint-disable-next-line max-statements, max-len\r\nexport async function zoomAt<Schemes extends SchemesWithSizes, K>(plugin: AreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[], params?: Params) {\r\n  const { scale = 0.9 } = params || {}\r\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\r\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\r\n  const rects = getNodesRect(list, plugin.nodeViews)\r\n  const boundingBox = getBoundingBox(rects)\r\n  const [w, h] = [plugin.container.clientWidth, plugin.container.clientHeight]\r\n  const [kw, kh] = [w / boundingBox.width, h / boundingBox.height]\r\n  const k = Math.min(kh * scale, kw * scale, 1)\r\n\r\n  plugin.area.transform.x = w / 2 - boundingBox.center.x * k\r\n  plugin.area.transform.y = h / 2 - boundingBox.center.y * k\r\n  await plugin.area.zoom(k, 0, 0)\r\n}\r\n","import { BaseSchemes, NodeEditor } from 'rete'\r\n\r\nimport { BaseAreaPlugin } from '../base'\r\nimport { getBoundingBox as getBBox } from '../utils'\r\nimport { NodeRef } from './shared/types'\r\nimport { getNodesRect } from './shared/utils'\r\n\r\n/**\r\n * Get the bounding box of the given nodes\r\n * @param plugin The area plugin\r\n * @param nodes The nodes to get the bounding box of\r\n * @returns The bounding box\r\n */\r\nexport function getBoundingBox<Schemes extends BaseSchemes, K>(plugin: BaseAreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[]) {\r\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\r\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\r\n  const rects = getNodesRect(list, plugin.nodeViews)\r\n\r\n  return getBBox(rects)\r\n}\r\n","import { BaseSchemes } from 'rete'\r\n\r\nimport { BaseArea, BaseAreaPlugin } from '../base'\r\n\r\n/**\r\n * Simple nodes order extension\r\n * @param base The base area plugin\r\n * @listens nodepicked\r\n * @listens connectioncreated\r\n */\r\nexport function simpleNodesOrder<Schemes extends BaseSchemes, T>(base: BaseAreaPlugin<Schemes, T>) {\r\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\r\n\r\n  area.addPipe(context => {\r\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\r\n\r\n    if (context.type === 'nodepicked') {\r\n      const view = area.nodeViews.get(context.data.id)\r\n      const { content } = area.area\r\n\r\n      if (view) {\r\n        content.reorder(view.element, null)\r\n      }\r\n    }\r\n    if (context.type === 'connectioncreated') {\r\n      const view = area.connectionViews.get(context.data.id)\r\n      const { content } = area.area\r\n\r\n      if (view) {\r\n        content.reorder(view.element, content.holder.firstChild)\r\n      }\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { BaseSchemes } from 'rete'\r\n\r\nimport { AreaPlugin } from '..'\r\nimport { Position } from '../types'\r\n\r\ntype ScaleRange = { min: number, max: number }\r\ntype TranslateRange = { left: number, top: number, right: number, bottom: number }\r\n\r\n/**\r\n * Restrictor extension parameters\r\n */\r\nexport type Params = {\r\n  /** The scaling range */\r\n  scaling?: ScaleRange | (() => ScaleRange) | boolean\r\n  /** The translation range */\r\n  translation?: TranslateRange | (() => TranslateRange) | boolean\r\n}\r\n\r\n/**\r\n * Restrictor extension. Restricts the area zoom and position\r\n * @param plugin The area plugin\r\n * @param params The restrictor parameters\r\n * @listens zoom\r\n * @listens zoomed\r\n * @listens translated\r\n */\r\nexport function restrictor<Schemes extends BaseSchemes, K>(plugin: AreaPlugin<Schemes, K>, params?: Params) {\r\n  const scaling = params?.scaling\r\n    ? params.scaling === true ? { min: 0.1, max: 1 } : params.scaling\r\n    : false\r\n  const translation = params?.translation\r\n    ? params.translation === true ? { left: 0, top: 0, right: 1000, bottom: 1000 } : params.translation\r\n    : false\r\n\r\n  function restrictZoom(zoom: number) {\r\n    if (!scaling) throw new Error('scaling param isnt defined')\r\n    const { min, max } = typeof scaling === 'function' ? scaling() : scaling\r\n\r\n    if (zoom < min) {\r\n      return min\r\n    } else if (zoom > max) {\r\n      return max\r\n    }\r\n    return zoom\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements\r\n  function restrictPosition(position: Position): Position {\r\n    if (!translation) throw new Error('translation param isnt defined')\r\n    const nextPosition = { ...position }\r\n    const { left, top, right, bottom } = typeof translation === 'function'\r\n      ? translation()\r\n      : translation\r\n\r\n    if (nextPosition.x < left) {\r\n      nextPosition.x = left\r\n    }\r\n    if (nextPosition.x > right) {\r\n      nextPosition.x = right\r\n    }\r\n    if (nextPosition.y < top) {\r\n      nextPosition.y = top\r\n    }\r\n    if (nextPosition.y > bottom) {\r\n      nextPosition.y = bottom\r\n    }\r\n\r\n    return nextPosition\r\n  }\r\n\r\n  plugin.addPipe(context => {\r\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\r\n    if (scaling && context.type === 'zoom') {\r\n      return {\r\n        ...context,\r\n        data: {\r\n          ...context.data,\r\n          zoom: restrictZoom(context.data.zoom)\r\n        }\r\n      }\r\n    }\r\n    if (translation && context.type === 'zoomed') {\r\n      const position = restrictPosition(plugin.area.transform)\r\n\r\n      plugin.area.translate(position.x, position.y)\r\n    }\r\n    if (translation && context.type === 'translate') {\r\n      return {\r\n        ...context,\r\n        data: {\r\n          ...context.data,\r\n          position: restrictPosition(context.data.position)\r\n        }\r\n      }\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { BaseSchemes, ClassicPreset as Classic, GetSchemes, NodeEditor } from 'rete'\r\n\r\nimport { BaseAreaPlugin } from '../base'\r\n\r\ntype Scheme = GetSchemes<Classic.Node, Classic.Connection<Classic.Node, Classic.Node>>\r\ntype Visible<S extends Scheme> = (props: { hasAnyConnection: boolean, input: NonNullable<S['Node']['inputs'][string]> }) => boolean\r\n\r\n/**\r\n * Show input control extension. It will show the input's control when there is no connection and hide it when there is a connection.\r\n * @param area The base area plugin\r\n * @param visible The visible function\r\n * @listens connectioncreated\r\n * @listens connectionremoved\r\n */\r\nexport function showInputControl<S extends Scheme>(area: BaseAreaPlugin<BaseSchemes, any>, visible?: Visible<S>) {\r\n  let editor: null | NodeEditor<S> = null\r\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<S>>(NodeEditor))\r\n\r\n  function updateInputControlVisibility(target: string, targetInput: string) {\r\n    const node = getEditor().getNode(target)\r\n\r\n    if (!node) return\r\n\r\n    const input = (node.inputs as Record<string, S['Node']['inputs'][string] | undefined>)[targetInput]\r\n\r\n    if (!input) throw new Error('cannot find input')\r\n\r\n    const previous = input.showControl\r\n    const connections = getEditor().getConnections()\r\n    const hasAnyConnection = Boolean(connections.find(connection => {\r\n      return connection.target === target && connection.targetInput === targetInput\r\n    }))\r\n\r\n    input.showControl = visible ? visible({ hasAnyConnection, input }) : !hasAnyConnection\r\n\r\n    if (input.showControl !== previous) {\r\n      area.update('node', node.id)\r\n    }\r\n  }\r\n\r\n  area.addPipe(context => {\r\n    if (context.type === 'connectioncreated' || context.type === 'connectionremoved') {\r\n      updateInputControlVisibility(context.data.target, context.data.targetInput)\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { BaseSchemes } from 'rete'\r\n\r\nimport { BaseArea, BaseAreaPlugin } from '../base'\r\n\r\n/**\r\n * Snap grid extension parameters\r\n */\r\nexport type Params = {\r\n  /** The grid size */\r\n  size?: number\r\n  /** Whether to snap on node drag */\r\n  dynamic?: boolean\r\n}\r\n\r\n/**\r\n * Snap grid extension\r\n * @param base The base area plugin\r\n * @param params The snap parameters\r\n * @listens nodetranslate\r\n * @listens nodedragged\r\n */\r\nexport function snapGrid<Schemes extends BaseSchemes, K>(base: BaseAreaPlugin<Schemes, K>, params?: Params) {\r\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\r\n  const size = typeof params?.size === 'undefined' ? 16 : params.size\r\n  const dynamic = typeof params?.dynamic === 'undefined' ? true : params.dynamic\r\n\r\n  function snap(value: number) {\r\n    return Math.round(value / size) * size\r\n  }\r\n\r\n  area.addPipe(context => {\r\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\r\n    if (dynamic && context.type === 'nodetranslate') {\r\n      const { position } = context.data\r\n      const x = snap(position.x)\r\n      const y = snap(position.y)\r\n\r\n      return {\r\n        ...context,\r\n        data: {\r\n          ...context.data,\r\n          position: { x, y }\r\n        }\r\n      }\r\n    }\r\n    if (!dynamic && context.type === 'nodedragged') {\r\n      const view = area.nodeViews.get(context.data.id)\r\n\r\n      if (view) {\r\n        const { x, y } = view.position\r\n\r\n        view.translate(snap(x), snap(y))\r\n      }\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { BaseSchemes, ConnectionId, NodeId, Root } from 'rete'\r\n\r\nimport { type AreaFilter, Area, TranslateEventParams, ZoomEventParams } from './area'\r\nimport { BaseArea, BaseAreaPlugin } from './base'\r\nimport { ConnectionView } from './connection-view'\r\nimport { ElementsHolder } from './elements-holder'\r\nimport { NodeView } from './node-view'\r\nimport { GetRenderTypes, Position, RenderMeta } from './types'\r\n\r\nexport type { AreaFilter } from './area'\r\nexport { Area } from './area'\r\nexport type { BaseArea } from './base'\r\nexport { BaseAreaPlugin } from './base'\r\nexport { Drag } from './drag'\r\nexport * as AreaExtensions from './extensions'\r\nexport { NodeView } from './node-view'\r\nexport type { RenderSignal } from './types'\r\nexport type { PointerListener } from './utils'\r\nexport { usePointerListener } from './utils'\r\nexport { Zoom } from './zoom'\r\n\r\n/**\r\n * A union of all possible signals that can be emitted by the area\r\n * @priority 9\r\n */\r\nexport type Area2D<Schemes extends BaseSchemes> =\r\n  | BaseArea<Schemes>\r\n  | { type: 'translate', data: TranslateEventParams }\r\n  | { type: 'translated', data: TranslateEventParams }\r\n  | { type: 'zoom', data: ZoomEventParams }\r\n  | { type: 'zoomed', data: ZoomEventParams }\r\n  | { type: 'resized', data: { event: Event } }\r\n\r\nexport type Area2DInherited<Schemes extends BaseSchemes, ExtraSignals = never> = [Area2D<Schemes> | ExtraSignals, Root<Schemes>]\r\n\r\n/**\r\n * A plugin that provides a 2D area for nodes and connections\r\n * @priority 8\r\n * @emits render\r\n * @emits rendered\r\n * @emits unmount\r\n * @listens nodecreated\r\n * @listens noderemoved\r\n * @listens connectioncreated\r\n * @listens connectionremoved\r\n */\r\nexport class AreaPlugin<Schemes extends BaseSchemes, ExtraSignals = never> extends BaseAreaPlugin<Schemes, Area2D<Schemes> | ExtraSignals> {\r\n  public nodeViews = new Map<NodeId, NodeView>()\r\n  public connectionViews = new Map<ConnectionId, ConnectionView>()\r\n  public area: Area\r\n  private elements = new ElementsHolder<HTMLElement, Extract<Area2D<Schemes>, { type: 'render' }>['data'] & RenderMeta>()\r\n\r\n  constructor(public container: HTMLElement, filter?: AreaFilter) {\r\n    super('area')\r\n    container.style.overflow = 'hidden'\r\n    container.addEventListener('contextmenu', this.onContextMenu)\r\n\r\n    // eslint-disable-next-line max-statements\r\n    this.addPipe(context => {\r\n      if (!context || !(typeof context === 'object' && 'type' in context)) return context\r\n      if (context.type === 'nodecreated') {\r\n        this.addNodeView(context.data)\r\n      }\r\n      if (context.type === 'noderemoved') {\r\n        this.removeNodeView(context.data.id)\r\n      }\r\n      if (context.type === 'connectioncreated') {\r\n        this.addConnectionView(context.data)\r\n      }\r\n      if (context.type === 'connectionremoved') {\r\n        this.removeConnectionView(context.data.id)\r\n      }\r\n      if (context.type === 'render') {\r\n        this.elements.set(context.data)\r\n      }\r\n      if (context.type === 'unmount') {\r\n        this.elements.delete(context.data.element)\r\n      }\r\n      return context\r\n    })\r\n    this.area = new Area(\r\n      container,\r\n      {\r\n        zoomed: params => this.emit({ type: 'zoomed', data: params }),\r\n        pointerDown: (position, event) => this.emit({ type: 'pointerdown', data: { position, event } }),\r\n        pointerMove: (position, event) => this.emit({ type: 'pointermove', data: { position, event } }),\r\n        pointerUp: (position, event) => this.emit({ type: 'pointerup', data: { position, event } }),\r\n        resize: event => this.emit({ type: 'resized', data: { event } }),\r\n        translated: params => this.emit({ type: 'translated', data: params }),\r\n        reordered: element => this.emit({ type: 'reordered', data: { element } })\r\n      },\r\n      {\r\n        translate: params => this.emit({ type: 'translate', data: params }),\r\n        zoom: params => this.emit({ type: 'zoom', data: params })\r\n      },\r\n      filter || {}\r\n    )\r\n  }\r\n\r\n  private onContextMenu = (event: MouseEvent) => {\r\n    this.emit({ type: 'contextmenu', data: { event, context: 'root' } })\r\n  }\r\n\r\n  public addNodeView(node: Schemes['Node']) {\r\n    const { id } = node\r\n    const view = new NodeView(\r\n      () => this.area.transform.k,\r\n      {\r\n        picked: () => this.emit({ type: 'nodepicked', data: { id } }),\r\n        translated: data => this.emit({ type: 'nodetranslated', data: { id, ...data } }),\r\n        dragged: () => this.emit({ type: 'nodedragged', data: node }),\r\n        contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: node } }),\r\n        resized: ({ size }) => this.emit({ type: 'noderesized', data: { id: node.id, size } })\r\n      },\r\n      {\r\n        translate: (data) => {\r\n          if (this.area.filter.move?.limit) {\r\n            data.position = this.area.filter.move.limit(data.position.x, data.position.y, id)\r\n          }\r\n          return this.emit({ type: 'nodetranslate', data: { id, ...data } })\r\n        },\r\n        resize: ({ size }) => this.emit({ type: 'noderesize', data: { id: node.id, size } })\r\n      }\r\n    )\r\n\r\n    this.nodeViews.set(id, view)\r\n    this.area.content.add(view.element)\r\n\r\n    this.emit({\r\n      type: 'render',\r\n      data: { element: view.element, type: 'node', payload: node }\r\n    })\r\n\r\n    return view\r\n  }\r\n\r\n  public removeNodeView(id: NodeId) {\r\n    const view = this.nodeViews.get(id)\r\n\r\n    if (view) {\r\n      this.emit({ type: 'unmount', data: { element: view.element } })\r\n      this.nodeViews.delete(id)\r\n      this.area.content.remove(view.element)\r\n    }\r\n  }\r\n\r\n  public addConnectionView(connection: Schemes['Connection']) {\r\n    const view = new ConnectionView({\r\n      contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: connection } })\r\n    })\r\n\r\n    this.connectionViews.set(connection.id, view)\r\n    this.area.content.add(view.element)\r\n\r\n    this.emit({\r\n      type: 'render',\r\n      data: { element: view.element, type: 'connection', payload: connection }\r\n    })\r\n\r\n    return view\r\n  }\r\n\r\n  public removeConnectionView(id: ConnectionId) {\r\n    const view = this.connectionViews.get(id)\r\n\r\n    if (view) {\r\n      this.emit({ type: 'unmount', data: { element: view.element } })\r\n      this.connectionViews.delete(id)\r\n      this.area.content.remove(view.element)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Force update rendered element by id (node, connection, etc.)\r\n   * @param type Element type\r\n   * @param id Element id\r\n   * @emits render\r\n   */\r\n  public async update(type: GetRenderTypes<Area2D<Schemes>> | GetRenderTypes<ExtraSignals>, id: string) {\r\n    const data = this.elements.get(type, id)\r\n\r\n    if (data) await this.emit({ type: 'render', data } as Area2D<Schemes>)\r\n  }\r\n\r\n  /**\r\n   * Resize node\r\n   * @param id Node id\r\n   * @param width Desired width\r\n   * @param height Desired height\r\n   */\r\n  public async resize(id: NodeId, width: number, height: number) {\r\n    const view = this.nodeViews.get(id)\r\n\r\n    if (view) return await view.resize(width, height)\r\n  }\r\n\r\n  /**\r\n   * Translate node to position\r\n   * @param id Node id\r\n   * @param position Position\r\n   */\r\n  public async translate(id: NodeId, { x, y }: Position) {\r\n    const view = this.nodeViews.get(id)\r\n\r\n    if (view) return await view.translate(x, y)\r\n  }\r\n\r\n  /**\r\n   * Destroy all views and remove all event listeners\r\n   */\r\n  public destroy() {\r\n    this.container.removeEventListener('contextmenu', this.onContextMenu)\r\n    Array.from(this.connectionViews.keys()).forEach(id => this.removeConnectionView(id))\r\n    Array.from(this.nodeViews.keys()).forEach(id => this.removeNodeView(id))\r\n    this.area.destroy()\r\n  }\r\n}\r\n"],"names":["Content","_createClass","reordered","_classCallCheck","this","holder","document","createElement","style","transformOrigin","key","value","event","_this$holder$getBound","getBoundingClientRect","left","top","x","clientX","y","clientY","element","appendChild","_reorder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","target","next","wrap","_context","prev","contains","Error","insertBefore","stop","_x","_x2","apply","arguments","removeChild","usePointerListener","handlers","move","up","window","removeEventListener","down","addEventListener","destroy","min","arr","length","Math","_toConsumableArray","max","getBoundingBox","rects","map","rect","position","right","width","bottom","height","abs","center","Drag","guards","_this","_defineProperty","e","stopPropagation","pointerStart","pageX","pageY","startPosition","_objectSpread","config","getCurrentPosition","events","start","preventDefault","delta","zoom","getZoom","translate","drag","pointerType","button","touchAction","pointerListener","Zoom","intensity","filter","_this$element$getBoun","deltaY","ox","oy","onzoom","pointers","push","p","pointerId","isTranslating","_this$element$getBoun2","_this$getTouches","getTouches","cx","cy","distance","previous","_this$filter","_this$element$getBoun3","dblclick","n","container","wheel","contextmenu","touches","_ref","x1","y1","_ref2","x2","y2","sqrt","pow","Area","k","setPointerFrom","pointerDown","pointer","pointerMove","pointerUp","resize","zoomHandler","source","transform","update","content","setZoomHandler","setDragHandler","pointerdown","pointermove","pointerup","_this$transform","concat","_this2","dragHandler","initialize","onTranslate","onZoom","_this$content$getPoin","getPointerFrom","_translate","result","sent","abrupt","data","translated","_zoom2","_callee2","d","_args2","_context2","undefined","zoomed","_x3","innerHTML","BaseAreaPlugin","_Scope","_callSuper","_inherits","Scope","ConnectionView","ElementsHolder","WeakMap","Map","context","type","payload","id","views","set","viewsElements","get","_view$payload","view","NodeView","translation","size","el","querySelector","HTMLElement","resized","_x4","picked","dragged","getNodesRect","nodes","node","item","clientWidth","clientHeight","Selector","entity","entities","has","label","accumulate","unselectAll","unselect","Array","from","values","forEach","remove","dx","dy","isPicked","pickId","_zoomAt","plugin","params","_ref$scale","scale","editor","list","boundingBox","w","h","kw","kh","parentScope","NodeEditor","_typeof","getNode","nodeViews","area","getBBox","base","addPipe","reorder","connectionViews","firstChild","scaling","restrictZoom","restrictPosition","nextPosition","pressed","keydown","keyup","active","core","options","twitch","add","nodeId","current","selected","unselectNode","selectNode","pickedId","accumulating","pick","_context$data","select","visible","getEditor","targetInput","input","inputs","showControl","connections","getConnections","hasAnyConnection","Boolean","find","connection","updateInputControlVisibility","dynamic","snap","round","_view$position","AreaPlugin","_BaseAreaPlugin","emit","overflow","onContextMenu","addNodeView","removeNodeView","addConnectionView","removeConnectionView","elements","_this2$area$filter$mo","limit","_this3","_update","_resize","_x5","_callee3","_ref3","_context3","_x6","_x7","_this4","keys"],"mappings":"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"}