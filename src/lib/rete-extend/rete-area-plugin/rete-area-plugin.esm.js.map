{"version":3,"file":"rete-area-plugin.esm.js","sources":["src/content.ts","src/utils.ts","src/drag.ts","src/zoom.ts","src/area.ts","src/base.ts","src/connection-view.ts","src/elements-holder.ts","src/node-view.ts","src/extensions/shared/utils.ts","src/extensions/bounding-box.ts","src/extensions/order.ts","src/extensions/restrictor.ts","src/extensions/selectable.ts","src/extensions/show-input-control.ts","src/extensions/snap.ts","src/extensions/zoom-at.ts","src/extensions/index.ts","src/index.ts"],"sourcesContent":["export class Content {\r\n  public holder: HTMLElement\r\n\r\n  constructor(private reordered: (target: HTMLElement) => Promise<unknown>) {\r\n    this.holder = document.createElement('div')\r\n    this.holder.style.transformOrigin = '0 0'\r\n  }\r\n\r\n  public getPointerFrom(event: MouseEvent) {\r\n    const { left, top } = this.holder.getBoundingClientRect()\r\n    const x = event.clientX - left\r\n    const y = event.clientY - top\r\n\r\n    return { x, y }\r\n  }\r\n\r\n  add(element: HTMLElement) {\r\n    this.holder.appendChild(element)\r\n  }\r\n\r\n  // eslint-disable-next-line no-undef\r\n  async reorder(target: HTMLElement, next: ChildNode | null) {\r\n    if (!this.holder.contains(target)) {\r\n      throw new Error(`content doesn't have 'target' for reordering`)\r\n    }\r\n    if (next !== null && !this.holder.contains(next)) {\r\n      throw new Error(`content doesn't have 'next' for reordering`)\r\n    }\r\n\r\n    this.holder.insertBefore(target, next)\r\n    await this.reordered(target)\r\n  }\r\n\r\n  remove(element: HTMLElement) {\r\n    this.holder.removeChild(element)\r\n  }\r\n}\r\n","import { Position, Size } from './types'\r\n\r\ntype PointerHandler = (event: PointerEvent) => void\r\ntype PointerListenerHandlers = {\r\n    down: PointerHandler\r\n    move: PointerHandler\r\n    up: PointerHandler\r\n}\r\n\r\nexport type PointerListener = { destroy: () => void }\r\n\r\n/**\r\n * listen to pointerdown, window's pointermove and pointerup events,\r\n * where last two not active before pointerdown triggered for performance reasons\r\n */\r\nexport function usePointerListener(element: HTMLElement, handlers: PointerListenerHandlers): PointerListener {\r\n  const move: PointerHandler = (event) => {\r\n    handlers.move(event)\r\n  }\r\n  const up: PointerHandler = (event) => {\r\n    window.removeEventListener('pointermove', move)\r\n    window.removeEventListener('pointerup', up)\r\n    window.removeEventListener('pointercancel', up)\r\n    handlers.up(event)\r\n  }\r\n  const down: PointerHandler = (event) => {\r\n    window.addEventListener('pointermove', move)\r\n    window.addEventListener('pointerup', up)\r\n    window.addEventListener('pointercancel', up)\r\n    handlers.down(event)\r\n  }\r\n\r\n  element.addEventListener('pointerdown', down)\r\n\r\n  return {\r\n    destroy() {\r\n      element.removeEventListener('pointerdown', down)\r\n      window.removeEventListener('pointermove', move)\r\n      window.removeEventListener('pointerup', up)\r\n      window.removeEventListener('pointercancel', up)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Bounding box\r\n */\r\nconst min = (arr: number[]) => arr.length === 0 ? 0 : Math.min(...arr)\r\nconst max = (arr: number[]) => arr.length === 0 ? 0 : Math.max(...arr)\r\n\r\nexport function getBoundingBox(rects: ({ position: Position } & Size)[]) {\r\n  const left = min(rects.map(rect => rect.position.x))\r\n  const top = min(rects.map(rect => rect.position.y))\r\n  const right = max(rects.map(rect => rect.position.x + rect.width))\r\n  const bottom = max(rects.map(rect => rect.position.y + rect.height))\r\n\r\n  return {\r\n    left,\r\n    right,\r\n    top,\r\n    bottom,\r\n    width: Math.abs(left - right),\r\n    height: Math.abs(top - bottom),\r\n    center: {\r\n      x: (left + right) / 2,\r\n      y: (top + bottom) / 2\r\n    }\r\n  }\r\n}\r\n","import { Position } from './types'\r\nimport { PointerListener, usePointerListener } from './utils'\r\n\r\ntype Events = {\r\n  start: (e: PointerEvent) => void\r\n  translate: (x: number, y: number, e: PointerEvent) => void\r\n  drag: (e: PointerEvent) => void\r\n}\r\n\r\ntype Guards = {\r\n  down: (e: PointerEvent) => boolean\r\n  move: (e: PointerEvent) => boolean\r\n}\r\n\r\ntype DragConfig = {\r\n  getCurrentPosition: () => Position\r\n  getZoom: () => number\r\n}\r\n\r\n/**\r\n * Drag handler, used to handle dragging of the area and nodes. Can be extended to add custom behavior.\r\n */\r\nexport class Drag {\r\n  private pointerStart?: Position\r\n  private startPosition?: Position\r\n  private pointerListener!: PointerListener\r\n  protected config!: DragConfig\r\n  protected events!: Events\r\n  protected guards: Guards\r\n\r\n  constructor(guards?: Guards) {\r\n    this.guards = guards || {\r\n      down: e => !(e.pointerType === 'mouse' && e.button !== 0),\r\n      move: () => true\r\n    }\r\n  }\r\n\r\n  public initialize(element: HTMLElement, config: DragConfig, events: Events) {\r\n    this.config = config\r\n    this.events = events\r\n    element.style.touchAction = 'none'\r\n    this.pointerListener = usePointerListener(element, {\r\n      down: this.down,\r\n      move: this.move,\r\n      up: this.up\r\n    })\r\n  }\r\n\r\n  private down = (e: PointerEvent) => {\r\n    if (!this.guards.down(e)) return\r\n\r\n    e.stopPropagation()\r\n    this.pointerStart = { x: e.pageX, y: e.pageY }\r\n    this.startPosition = { ...this.config.getCurrentPosition() }\r\n\r\n    this.events.start(e)\r\n  }\r\n\r\n  private move = (e: PointerEvent) => {\r\n    if (!this.pointerStart || !this.startPosition) return\r\n    if (!this.guards.move(e)) return\r\n    e.preventDefault()\r\n\r\n    const delta = {\r\n      x: e.pageX - this.pointerStart.x,\r\n      y: e.pageY - this.pointerStart.y\r\n    }\r\n    const zoom = this.config.getZoom()\r\n    const x = this.startPosition.x + delta.x / zoom\r\n    const y = this.startPosition.y + delta.y / zoom\r\n\r\n    this.events.translate(x, y, e)\r\n  }\r\n\r\n  private up = (e: PointerEvent) => {\r\n    if (!this.pointerStart) return\r\n\r\n    delete this.pointerStart\r\n    this.events.drag(e)\r\n  }\r\n\r\n  public destroy() {\r\n    this.pointerListener.destroy()\r\n  }\r\n}\r\n","\r\n/**\r\n * Zoom source\r\n */\r\nexport type ZoomSource = 'wheel' | 'touch' | 'dblclick'\r\nexport type OnZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => void\r\n\r\nexport type DblclickFilter = (delta:number) => number\r\n\r\n/**\r\n * Zoom class, used to handle zooming of the area. Can be extended to add custom behavior.\r\n * @internal\r\n */\r\nexport class Zoom {\r\n  protected previous: { cx: number, cy: number, distance: number } | null = null\r\n  protected pointers: PointerEvent[] = []\r\n  protected container!: HTMLElement\r\n  protected element!: HTMLElement\r\n  protected onzoom!: OnZoom\r\n\r\n  constructor(protected intensity: number, private filter: { dblclick: DblclickFilter }) { }\r\n\r\n  public initialize(container: HTMLElement, element: HTMLElement, onzoom: OnZoom) {\r\n    this.container = container\r\n    this.element = element\r\n    this.onzoom = onzoom\r\n    this.container.addEventListener('wheel', this.wheel)\r\n    this.container.addEventListener('pointerdown', this.down)\r\n    this.container.addEventListener('dblclick', this.dblclick)\r\n\r\n    window.addEventListener('pointermove', this.move)\r\n    window.addEventListener('pointerup', this.up)\r\n    window.addEventListener('contextmenu', this.contextmenu)\r\n    window.addEventListener('pointercancel', this.up)\r\n  }\r\n\r\n  protected wheel = (e: WheelEvent) => {\r\n    e.preventDefault()\r\n\r\n    const { left, top } = this.element.getBoundingClientRect()\r\n    const isNegative = e.deltaY < 0\r\n    const delta = isNegative ? this.intensity : - this.intensity\r\n    const ox = (left - e.clientX) * delta\r\n    const oy = (top - e.clientY) * delta\r\n\r\n    this.onzoom(delta, ox, oy, 'wheel')\r\n  }\r\n\r\n  private getTouches() {\r\n    const e = { touches: this.pointers }\r\n    const [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY]\r\n    const [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY]\r\n\r\n    const distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n\r\n    return {\r\n      cx: (x1 + x2) / 2,\r\n      cy: (y1 + y2) / 2,\r\n      distance\r\n    }\r\n  }\r\n\r\n  protected down = (e: PointerEvent) => {\r\n    this.pointers.push(e)\r\n  }\r\n\r\n  protected move = (e: PointerEvent) => {\r\n    this.pointers = this.pointers.map(p => p.pointerId === e.pointerId ? e : p)\r\n    if (!this.isTranslating()) return\r\n\r\n    const { left, top } = this.element.getBoundingClientRect()\r\n    const { cx, cy, distance } = this.getTouches()\r\n\r\n    if (this.previous !== null && this.previous.distance > 0) {\r\n      const delta = distance / this.previous.distance - 1\r\n\r\n      const ox = (left - cx) * delta\r\n      const oy = (top - cy) * delta\r\n\r\n      this.onzoom(delta, ox - (this.previous.cx - cx), oy - (this.previous.cy - cy), 'touch')\r\n    }\r\n    this.previous = { cx, cy, distance }\r\n  }\r\n\r\n  protected contextmenu = () => {\r\n    this.pointers = []\r\n  }\r\n\r\n  protected up = (e: PointerEvent) => {\r\n    this.previous = null\r\n    this.pointers = this.pointers.filter(p => p.pointerId !== e.pointerId)\r\n  }\r\n\r\n  protected dblclick = (e: MouseEvent) => {\r\n    e.preventDefault()\r\n\r\n    const { left, top } = this.element.getBoundingClientRect()\r\n    const delta = this.filter.dblclick(4 * this.intensity)\r\n\r\n    if (delta === 0) return\r\n\r\n    const ox = (left - e.clientX) * delta\r\n    const oy = (top - e.clientY) * delta\r\n\r\n    this.onzoom(delta, ox, oy, 'dblclick')\r\n  }\r\n\r\n  public isTranslating() { // is translating while zoom (works on multitouch)\r\n    return this.pointers.length >= 2\r\n  }\r\n\r\n  public destroy() {\r\n    this.container.removeEventListener('wheel', this.wheel)\r\n    this.container.removeEventListener('pointerdown', this.down)\r\n    this.container.removeEventListener('dblclick', this.dblclick)\r\n\r\n    window.removeEventListener('pointermove', this.move)\r\n    window.removeEventListener('pointerup', this.up)\r\n    window.removeEventListener('pointercancel', this.up)\r\n  }\r\n}\r\n","import { Content } from './content'\r\nimport { Drag } from './drag'\r\nimport { Position } from './types'\r\nimport { Zoom, ZoomSource, DblclickFilter } from './zoom'\r\n\r\nexport type Transform = Position & { k: number }\r\nexport type TranslateEventParams = { previous: Transform, position: Position }\r\nexport type ZoomEventParams = { previous: Transform, zoom: number, source?: ZoomSource }\r\n\r\ntype Events = {\r\n  zoomed: (params: ZoomEventParams) => Promise<unknown>\r\n  pointerDown: (position: Position, event: PointerEvent) => void\r\n  pointerMove: (position: Position, event: PointerEvent) => void\r\n  pointerUp: (position: Position, event: PointerEvent) => void\r\n  resize: (event: Event) => void\r\n  translated: (params: TranslateEventParams) => Promise<unknown>\r\n  reordered: (element: HTMLElement) => Promise<unknown>\r\n}\r\ntype Guards = {\r\n  translate: (params: TranslateEventParams) => Promise<unknown | boolean>\r\n  zoom: (params: ZoomEventParams) => Promise<unknown | boolean>\r\n}\r\n\r\nexport type AreaFilter = {\r\n  zoom: {\r\n    dblclick: DblclickFilter\r\n  }\r\n}\r\n\r\nexport class Area {\r\n  public transform: Transform = { k: 1, x: 0, y: 0 }\r\n  public pointer: Position = { x: 0, y: 0 }\r\n  public content: Content\r\n\r\n  private zoomHandler: Zoom | null = null\r\n  private dragHandler: Drag | null = null\r\n\r\n  constructor(\r\n    private container: HTMLElement,\r\n    private events: Events,\r\n    private guards: Guards,\r\n    filter:AreaFilter\r\n  ) {\r\n    this.content = new Content(element => this.events.reordered(element))\r\n    this.content.holder.style.transformOrigin = '0 0'\r\n\r\n    this.setZoomHandler(new Zoom(0.1, filter.zoom))\r\n    this.setDragHandler(new Drag())\r\n\r\n    this.container.addEventListener('pointerdown', this.pointerdown)\r\n    this.container.addEventListener('pointermove', this.pointermove)\r\n    window.addEventListener('pointerup', this.pointerup)\r\n    window.addEventListener('resize', this.resize)\r\n\r\n    container.appendChild(this.content.holder)\r\n    this.update()\r\n  }\r\n\r\n  private update() {\r\n    const { x, y, k } = this.transform\r\n\r\n    this.content.holder.style.transform = `translate(${x}px, ${y}px) scale(${k})`\r\n  }\r\n\r\n  /**\r\n   * Drag handler. Destroy previous drag handler if exists.\r\n   * @param drag drag handler\r\n   * @example area.area.setDragHandler(null) // disable drag\r\n   */\r\n  public setDragHandler(drag: Drag | null) {\r\n    if (this.dragHandler) this.dragHandler.destroy()\r\n    this.dragHandler = drag\r\n    if (this.dragHandler) this.dragHandler.initialize(\r\n      this.container,\r\n      {\r\n        getCurrentPosition: () => this.transform,\r\n        getZoom: () => 1\r\n      },\r\n      {\r\n        start: () => null,\r\n        translate: this.onTranslate,\r\n        drag: () => null\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Set zoom handler. Destroy previous zoom handler if exists.\r\n   * @param zoom zoom handler\r\n   * @example area.area.setZoomHandler(null) // disable zoom\r\n   */\r\n  public setZoomHandler(zoom: Zoom | null) {\r\n    if (this.zoomHandler) this.zoomHandler.destroy()\r\n    this.zoomHandler = zoom\r\n    if (this.zoomHandler) this.zoomHandler.initialize(this.container, this.content.holder, this.onZoom)\r\n  }\r\n\r\n  public setPointerFrom(event: MouseEvent) {\r\n    const { x, y } = this.content.getPointerFrom(event)\r\n    const { k } = this.transform\r\n\r\n    this.pointer = { x: x / k, y: y / k }\r\n  }\r\n\r\n  private pointerdown = (event: PointerEvent) => {\r\n    this.setPointerFrom(event)\r\n    this.events.pointerDown(this.pointer, event)\r\n  }\r\n\r\n  private pointermove = (event: PointerEvent) => {\r\n    this.setPointerFrom(event)\r\n    this.events.pointerMove(this.pointer, event)\r\n  }\r\n\r\n  private pointerup = (event: PointerEvent) => {\r\n    this.setPointerFrom(event)\r\n    this.events.pointerUp(this.pointer, event)\r\n  }\r\n\r\n  private resize = (event: Event) => {\r\n    this.events.resize(event)\r\n  }\r\n\r\n  private onTranslate = (x: number, y: number) => {\r\n    if (this.zoomHandler && this.zoomHandler.isTranslating()) return // lock translation while zoom on multitouch\r\n    this.translate(x, y)\r\n  }\r\n\r\n  private onZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => {\r\n    this.zoom(this.transform.k * (1 + delta), ox, oy, source)\r\n\r\n    this.update()\r\n  }\r\n\r\n  /**\r\n   * Change position of the area\r\n   * @param x desired x coordinate\r\n   * @param y desired y coordinate\r\n   * @returns true if the translation was successful, false otherwise\r\n   * @emits translate\r\n   * @emits translated\r\n   */\r\n  public async translate(x: number, y: number) {\r\n    type T = undefined | { data: TranslateEventParams }\r\n    const position = { x, y }\r\n    const result = await this.guards.translate({ previous: this.transform, position }) as T\r\n\r\n    if (!result) return false\r\n\r\n    this.transform.x = result.data.position.x\r\n    this.transform.y = result.data.position.y\r\n\r\n    this.update()\r\n\r\n    await this.events.translated(result.data)\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Change zoom level of the area\r\n   * @param zoom new zoom level\r\n   * @param ox x coordinate of the origin of the zoom\r\n   * @param oy y coordinate of the origin of the zoom\r\n   * @param source source of the zoom\r\n   * @returns true if the zoom was successful, false otherwise\r\n   * @emits zoom\r\n   * @emits zoomed\r\n   */\r\n  public async zoom(zoom: number, ox = 0, oy = 0, source?: ZoomSource) {\r\n    type T = undefined | { data: ZoomEventParams }\r\n    const k = this.transform.k\r\n    const result = await this.guards.zoom({ previous: this.transform, zoom, source }) as T\r\n\r\n    if (!result) return true\r\n\r\n    const d = (k - result.data.zoom) / ((k - zoom) || 1)\r\n\r\n    this.transform.k = result.data.zoom || 1\r\n    this.transform.x += ox * d\r\n    this.transform.y += oy * d\r\n\r\n    this.update()\r\n\r\n    await this.events.zoomed(result.data)\r\n    return false\r\n  }\r\n\r\n  public destroy() {\r\n    this.container.removeEventListener('pointerdown', this.pointerdown)\r\n    this.container.removeEventListener('pointermove', this.pointermove)\r\n    window.removeEventListener('pointerup', this.pointerup)\r\n    window.removeEventListener('resize', this.resize)\r\n    if (this.dragHandler) this.dragHandler.destroy()\r\n    if (this.zoomHandler) this.zoomHandler.destroy()\r\n    this.content.holder.innerHTML = ''\r\n  }\r\n}\r\n","import { BaseSchemes, ConnectionId, NodeId, Root, Scope } from 'rete'\r\n\r\nimport { NodeResizeEventParams, NodeTranslateEventParams } from './node-view'\r\nimport { GetRenderTypes, Position, RenderSignal } from './types'\r\n\r\ninterface NodeView {\r\n  element: HTMLElement\r\n  position: Position\r\n  translate(x: number, y: number): Promise<boolean>\r\n  resize(width: number, height: number): Promise<boolean>\r\n}\r\n\r\ninterface ConnectionView {\r\n  element: HTMLElement\r\n}\r\n\r\ninterface Content {\r\n  holder: HTMLElement\r\n  add(element: HTMLElement): void\r\n  // eslint-disable-next-line no-undef\r\n  reorder(target: HTMLElement, next: ChildNode | null): void\r\n  remove(element: HTMLElement): void\r\n}\r\n\r\ninterface Area {\r\n  pointer: Position\r\n  content: Content\r\n}\r\n\r\n/**\r\n * A union of all possible signals that can be emitted by any area plugin\r\n * @priority 10\r\n */\r\nexport type BaseArea<Schemes extends BaseSchemes> =\r\n  | { type: 'nodepicked', data: { id: string } }\r\n  | { type: 'nodedragged', data: Schemes['Node'] }\r\n  | { type: 'nodetranslate', data: { id: string } & NodeTranslateEventParams }\r\n  | { type: 'nodetranslated', data: { id: string } & NodeTranslateEventParams }\r\n  | { type: 'contextmenu', data: { event: MouseEvent, context: 'root' | Schemes['Node'] | Schemes['Connection'] } }\r\n  | { type: 'pointerdown', data: { position: Position, event: PointerEvent } }\r\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\r\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\r\n  | { type: 'noderesize', data: { id: string } & NodeResizeEventParams }\r\n  | { type: 'noderesized', data: { id: string } & NodeResizeEventParams }\r\n  | RenderSignal<'node', { payload: Schemes['Node'] }>\r\n  | RenderSignal<'connection', { payload: Schemes['Connection'], start?: Position, end?: Position }>\r\n  | { type: 'unmount', data: { element: HTMLElement } }\r\n  | { type: 'reordered', data: { element: HTMLElement } }\r\n\r\n/**\r\n * Base abstract class for area plugins that provides a common interface\r\n * @abstract\r\n */\r\nexport abstract class BaseAreaPlugin<Schemes extends BaseSchemes, Signals> extends Scope<Signals, [Root<Schemes>]> {\r\n  public abstract nodeViews: Map<NodeId, NodeView>\r\n  public abstract connectionViews: Map<ConnectionId, ConnectionView>\r\n  public abstract area: Area\r\n\r\n  abstract addNodeView(connection: Schemes['Node']): NodeView\r\n  abstract removeNodeView(connection: NodeId): void\r\n  abstract addConnectionView(connection: Schemes['Connection']): ConnectionView\r\n  abstract removeConnectionView(connection: ConnectionId): void\r\n  abstract update(type: GetRenderTypes<Signals>, id: string): Promise<void | boolean | undefined>\r\n  abstract resize(id: NodeId, width: number, height: number): Promise<void | boolean | undefined>\r\n  abstract translate(id: NodeId, position: Position): Promise<void | boolean | undefined>\r\n  abstract destroy(): void\r\n}\r\n","\r\ntype Events = {\r\n  contextmenu: (event: MouseEvent) => void\r\n}\r\n\r\nexport class ConnectionView {\r\n  element: HTMLElement\r\n\r\n  constructor(events: Events) {\r\n    this.element = document.createElement('div')\r\n\r\n    this.element.style.position = 'absolute'\r\n    this.element.style.left = '0'\r\n    this.element.style.top = '0'\r\n    this.element.addEventListener('contextmenu', event => events.contextmenu(event))\r\n  }\r\n}\r\n","\r\nexport class ElementsHolder<E extends HTMLElement, Ctx extends { type: string, element: E, payload?: { id: string } }> {\r\n  views = new WeakMap<E, Ctx>()\r\n  viewsElements = new Map<`${string}_${string}`, E>()\r\n\r\n  public set(context: Ctx) {\r\n    const { element, type, payload } = context\r\n\r\n    if (payload?.id) {\r\n      this.views.set(element, context)\r\n      this.viewsElements.set(`${type}_${payload.id}`, element)\r\n    }\r\n  }\r\n\r\n  public get(type: string, id: string) {\r\n    const element = this.viewsElements.get(`${type}_${id}`)\r\n\r\n    return element && this.views.get(element)\r\n  }\r\n\r\n  public delete(element: E) {\r\n    const view = this.views.get(element)\r\n\r\n    if (view && view.payload?.id) {\r\n      this.views.delete(element)\r\n      this.viewsElements.delete(`${view.type}_${view.payload.id}`)\r\n    }\r\n  }\r\n}\r\n","import { Drag } from './drag'\r\nimport { Position, Size } from './types'\r\n\r\nexport type NodeTranslateEventParams = { position: Position, previous: Position }\r\nexport type NodeResizeEventParams = { size: Size }\r\n\r\ntype Events = {\r\n  picked: () => void\r\n  translated: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\r\n  dragged: () => void\r\n  contextmenu: (event: MouseEvent) => void\r\n  resized: (params: NodeResizeEventParams) => Promise<unknown | boolean>\r\n}\r\ntype Guards = {\r\n  resize: (params: NodeResizeEventParams) => Promise<unknown | boolean>\r\n  translate: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\r\n}\r\n\r\nexport class NodeView {\r\n  element: HTMLElement\r\n  position: Position\r\n  dragHandler: Drag\r\n\r\n  constructor(private getZoom: () => number, private events: Events, private guards: Guards) {\r\n    this.element = document.createElement('div')\r\n    this.element.style.position = 'absolute'\r\n    this.position = { x: 0, y: 0 }\r\n    this.translate(0, 0)\r\n\r\n    this.element.addEventListener('contextmenu', event => this.events.contextmenu(event))\r\n\r\n    this.dragHandler = new Drag()\r\n    this.dragHandler.initialize(\r\n      this.element,\r\n      {\r\n        getCurrentPosition: () => this.position,\r\n        getZoom: () => this.getZoom()\r\n      },\r\n      {\r\n        start: this.events.picked,\r\n        translate: this.translate,\r\n        drag: this.events.dragged\r\n      }\r\n    )\r\n  }\r\n\r\n  public translate = async (x: number, y: number) => {\r\n    type Params = undefined | { data: NodeTranslateEventParams }\r\n    const previous = { ...this.position }\r\n    const translation = await this.guards.translate({ previous, position: { x, y } }) as Params\r\n\r\n    if (!translation) return false\r\n\r\n    this.position = { ...translation.data.position }\r\n    this.element.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`\r\n\r\n    await this.events.translated({ position: this.position, previous })\r\n\r\n    return true\r\n  }\r\n\r\n  public resize = async (width: number, height: number) => {\r\n    const size = { width, height }\r\n\r\n    if (!(await this.guards.resize({ size }))) return false\r\n\r\n    const el = this.element.querySelector('*:not(span)')\r\n\r\n    if (!el || !(el instanceof HTMLElement)) return false\r\n\r\n    el.style.width = `${width}px`\r\n    el.style.height = `${height}px`\r\n\r\n    await this.events.resized({ size })\r\n\r\n    return true\r\n  }\r\n\r\n  public destroy() {\r\n    this.dragHandler.destroy()\r\n  }\r\n}\r\n","import { BaseAreaPlugin } from '../../base'\r\nimport { NodeView } from '../../node-view'\r\nimport { SchemesWithSizes } from './types'\r\n\r\nexport function getNodesRect<S extends SchemesWithSizes, K>(nodes: S['Node'][], views: BaseAreaPlugin<S, K>['nodeViews']) {\r\n  return nodes\r\n    .map(node => ({ view: views.get(node.id) as NodeView, node }))\r\n    .filter(item => item.view)\r\n    .map(({ view, node }) => {\r\n      const { width, height } = node\r\n\r\n      if (typeof width !== 'undefined' && typeof height !== 'undefined') {\r\n        return {\r\n          position: view.position,\r\n          width,\r\n          height\r\n        }\r\n      }\r\n\r\n      return {\r\n        position: view.position,\r\n        width: view.element.clientWidth,\r\n        height: view.element.clientHeight\r\n      }\r\n    })\r\n}\r\n","import { BaseSchemes, NodeEditor } from 'rete'\r\n\r\nimport { BaseAreaPlugin } from '../base'\r\nimport { getBoundingBox as getBBox } from '../utils'\r\nimport { NodeRef } from './shared/types'\r\nimport { getNodesRect } from './shared/utils'\r\n\r\n/**\r\n * Get the bounding box of the given nodes\r\n * @param plugin The area plugin\r\n * @param nodes The nodes to get the bounding box of\r\n * @returns The bounding box\r\n */\r\nexport function getBoundingBox<Schemes extends BaseSchemes, K>(plugin: BaseAreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[]) {\r\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\r\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\r\n  const rects = getNodesRect(list, plugin.nodeViews)\r\n\r\n  return getBBox(rects)\r\n}\r\n","import { BaseSchemes } from 'rete'\r\n\r\nimport { BaseArea, BaseAreaPlugin } from '../base'\r\n\r\n/**\r\n * Simple nodes order extension\r\n * @param base The base area plugin\r\n * @listens nodepicked\r\n * @listens connectioncreated\r\n */\r\nexport function simpleNodesOrder<Schemes extends BaseSchemes, T>(base: BaseAreaPlugin<Schemes, T>) {\r\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\r\n\r\n  area.addPipe(context => {\r\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\r\n\r\n    if (context.type === 'nodepicked') {\r\n      const view = area.nodeViews.get(context.data.id)\r\n      const { content } = area.area\r\n\r\n      if (view) {\r\n        content.reorder(view.element, null)\r\n      }\r\n    }\r\n    if (context.type === 'connectioncreated') {\r\n      const view = area.connectionViews.get(context.data.id)\r\n      const { content } = area.area\r\n\r\n      if (view) {\r\n        content.reorder(view.element, content.holder.firstChild)\r\n      }\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { BaseSchemes } from 'rete'\r\n\r\nimport { AreaPlugin } from '..'\r\nimport { Position } from '../types'\r\n\r\ntype ScaleRange = { min: number, max: number }\r\ntype TranslateRange = { left: number, top: number, right: number, bottom: number }\r\n\r\n/**\r\n * Restrictor extension parameters\r\n */\r\nexport type Params = {\r\n  /** The scaling range */\r\n  scaling?: ScaleRange | (() => ScaleRange) | boolean\r\n  /** The translation range */\r\n  translation?: TranslateRange | (() => TranslateRange) | boolean\r\n}\r\n\r\n/**\r\n * Restrictor extension. Restricts the area zoom and position\r\n * @param plugin The area plugin\r\n * @param params The restrictor parameters\r\n * @listens zoom\r\n * @listens zoomed\r\n * @listens translated\r\n */\r\nexport function restrictor<Schemes extends BaseSchemes, K>(plugin: AreaPlugin<Schemes, K>, params?: Params) {\r\n  const scaling = params?.scaling\r\n    ? params.scaling === true ? { min: 0.1, max: 1 } : params.scaling\r\n    : false\r\n  const translation = params?.translation\r\n    ? params.translation === true ? { left: 0, top: 0, right: 1000, bottom: 1000 } : params.translation\r\n    : false\r\n\r\n  function restrictZoom(zoom: number) {\r\n    if (!scaling) throw new Error('scaling param isnt defined')\r\n    const { min, max } = typeof scaling === 'function' ? scaling() : scaling\r\n\r\n    if (zoom < min) {\r\n      return min\r\n    } else if (zoom > max) {\r\n      return max\r\n    }\r\n    return zoom\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements\r\n  function restrictPosition(position: Position): Position {\r\n    if (!translation) throw new Error('translation param isnt defined')\r\n    const nextPosition = { ...position }\r\n    const { left, top, right, bottom } = typeof translation === 'function'\r\n      ? translation()\r\n      : translation\r\n\r\n    if (nextPosition.x < left) {\r\n      nextPosition.x = left\r\n    }\r\n    if (nextPosition.x > right) {\r\n      nextPosition.x = right\r\n    }\r\n    if (nextPosition.y < top) {\r\n      nextPosition.y = top\r\n    }\r\n    if (nextPosition.y > bottom) {\r\n      nextPosition.y = bottom\r\n    }\r\n\r\n    return nextPosition\r\n  }\r\n\r\n  plugin.addPipe(context => {\r\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\r\n    if (scaling && context.type === 'zoom') {\r\n      return {\r\n        ...context,\r\n        data: {\r\n          ...context.data,\r\n          zoom: restrictZoom(context.data.zoom)\r\n        }\r\n      }\r\n    }\r\n    if (translation && context.type === 'zoomed') {\r\n      const position = restrictPosition(plugin.area.transform)\r\n\r\n      plugin.area.translate(position.x, position.y)\r\n    }\r\n    if (translation && context.type === 'translate') {\r\n      return {\r\n        ...context,\r\n        data: {\r\n          ...context.data,\r\n          position: restrictPosition(context.data.position)\r\n        }\r\n      }\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { BaseSchemes, GetSchemes, NodeEditor, NodeId } from 'rete'\r\n\r\nimport { BaseArea, BaseAreaPlugin } from '../base'\r\n\r\ntype Schemes = GetSchemes<BaseSchemes['Node'] & { selected?: boolean }, any>\r\n\r\n/**\r\n * Selector's accumulate function, activated when the ctrl key is pressed\r\n */\r\nexport function accumulateOnCtrl() {\r\n  let pressed = false\r\n\r\n  function keydown(e: KeyboardEvent) {\r\n    if (e.key === 'Control') pressed = true\r\n  }\r\n  function keyup(e: KeyboardEvent) {\r\n    if (e.key === 'Control') pressed = false\r\n  }\r\n\r\n  document.addEventListener('keydown', keydown)\r\n  document.addEventListener('keyup', keyup)\r\n\r\n  return {\r\n    active() {\r\n      return pressed\r\n    },\r\n    destroy() {\r\n      document.removeEventListener('keydown', keydown)\r\n      document.removeEventListener('keyup', keyup)\r\n    }\r\n  }\r\n}\r\n\r\nexport type SelectorEntity = { label: string, id: string, unselect(): void, translate(dx: number, dy: number): void }\r\n\r\n/**\r\n * Selector class. Used to collect selected entities (nodes, connections, etc.) and synchronize them (select, unselect, translate, etc.).\r\n * Can be extended to add custom functionality.\r\n */\r\nexport class Selector<E extends SelectorEntity> {\r\n  entities = new Map<string, E>()\r\n  pickId: string | null = null\r\n\r\n  isSelected(entity: Pick<E, 'label' | 'id'>) {\r\n    return this.entities.has(`${entity.label}_${entity.id}`)\r\n  }\r\n\r\n  add(entity: E, accumulate: boolean) {\r\n    if (!accumulate) this.unselectAll()\r\n    this.entities.set(`${entity.label}_${entity.id}`, entity)\r\n  }\r\n\r\n  remove(entity: Pick<E, 'label' | 'id'>) {\r\n    const id = `${entity.label}_${entity.id}`\r\n    const item = this.entities.get(id)\r\n\r\n    if (item) {\r\n      this.entities.delete(id)\r\n      item.unselect()\r\n    }\r\n  }\r\n\r\n  unselectAll() {\r\n    [...Array.from(this.entities.values())].forEach(item => this.remove(item))\r\n  }\r\n\r\n  translate(dx: number, dy: number) {\r\n    this.entities.forEach(item => !this.isPicked(item) && item.translate(dx, dy))\r\n  }\r\n\r\n  pick(entity: Pick<E, 'label' | 'id'>) {\r\n    this.pickId = `${entity.label}_${entity.id}`\r\n  }\r\n\r\n  release() {\r\n    this.pickId = null\r\n  }\r\n\r\n  isPicked(entity: Pick<E, 'label' | 'id'>) {\r\n    return this.pickId === `${entity.label}_${entity.id}`\r\n  }\r\n}\r\n\r\n/**\r\n * Selector factory, uses default Selector class\r\n * @returns Selector instance\r\n */\r\nexport function selector<E extends SelectorEntity>() {\r\n  return new Selector<E>()\r\n}\r\n\r\n/**\r\n * Accumulating interface, used to determine whether to accumulate entities on selection\r\n */\r\nexport type Accumulating = {\r\n  active(): boolean\r\n}\r\n\r\nexport type Selectable = ReturnType<typeof selector>\r\n\r\n/**\r\n * Selectable nodes extension. Adds the ability to select nodes in the area.\r\n * @param base BaseAreaPlugin instance\r\n * @param core Selectable instance\r\n * @param options.accumulating Accumulating interface\r\n * @listens nodepicked\r\n * @listens nodetranslated\r\n * @listens pointerdown\r\n * @listens pointermove\r\n * @listens pointerup\r\n */\r\nexport function selectableNodes<T>(base: BaseAreaPlugin<Schemes, T>, core: Selectable, options: { accumulating: Accumulating }) {\r\n  let editor: null | NodeEditor<Schemes> = null\r\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\r\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<Schemes>>(NodeEditor))\r\n\r\n  let twitch: null | number = 0\r\n\r\n  function selectNode(node: Schemes['Node']) {\r\n    if (!node.selected) {\r\n      node.selected = true\r\n      area.update('node', node.id)\r\n    }\r\n  }\r\n\r\n  function unselectNode(node: Schemes['Node']) {\r\n    if (node.selected) {\r\n      node.selected = false\r\n      area.update('node', node.id)\r\n    }\r\n  }\r\n  /**\r\n   * Select node programmatically\r\n   * @param nodeId Node id\r\n   * @param accumulate Whether to accumulate nodes on selection\r\n   */\r\n  function add(nodeId: NodeId, accumulate: boolean) {\r\n    const node = getEditor().getNode(nodeId)\r\n\r\n    if (!node) return\r\n\r\n    core.add({\r\n      label: 'node',\r\n      id: node.id,\r\n      translate(dx, dy) {\r\n        const view = area.nodeViews.get(node.id)\r\n        const current = view?.position\r\n\r\n        if (current) {\r\n          view.translate(current.x + dx, current.y + dy)\r\n        }\r\n      },\r\n      unselect() {\r\n        unselectNode(node)\r\n      }\r\n    }, accumulate)\r\n    selectNode(node)\r\n  }\r\n  /**\r\n   * Unselect node programmatically\r\n   * @param nodeId Node id\r\n   */\r\n  function remove(nodeId: NodeId) {\r\n    core.remove({ id: nodeId, label: 'node' })\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements, complexity\r\n  area.addPipe(context => {\r\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\r\n\r\n    if (context.type === 'nodepicked') {\r\n      const pickedId = context.data.id\r\n      const accumulate = options.accumulating.active()\r\n\r\n      core.pick({ id: pickedId, label: 'node' })\r\n      twitch = null\r\n      add(pickedId, accumulate)\r\n    } else if (context.type === 'nodetranslated') {\r\n      const { id, position, previous } = context.data\r\n      const dx = position.x - previous.x\r\n      const dy = position.y - previous.y\r\n\r\n      if (core.isPicked({ id, label: 'node' })) core.translate(dx, dy)\r\n    } else if (context.type === 'pointerdown') {\r\n      twitch = 0\r\n    } else if (context.type === 'pointermove') {\r\n      if (twitch !== null) twitch++\r\n    } else if (context.type === 'pointerup') {\r\n      if (twitch !== null && twitch < 4) {\r\n        core.unselectAll()\r\n      }\r\n      twitch = null\r\n    }\r\n    return context\r\n  })\r\n\r\n  return {\r\n    select: add,\r\n    unselect: remove\r\n  }\r\n}\r\n\r\n","import { BaseSchemes, ClassicPreset as Classic, GetSchemes, NodeEditor } from 'rete'\r\n\r\nimport { BaseAreaPlugin } from '../base'\r\n\r\ntype Scheme = GetSchemes<Classic.Node, Classic.Connection<Classic.Node, Classic.Node>>\r\ntype Visible<S extends Scheme> = (props: { hasAnyConnection: boolean, input: NonNullable<S['Node']['inputs'][string]> }) => boolean\r\n\r\n/**\r\n * Show input control extension. It will show the input's control when there is no connection and hide it when there is a connection.\r\n * @param area The base area plugin\r\n * @param visible The visible function\r\n * @listens connectioncreated\r\n * @listens connectionremoved\r\n */\r\nexport function showInputControl<S extends Scheme>(area: BaseAreaPlugin<BaseSchemes, any>, visible?: Visible<S>) {\r\n  let editor: null | NodeEditor<S> = null\r\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<S>>(NodeEditor))\r\n\r\n  function updateInputControlVisibility(target: string, targetInput: string) {\r\n    const node = getEditor().getNode(target)\r\n\r\n    if (!node) return\r\n\r\n    const input = (node.inputs as Record<string, S['Node']['inputs'][string] | undefined>)[targetInput]\r\n\r\n    if (!input) throw new Error('cannot find input')\r\n\r\n    const previous = input.showControl\r\n    const connections = getEditor().getConnections()\r\n    const hasAnyConnection = Boolean(connections.find(connection => {\r\n      return connection.target === target && connection.targetInput === targetInput\r\n    }))\r\n\r\n    input.showControl = visible ? visible({ hasAnyConnection, input }) : !hasAnyConnection\r\n\r\n    if (input.showControl !== previous) {\r\n      area.update('node', node.id)\r\n    }\r\n  }\r\n\r\n  area.addPipe(context => {\r\n    if (context.type === 'connectioncreated' || context.type === 'connectionremoved') {\r\n      updateInputControlVisibility(context.data.target, context.data.targetInput)\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { BaseSchemes } from 'rete'\r\n\r\nimport { BaseArea, BaseAreaPlugin } from '../base'\r\n\r\n/**\r\n * Snap grid extension parameters\r\n */\r\nexport type Params = {\r\n  /** The grid size */\r\n  size?: number\r\n  /** Whether to snap on node drag */\r\n  dynamic?: boolean\r\n}\r\n\r\n/**\r\n * Snap grid extension\r\n * @param base The base area plugin\r\n * @param params The snap parameters\r\n * @listens nodetranslate\r\n * @listens nodedragged\r\n */\r\nexport function snapGrid<Schemes extends BaseSchemes, K>(base: BaseAreaPlugin<Schemes, K>, params?: Params) {\r\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\r\n  const size = typeof params?.size === 'undefined' ? 16 : params.size\r\n  const dynamic = typeof params?.dynamic === 'undefined' ? true : params.dynamic\r\n\r\n  function snap(value: number) {\r\n    return Math.round(value / size) * size\r\n  }\r\n\r\n  area.addPipe(context => {\r\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\r\n    if (dynamic && context.type === 'nodetranslate') {\r\n      const { position } = context.data\r\n      const x = snap(position.x)\r\n      const y = snap(position.y)\r\n\r\n      return {\r\n        ...context,\r\n        data: {\r\n          ...context.data,\r\n          position: { x, y }\r\n        }\r\n      }\r\n    }\r\n    if (!dynamic && context.type === 'nodedragged') {\r\n      const view = area.nodeViews.get(context.data.id)\r\n\r\n      if (view) {\r\n        const { x, y } = view.position\r\n\r\n        view.translate(snap(x), snap(y))\r\n      }\r\n    }\r\n    return context\r\n  })\r\n}\r\n","import { NodeEditor } from 'rete'\r\n\r\nimport { AreaPlugin } from '..'\r\nimport { getBoundingBox } from '../utils'\r\nimport { NodeRef, SchemesWithSizes } from './shared/types'\r\nimport { getNodesRect } from './shared/utils'\r\n\r\n/**\r\n * Zoom extension parameters\r\n */\r\nexport type Params = {\r\n  /** Set gap between nodes and the viewport border */\r\n  scale?: number\r\n}\r\n\r\n/**\r\n * Zooms the area to fit the given nodes\r\n * @param plugin The area plugin\r\n * @param nodes The nodes to fit\r\n * @param params The zoom parameters\r\n */\r\n// eslint-disable-next-line max-statements, max-len\r\nexport async function zoomAt<Schemes extends SchemesWithSizes, K>(plugin: AreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[], params?: Params) {\r\n  const { scale = 0.9 } = params || {}\r\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\r\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\r\n  const rects = getNodesRect(list, plugin.nodeViews)\r\n  const boundingBox = getBoundingBox(rects)\r\n  const [w, h] = [plugin.container.clientWidth, plugin.container.clientHeight]\r\n  const [kw, kh] = [w / boundingBox.width, h / boundingBox.height]\r\n  const k = Math.min(kh * scale, kw * scale, 1)\r\n\r\n  plugin.area.transform.x = w / 2 - boundingBox.center.x * k\r\n  plugin.area.transform.y = h / 2 - boundingBox.center.y * k\r\n  await plugin.area.zoom(k, 0, 0)\r\n}\r\n","/**\r\n * Area extensions\r\n * @priority 7\r\n * @module Extensions\r\n */\r\nexport { getBoundingBox } from './bounding-box'\r\nexport { simpleNodesOrder } from './order'\r\nexport type { Params as Restrictor } from './restrictor'\r\nexport { restrictor } from './restrictor'\r\nexport { accumulateOnCtrl, selectableNodes, Selector, selector } from './selectable'\r\nexport { showInputControl } from './show-input-control'\r\nexport type { Params as SnapGrid } from './snap'\r\nexport { snapGrid } from './snap'\r\nexport type { Params as ZoomAt } from './zoom-at'\r\nexport { zoomAt } from './zoom-at'\r\n","import { BaseSchemes, ConnectionId, NodeId, Root } from 'rete'\r\n\r\nimport { type AreaFilter, Area, TranslateEventParams, ZoomEventParams } from './area'\r\nimport { BaseArea, BaseAreaPlugin } from './base'\r\nimport { ConnectionView } from './connection-view'\r\nimport { ElementsHolder } from './elements-holder'\r\nimport { NodeView } from './node-view'\r\nimport { GetRenderTypes, Position, RenderMeta } from './types'\r\n\r\nexport type { AreaFilter } from './area'\r\nexport { Area } from './area'\r\nexport type { BaseArea } from './base'\r\nexport { BaseAreaPlugin } from './base'\r\nexport { Drag } from './drag'\r\nexport * as AreaExtensions from './extensions'\r\nexport { NodeView } from './node-view'\r\nexport type { RenderSignal } from './types'\r\nexport type { PointerListener } from './utils'\r\nexport { usePointerListener } from './utils'\r\nexport { Zoom } from './zoom'\r\n\r\n/**\r\n * A union of all possible signals that can be emitted by the area\r\n * @priority 9\r\n */\r\nexport type Area2D<Schemes extends BaseSchemes> =\r\n  | BaseArea<Schemes>\r\n  | { type: 'translate', data: TranslateEventParams }\r\n  | { type: 'translated', data: TranslateEventParams }\r\n  | { type: 'zoom', data: ZoomEventParams }\r\n  | { type: 'zoomed', data: ZoomEventParams }\r\n  | { type: 'resized', data: { event: Event } }\r\n\r\nexport type Area2DInherited<Schemes extends BaseSchemes, ExtraSignals = never> = [Area2D<Schemes> | ExtraSignals, Root<Schemes>]\r\n\r\n/**\r\n * A plugin that provides a 2D area for nodes and connections\r\n * @priority 8\r\n * @emits render\r\n * @emits rendered\r\n * @emits unmount\r\n * @listens nodecreated\r\n * @listens noderemoved\r\n * @listens connectioncreated\r\n * @listens connectionremoved\r\n */\r\nexport class AreaPlugin<Schemes extends BaseSchemes, ExtraSignals = never> extends BaseAreaPlugin<Schemes, Area2D<Schemes> | ExtraSignals> {\r\n  public nodeViews = new Map<NodeId, NodeView>()\r\n  public connectionViews = new Map<ConnectionId, ConnectionView>()\r\n  public area: Area\r\n  private elements = new ElementsHolder<HTMLElement, Extract<Area2D<Schemes>, { type: 'render' }>['data'] & RenderMeta>()\r\n\r\n  constructor(public container: HTMLElement, filter?: AreaFilter) {\r\n    super('area')\r\n    container.style.overflow = 'hidden'\r\n    container.addEventListener('contextmenu', this.onContextMenu)\r\n\r\n    // eslint-disable-next-line max-statements\r\n    this.addPipe(context => {\r\n      if (!context || !(typeof context === 'object' && 'type' in context)) return context\r\n      if (context.type === 'nodecreated') {\r\n        this.addNodeView(context.data)\r\n      }\r\n      if (context.type === 'noderemoved') {\r\n        this.removeNodeView(context.data.id)\r\n      }\r\n      if (context.type === 'connectioncreated') {\r\n        this.addConnectionView(context.data)\r\n      }\r\n      if (context.type === 'connectionremoved') {\r\n        this.removeConnectionView(context.data.id)\r\n      }\r\n      if (context.type === 'render') {\r\n        this.elements.set(context.data)\r\n      }\r\n      if (context.type === 'unmount') {\r\n        this.elements.delete(context.data.element)\r\n      }\r\n      return context\r\n    })\r\n    this.area = new Area(\r\n      container,\r\n      {\r\n        zoomed: params => this.emit({ type: 'zoomed', data: params }),\r\n        pointerDown: (position, event) => this.emit({ type: 'pointerdown', data: { position, event } }),\r\n        pointerMove: (position, event) => this.emit({ type: 'pointermove', data: { position, event } }),\r\n        pointerUp: (position, event) => this.emit({ type: 'pointerup', data: { position, event } }),\r\n        resize: event => this.emit({ type: 'resized', data: { event } }),\r\n        translated: params => this.emit({ type: 'translated', data: params }),\r\n        reordered: element => this.emit({ type: 'reordered', data: { element } })\r\n      },\r\n      {\r\n        translate: params => this.emit({ type: 'translate', data: params }),\r\n        zoom: params => this.emit({ type: 'zoom', data: params })\r\n      },\r\n      filter || {\r\n        zoom: {\r\n          dblclick: (num) => num\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  private onContextMenu = (event: MouseEvent) => {\r\n    this.emit({ type: 'contextmenu', data: { event, context: 'root' } })\r\n  }\r\n\r\n  public addNodeView(node: Schemes['Node']) {\r\n    const { id } = node\r\n    const view = new NodeView(\r\n      () => this.area.transform.k,\r\n      {\r\n        picked: () => this.emit({ type: 'nodepicked', data: { id } }),\r\n        translated: data => this.emit({ type: 'nodetranslated', data: { id, ...data } }),\r\n        dragged: () => this.emit({ type: 'nodedragged', data: node }),\r\n        contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: node } }),\r\n        resized: ({ size }) => this.emit({ type: 'noderesized', data: { id: node.id, size } })\r\n      },\r\n      {\r\n        translate: data => this.emit({ type: 'nodetranslate', data: { id, ...data } }),\r\n        resize: ({ size }) => this.emit({ type: 'noderesize', data: { id: node.id, size } })\r\n      }\r\n    )\r\n\r\n    this.nodeViews.set(id, view)\r\n    this.area.content.add(view.element)\r\n\r\n    this.emit({\r\n      type: 'render',\r\n      data: { element: view.element, type: 'node', payload: node }\r\n    })\r\n\r\n    return view\r\n  }\r\n\r\n  public removeNodeView(id: NodeId) {\r\n    const view = this.nodeViews.get(id)\r\n\r\n    if (view) {\r\n      this.emit({ type: 'unmount', data: { element: view.element } })\r\n      this.nodeViews.delete(id)\r\n      this.area.content.remove(view.element)\r\n    }\r\n  }\r\n\r\n  public addConnectionView(connection: Schemes['Connection']) {\r\n    const view = new ConnectionView({\r\n      contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: connection } })\r\n    })\r\n\r\n    this.connectionViews.set(connection.id, view)\r\n    this.area.content.add(view.element)\r\n\r\n    this.emit({\r\n      type: 'render',\r\n      data: { element: view.element, type: 'connection', payload: connection }\r\n    })\r\n\r\n    return view\r\n  }\r\n\r\n  public removeConnectionView(id: ConnectionId) {\r\n    const view = this.connectionViews.get(id)\r\n\r\n    if (view) {\r\n      this.emit({ type: 'unmount', data: { element: view.element } })\r\n      this.connectionViews.delete(id)\r\n      this.area.content.remove(view.element)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Force update rendered element by id (node, connection, etc.)\r\n   * @param type Element type\r\n   * @param id Element id\r\n   * @emits render\r\n   */\r\n  public async update(type: GetRenderTypes<Area2D<Schemes>> | GetRenderTypes<ExtraSignals>, id: string) {\r\n    const data = this.elements.get(type, id)\r\n\r\n    if (data) await this.emit({ type: 'render', data } as Area2D<Schemes>)\r\n  }\r\n\r\n  /**\r\n   * Resize node\r\n   * @param id Node id\r\n   * @param width Desired width\r\n   * @param height Desired height\r\n   */\r\n  public async resize(id: NodeId, width: number, height: number) {\r\n    const view = this.nodeViews.get(id)\r\n\r\n    if (view) return await view.resize(width, height)\r\n  }\r\n\r\n  /**\r\n   * Translate node to position\r\n   * @param id Node id\r\n   * @param position Position\r\n   */\r\n  public async translate(id: NodeId, { x, y }: Position) {\r\n    const view = this.nodeViews.get(id)\r\n\r\n    if (view) return await view.translate(x, y)\r\n  }\r\n\r\n  /**\r\n   * Destroy all views and remove all event listeners\r\n   */\r\n  public destroy() {\r\n    this.container.removeEventListener('contextmenu', this.onContextMenu)\r\n    Array.from(this.connectionViews.keys()).forEach(id => this.removeConnectionView(id))\r\n    Array.from(this.nodeViews.keys()).forEach(id => this.removeNodeView(id))\r\n    this.area.destroy()\r\n  }\r\n}\r\n"],"names":["Content","reordered","_classCallCheck","holder","document","createElement","style","transformOrigin","_createClass","key","value","getPointerFrom","event","_this$holder$getBound","getBoundingClientRect","left","top","x","clientX","y","clientY","add","element","appendChild","_reorder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","target","next","wrap","_callee$","_context","prev","contains","Error","insertBefore","stop","reorder","_x","_x2","apply","arguments","remove","removeChild","usePointerListener","handlers","move","up","window","removeEventListener","down","addEventListener","destroy","min","arr","length","Math","_toConsumableArray","max","getBoundingBox","rects","map","rect","position","right","width","bottom","height","abs","center","Drag","guards","_this","_defineProperty","e","stopPropagation","pointerStart","pageX","pageY","startPosition","_objectSpread","config","getCurrentPosition","events","start","preventDefault","delta","zoom","getZoom","translate","drag","pointerType","button","initialize","touchAction","pointerListener","Zoom","intensity","filter","_this$element$getBoun","isNegative","deltaY","ox","oy","onzoom","pointers","push","p","pointerId","isTranslating","_this$element$getBoun2","_this$getTouches","getTouches","cx","cy","distance","previous","_this$element$getBoun3","dblclick","container","wheel","contextmenu","touches","_ref","x1","y1","_ref2","x2","y2","sqrt","pow","Area","k","setPointerFrom","pointerDown","pointer","pointerMove","pointerUp","resize","zoomHandler","source","transform","update","content","setZoomHandler","setDragHandler","pointerdown","pointermove","pointerup","_this$transform","concat","_this2","dragHandler","onTranslate","onZoom","_this$content$getPoin","_translate","result","sent","abrupt","data","translated","_zoom2","_callee2","d","_args2","_callee2$","_context2","undefined","zoomed","_x3","innerHTML","BaseAreaPlugin","_Scope","_callSuper","_inherits","Scope","ConnectionView","ElementsHolder","WeakMap","Map","set","context","type","payload","id","views","viewsElements","get","_delete","_view$payload","view","NodeView","translation","size","el","querySelector","HTMLElement","resized","_x4","picked","dragged","getNodesRect","nodes","node","item","clientWidth","clientHeight","plugin","editor","parentScope","NodeEditor","list","_typeof","getNode","nodeViews","getBBox","simpleNodesOrder","base","area","addPipe","connectionViews","firstChild","restrictor","params","scaling","restrictZoom","restrictPosition","nextPosition","accumulateOnCtrl","pressed","keydown","keyup","active","Selector","isSelected","entity","entities","has","label","accumulate","unselectAll","unselect","Array","from","values","forEach","dx","dy","isPicked","pick","pickId","release","selector","selectableNodes","core","options","getEditor","twitch","selectNode","selected","unselectNode","nodeId","current","pickedId","accumulating","_context$data","select","showInputControl","visible","updateInputControlVisibility","targetInput","input","inputs","showControl","connections","getConnections","hasAnyConnection","Boolean","find","connection","snapGrid","dynamic","snap","round","_view$position","zoomAt","_zoomAt","_ref$scale","scale","boundingBox","w","h","kw","kh","AreaPlugin","_BaseAreaPlugin","emit","overflow","onContextMenu","addNodeView","removeNodeView","addConnectionView","removeConnectionView","elements","num","_this3","_update","_resize","_x5","_callee3","_ref3","_callee3$","_context3","_x6","_x7","_this4","keys"],"mappings":"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"}