{"version":3,"file":"rete-connection-plugin.min.js","sources":["src/pseudoconnection.ts","src/utils.ts","src/flow/base.ts","src/flow/utils.ts","src/flow/builtin/bidirect.ts","src/flow/builtin/classic/sync-connections.ts","src/flow/builtin/classic/index.ts","src/presets/classic.ts","src/index.ts"],"sourcesContent":["import { getUID } from 'rete'\r\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\r\n\r\nimport { ClassicScheme, Position, SocketData } from './types'\r\n\r\n/**\r\n * Create pseudoconnection. Used to trigger rendering of connection that is being created by user.\r\n * Has additional `isPseudo` property in payload.\r\n * @param extra Extra payload to add to connection\r\n */\r\nexport function createPseudoconnection<Schemes extends ClassicScheme, K>(extra?: Partial<Schemes['Connection']>) {\r\n  let element: HTMLElement | null = null\r\n  let id: string | null = null\r\n\r\n  function unmount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\r\n    if (id) {\r\n      areaPlugin.removeConnectionView(id)\r\n    }\r\n    element = null\r\n    id = null\r\n  }\r\n  function mount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\r\n    unmount(areaPlugin)\r\n    id = `pseudo_${getUID()}`\r\n  }\r\n\r\n  return {\r\n    isMounted() {\r\n      return Boolean(id)\r\n    },\r\n    mount,\r\n    // eslint-disable-next-line complexity\r\n    render(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>, { x, y }: Position, data: SocketData) {\r\n      const isOutput = data.side === 'output'\r\n      const pointer = { x: x + (isOutput ? -3 : 3), y } // fix hover of underlying elements\r\n\r\n      if (!id) throw new Error('pseudo connection id wasn\\'t generated')\r\n\r\n      const payload = isOutput ? {\r\n        id,\r\n        source: data.nodeId,\r\n        sourceOutput: data.key,\r\n        target: '',\r\n        targetInput: '',\r\n        ...(extra || {})\r\n      } : {\r\n        id,\r\n        target: data.nodeId,\r\n        targetInput: data.key,\r\n        source: '',\r\n        sourceOutput: '',\r\n        ...(extra || {})\r\n      }\r\n\r\n      if (!element) {\r\n        const view = areaPlugin.addConnectionView(payload)\r\n\r\n        element = view.element\r\n      }\r\n\r\n      if (!element) return\r\n\r\n      areaPlugin.emit({\r\n        type: 'render', data: {\r\n          element,\r\n          type: 'connection',\r\n          payload,\r\n          ...(isOutput ? { end: pointer } : { start: pointer })\r\n        }\r\n      })\r\n    },\r\n    unmount\r\n  }\r\n}\r\n","import { SocketData } from './types'\r\n/**\r\n * @param elements list of Element returned by document.elementsFromPoint\r\n */\r\nexport function findSocket(socketsCache: WeakMap<Element, SocketData>, elements: Element[]) {\r\n  for (const element of elements) {\r\n    const found = socketsCache.get(element)\r\n\r\n    if (found) {\r\n      return found\r\n    }\r\n  }\r\n}\r\n","import { BaseSchemes, NodeEditor, Scope } from 'rete'\r\n\r\nimport { Connection, SocketData } from '../types'\r\n\r\nexport type Context<Schemes extends BaseSchemes, K extends any[]> = {\r\n    editor: NodeEditor<Schemes>\r\n    scope: Scope<Connection, K>\r\n    socketsCache: Map<Element, SocketData>\r\n}\r\nexport type EventType = 'up' | 'down'\r\nexport type PickParams = { socket: SocketData, event: EventType }\r\n\r\nexport abstract class Flow<Schemes extends BaseSchemes, K extends any[]> {\r\n    public abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\r\n    public abstract getPickedSocket(): SocketData | undefined\r\n    public abstract drop(context: Context<Schemes, K>): void\r\n}\r\n","import { getUID } from 'rete'\r\n\r\nimport { ClassicScheme, SocketData } from '../types'\r\nimport { Context, PickParams } from './base'\r\n\r\nexport interface StateContext<Schemes extends ClassicScheme, K extends any[]> {\r\n  currentState: State<Schemes, K>\r\n  switchTo(state: State<Schemes, K>): void\r\n}\r\n\r\nexport abstract class State<Schemes extends ClassicScheme, K extends any[]> {\r\n  context!: StateContext<Schemes, K>\r\n  initial: SocketData | undefined\r\n\r\n  setContext(context: StateContext<Schemes, K>) {\r\n    this.context = context\r\n  }\r\n\r\n  abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\r\n  abstract drop(context: Context<Schemes, K>): void\r\n}\r\n\r\nexport function getSourceTarget(initial: SocketData, socket: SocketData) {\r\n  const forward = initial.side === 'output' && socket.side === 'input'\r\n  const backward = initial.side === 'input' && socket.side === 'output'\r\n  const [source, target] = forward\r\n    ? [initial, socket]\r\n    : (backward ? [socket, initial] : [])\r\n\r\n  if (source && target) return [source, target]\r\n}\r\n\r\nexport function canMakeConnection(initial: SocketData, socket: SocketData) {\r\n  return Boolean(getSourceTarget(initial, socket))\r\n}\r\n\r\nexport function makeConnection<Schemes extends ClassicScheme, K extends any[]>(initial: SocketData, socket: SocketData, context: Context<Schemes, K>) {\r\n  const [source, target] = getSourceTarget(initial, socket) || [null, null]\r\n\r\n  if (source && target) {\r\n    context.editor.addConnection({\r\n      id: getUID(),\r\n      source: source.nodeId,\r\n      sourceOutput: source.key,\r\n      target: target.nodeId,\r\n      targetInput: target.key\r\n    })\r\n    return true\r\n  }\r\n}\r\n","import { ClassicScheme, SocketData } from '../../types'\r\nimport { Context, Flow, PickParams } from '../base'\r\nimport { makeConnection as defaultMakeConnection, State, StateContext } from '../utils'\r\n\r\n/**\r\n * Bidirect flow params\r\n */\r\nexport type BidirectParams<Schemes extends ClassicScheme> = {\r\n  /** If true, user can pick a pseudo-connection by clicking on socket, not only by pointerdown */\r\n  pickByClick: boolean\r\n  /** Custom function to make connection */\r\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\r\n}\r\n\r\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\r\n  constructor(public initial: SocketData, private params: BidirectParams<Schemes>) {\r\n    super()\r\n  }\r\n\r\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\r\n    if (this.params.makeConnection(this.initial, socket, context)) {\r\n      this.drop(context, socket, true)\r\n    } else if (!this.params.pickByClick) {\r\n      this.drop(context, socket)\r\n    }\r\n  }\r\n\r\n  drop(context: Context<ClassicScheme, K>, socket: SocketData | null = null, created = false): void {\r\n    if (this.initial) {\r\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\r\n    }\r\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\r\n  }\r\n}\r\n\r\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\r\n  constructor(private params: BidirectParams<Schemes>) {\r\n    super()\r\n  }\r\n\r\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\r\n    if (event === 'down') {\r\n      if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\r\n        this.context.switchTo(new Picked(socket, this.params))\r\n      } else {\r\n        this.drop(context)\r\n      }\r\n    }\r\n  }\r\n\r\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\r\n    if (this.initial) {\r\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\r\n    }\r\n    delete this.initial\r\n  }\r\n}\r\n\r\n/**\r\n * Bidirect flow. User can pick a socket and connect it by releasing mouse button.\r\n * More simple than classic flow, but less functional (can't remove connection by clicking on input socket).\r\n */\r\nexport class BidirectFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\r\n  currentState!: State<Schemes, K>\r\n\r\n  constructor(params?: Partial<BidirectParams<Schemes>>) {\r\n    const pickByClick = Boolean(params?.pickByClick)\r\n    const makeConnection = params?.makeConnection || defaultMakeConnection\r\n\r\n    this.switchTo(new Idle({ pickByClick, makeConnection }))\r\n  }\r\n\r\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\r\n    await this.currentState.pick(params, context)\r\n  }\r\n\r\n  public getPickedSocket() {\r\n    return this.currentState.initial\r\n  }\r\n\r\n  public drop(context: Context<Schemes, K>) {\r\n    this.currentState.drop(context)\r\n  }\r\n\r\n  public switchTo(state: State<Schemes, K>): void {\r\n    state.setContext(this)\r\n    this.currentState = state\r\n  }\r\n}\r\n","import { NodeEditor } from 'rete'\r\n\r\nimport { ClassicScheme, SocketData } from '../../../types'\r\n\r\nfunction findPort<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\r\n  const node = editor.getNode(socket.nodeId)\r\n\r\n  if (!node) throw new Error('cannot find node')\r\n\r\n  const list = socket.side === 'input' ? node.inputs : node.outputs\r\n\r\n  return list[socket.key]\r\n}\r\nfunction findConnections<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\r\n  const { nodeId, side, key } = socket\r\n\r\n  return editor.getConnections().filter(connection => {\r\n    if (side === 'input') {\r\n      return connection.target === nodeId && connection.targetInput === key\r\n    }\r\n    if (side === 'output') {\r\n      return connection.source === nodeId && connection.sourceOutput === key\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Remove existing connections if Port doesnt allow multiple connections\r\n */\r\nexport function syncConnections<Schemes extends ClassicScheme>(sockets: SocketData[], editor: NodeEditor<Schemes>) {\r\n  const connections: Schemes['Connection'][] = sockets.map(socket => {\r\n    const port = findPort(socket, editor)\r\n    const multiple = port?.multipleConnections\r\n\r\n    if (multiple) return []\r\n\r\n    return findConnections(socket, editor)\r\n  }).flat()\r\n\r\n  return {\r\n    commit() {\r\n      const uniqueIds = Array.from(new Set(connections.map(({ id }) => id)))\r\n\r\n      uniqueIds.forEach(id => editor.removeConnection(id))\r\n    }\r\n  }\r\n}\r\n","\r\nimport { ClassicScheme, SocketData } from '../../../types'\r\nimport { Context, Flow, PickParams } from '../../base'\r\nimport {\r\n  canMakeConnection as defaultCanMakeConnection, makeConnection as defaultMakeConnection, State, StateContext\r\n} from '../../utils'\r\nimport { syncConnections } from './sync-connections'\r\n\r\n/**\r\n * Classic flow params\r\n */\r\nexport type ClassicParams<Schemes extends ClassicScheme> = {\r\n  /** Custom function to check if connection can be made */\r\n  canMakeConnection: (from: SocketData, to: SocketData) => boolean | undefined\r\n  /** Custom function to make connection */\r\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\r\n}\r\n\r\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\r\n  constructor(public initial: SocketData, private params: ClassicParams<Schemes>) {\r\n    super()\r\n  }\r\n\r\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\r\n    if (this.params.canMakeConnection(this.initial, socket)) {\r\n      syncConnections([this.initial, socket], context.editor).commit()\r\n      const created = this.params.makeConnection(this.initial, socket, context)\r\n\r\n      this.drop(context, created ? socket : null, created)\r\n    }\r\n  }\r\n\r\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\r\n    if (this.initial) {\r\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\r\n    }\r\n    this.context.switchTo(new Idle(this.params))\r\n  }\r\n}\r\n\r\nclass PickedExisting<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\r\n  initial!: SocketData\r\n  outputSocket: SocketData\r\n\r\n  constructor(public connection: Schemes['Connection'], private params: ClassicParams<Schemes>, context: Context<Schemes, K>) {\r\n    super()\r\n    const outputSocket = Array.from(context.socketsCache.values()).find(data => {\r\n      return data.nodeId === this.connection.source\r\n        && data.side === 'output'\r\n        && data.key === this.connection.sourceOutput\r\n    })\r\n\r\n    if (!outputSocket) throw new Error('cannot find output socket')\r\n\r\n    this.outputSocket = outputSocket\r\n  }\r\n\r\n  async init(context: Context<Schemes, K>) {\r\n    context.scope.emit({ type: 'connectionpick', data: { socket: this.outputSocket } }).then(response => {\r\n      if (response) {\r\n        context.editor.removeConnection(this.connection.id)\r\n        this.initial = this.outputSocket\r\n      } else {\r\n        this.drop(context)\r\n      }\r\n    })\r\n  }\r\n\r\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\r\n    if (this.initial && !(socket.side === 'input' && this.connection.target === socket.nodeId && this.connection.targetInput === socket.key)) {\r\n      if (this.params.canMakeConnection(this.initial, socket)) {\r\n        syncConnections([this.initial, socket], context.editor).commit()\r\n        const created = this.params.makeConnection(this.initial, socket, context)\r\n\r\n        this.drop(context, created ? socket : null, created)\r\n      }\r\n    } else if (event === 'down') {\r\n      if (this.initial) {\r\n        syncConnections([this.initial, socket], context.editor).commit()\r\n        const created = this.params.makeConnection(this.initial, socket, context)\r\n\r\n        this.drop(context, created ? socket : null, created)\r\n      }\r\n    }\r\n  }\r\n\r\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\r\n    if (this.initial) {\r\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\r\n    }\r\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\r\n  }\r\n}\r\n\r\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\r\n  constructor(private params: ClassicParams<Schemes>) {\r\n    super()\r\n  }\r\n\r\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\r\n    if (event !== 'down') return\r\n    if (socket.side === 'input') {\r\n      const connection = context\r\n        .editor.getConnections()\r\n        .find(item => item.target === socket.nodeId && item.targetInput === socket.key)\r\n\r\n      if (connection) {\r\n        const state = new PickedExisting(connection, this.params, context)\r\n\r\n        await state.init(context)\r\n        this.context.switchTo(state)\r\n        return\r\n      }\r\n    }\r\n\r\n    if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\r\n      this.context.switchTo(new Picked(socket, this.params))\r\n    } else {\r\n      this.drop(context)\r\n    }\r\n  }\r\n\r\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\r\n    if (this.initial) {\r\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\r\n    }\r\n    delete this.initial\r\n  }\r\n}\r\n\r\n/**\r\n * Classic flow. User can pick/click a socket and connect it by releasing/clicking on another socket.\r\n * If connection already exists and user clicks on input socket, connection will be removed.\r\n */\r\nexport class ClassicFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\r\n  currentState!: State<Schemes, K>\r\n\r\n  constructor(params?: Partial<ClassicParams<Schemes>>) {\r\n    const canMakeConnection = params?.canMakeConnection || defaultCanMakeConnection\r\n    const makeConnection = params?.makeConnection || defaultMakeConnection\r\n\r\n    this.switchTo(new Idle<Schemes, K>({ canMakeConnection, makeConnection }))\r\n  }\r\n\r\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\r\n    await this.currentState.pick(params, context)\r\n  }\r\n\r\n  public getPickedSocket() {\r\n    return this.currentState.initial\r\n  }\r\n\r\n  public switchTo(state: State<Schemes, K>): void {\r\n    state.setContext(this)\r\n    this.currentState = state\r\n  }\r\n\r\n  public drop(context: Context<Schemes, K>) {\r\n    this.currentState.drop(context)\r\n  }\r\n}\r\n","import { ClassicFlow, ClassicParams } from '../flow'\r\nimport { ClassicScheme } from '../types'\r\n\r\n/**\r\n * Classic preset. Uses `ClassicFlow` for managing connections by user\r\n */\r\nexport function setup<Schemes extends ClassicScheme>(params?: Partial<ClassicParams<Schemes>>) {\r\n  return () => new ClassicFlow(params)\r\n}\r\n","import { NodeEditor, Scope } from 'rete'\r\nimport { BaseArea, BaseAreaPlugin, RenderSignal } from 'rete-area-plugin'\r\n\r\nimport { Flow } from './flow'\r\nimport { EventType } from './flow/base'\r\nimport { createPseudoconnection } from './pseudoconnection'\r\nimport { ClassicScheme, Connection, Position, Preset, Side, SocketData } from './types'\r\nimport { findSocket } from './utils'\r\n\r\nexport * from './flow'\r\nexport * as Presets from './presets'\r\nexport { createPseudoconnection } from './pseudoconnection'\r\nexport type { Connection, ConnectionExtra, Preset, Side, SocketData } from './types'\r\n\r\ntype Requires =\r\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\r\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\r\n  | RenderSignal<'socket', {\r\n    nodeId: string,\r\n    side: Side,\r\n    key: string\r\n  }>\r\n  | { type: 'unmount', data: { element: HTMLElement } }\r\n\r\nexport interface ConnectionPluginProps {\r\n  // 根据起点socket的信息，判断这个socket是否可以发出连线（比如需要限制input侧不可以连线）\r\n  canMakePreudo(socketData:SocketData):boolean\r\n}\r\n\r\n/**\r\n * Connection plugin. Responsible for user interaction with connections (creation, deletion)\r\n * @priority 9\r\n * @emits connectionpick\r\n * @emits connectiondrop\r\n * @listens pointermove\r\n * @listens pointerup\r\n * @listens render\r\n * @listens unmount\r\n */\r\nexport class ConnectionPlugin<Schemes extends ClassicScheme, K = Requires> extends Scope<Connection, [Requires | K]> {\r\n  presets: Preset<Schemes>[] = []\r\n  private areaPlugin!: BaseAreaPlugin<Schemes, BaseArea<Schemes>>\r\n  private editor!: NodeEditor<Schemes>\r\n  private currentFlow: Flow<Schemes, any[]> | null = null\r\n  private preudoconnection = createPseudoconnection({ isPseudo: true })\r\n  private socketsCache = new Map<Element, SocketData>()\r\n  private props: ConnectionPluginProps\r\n\r\n  constructor(props?:ConnectionPluginProps) {\r\n    super('connection')\r\n\r\n    this.props = props || {\r\n      canMakePreudo: () => true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add preset to the plugin\r\n   * @param preset Preset to add\r\n   */\r\n  public addPreset(preset: Preset<Schemes>) {\r\n    this.presets.push(preset)\r\n  }\r\n\r\n  private findPreset(data: SocketData) {\r\n    for (const preset of this.presets) {\r\n      const flow = preset(data)\r\n\r\n      if (flow) return flow\r\n    }\r\n    return null\r\n  }\r\n\r\n  update() {\r\n    if (!this.currentFlow) return\r\n    const socket = this.currentFlow.getPickedSocket()\r\n\r\n    if (socket) {\r\n      this.preudoconnection.render(this.areaPlugin, this.areaPlugin.area.pointer, socket)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Drop pseudo-connection if exists\r\n   * @emits connectiondrop\r\n   */\r\n  drop() {\r\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\r\n\r\n    if (this.currentFlow) {\r\n      this.currentFlow.drop(flowContext)\r\n      this.preudoconnection.unmount(this.areaPlugin)\r\n      this.currentFlow = null\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements\r\n  async pick(event: PointerEvent, type: EventType) {\r\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\r\n    const pointedElements = document.elementsFromPoint(event.clientX, event.clientY)\r\n    const pickedSocket = findSocket(this.socketsCache, pointedElements)\r\n\r\n    if (pickedSocket) {\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n      this.currentFlow = this.currentFlow || this.findPreset(pickedSocket)\r\n\r\n      if (this.currentFlow) {\r\n        if (!this.currentFlow.getPickedSocket() && !this.props.canMakePreudo(pickedSocket)) {\r\n          return\r\n        }\r\n        await this.currentFlow.pick({ socket: pickedSocket, event: type }, flowContext)\r\n        this.preudoconnection.mount(this.areaPlugin)\r\n      }\r\n    } else if (this.currentFlow) {\r\n      this.currentFlow.drop(flowContext)\r\n    }\r\n    if (this.currentFlow && !this.currentFlow.getPickedSocket()) {\r\n      this.preudoconnection.unmount(this.areaPlugin)\r\n      this.currentFlow = null\r\n    }\r\n    this.update()\r\n  }\r\n\r\n  setParent(scope: Scope<Requires | K>): void {\r\n    super.setParent(scope)\r\n    this.areaPlugin = this.parentScope<BaseAreaPlugin<Schemes, BaseArea<Schemes>>>(BaseAreaPlugin)\r\n    this.editor = this.areaPlugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\r\n\r\n    const pointerdownSocket = (e: PointerEvent) => {\r\n      this.pick(e, 'down')\r\n    }\r\n\r\n    // eslint-disable-next-line max-statements\r\n    this.addPipe(context => {\r\n      if (!context || typeof context !== 'object' || !('type' in context)) return context\r\n\r\n      if (context.type === 'pointermove') {\r\n        this.update()\r\n      } else if (context.type === 'pointerup') {\r\n        this.pick(context.data.event, 'up')\r\n      } else if (context.type === 'render') {\r\n        if (context.data.type === 'socket') {\r\n          const { element } = context.data\r\n\r\n          element.addEventListener('pointerdown', pointerdownSocket)\r\n          this.socketsCache.set(element, context.data)\r\n        }\r\n      } else if (context.type === 'unmount') {\r\n        const { element } = context.data\r\n\r\n        element.removeEventListener('pointerdown', pointerdownSocket)\r\n        this.socketsCache.delete(element)\r\n      }\r\n      return context\r\n    })\r\n  }\r\n}\r\n"],"names":["createPseudoconnection","extra","element","id","unmount","areaPlugin","removeConnectionView","isMounted","Boolean","mount","concat","getUID","render","_ref","data","x","y","isOutput","side","pointer","Error","payload","_objectSpread","source","nodeId","sourceOutput","key","target","targetInput","view","addConnectionView","emit","type","end","start","findSocket","socketsCache","elements","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","found","get","err","e","f","Flow","_createClass","_classCallCheck","State","context","this","getSourceTarget","initial","socket","forward","backward","_ref2","_slicedToArray","canMakeConnection","makeConnection","_ref4","editor","addConnection","Picked","_State","params","_this","_callSuper","_inherits","_pick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","drop","pickByClick","stop","_x","_x2","apply","arguments","length","undefined","created","scope","switchTo","Idle","_State2","_this2","_pick2","_callee2","_context2","event","sent","_x3","_x4","BidirectFlow","defaultMakeConnection","_pick3","_callee3","_context3","currentState","pick","_x5","_x6","state","setContext","syncConnections","sockets","connections","map","port","node","getNode","inputs","outputs","findPort","multipleConnections","getConnections","filter","connection","findConnections","flat","commit","Array","from","Set","forEach","removeConnection","PickedExisting","outputSocket","values","find","_init","_this3","then","response","_created","_State3","_this4","_callee4","_ref3","_connection","_context4","abrupt","item","init","_x7","ClassicFlow","defaultCanMakeConnection","_pick4","_callee5","_context5","_x8","_x9","ConnectionPlugin","_Scope","props","_defineProperty","isPseudo","Map","canMakePreudo","preset","presets","push","flow","currentFlow","getPickedSocket","preudoconnection","area","flowContext","pointedElements","pickedSocket","document","elementsFromPoint","clientX","clientY","preventDefault","stopPropagation","findPreset","update","_get","_getPrototypeOf","prototype","call","parentScope","BaseAreaPlugin","NodeEditor","pointerdownSocket","addPipe","_typeof","addEventListener","set","removeEventListener","Scope"],"mappings":"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"}